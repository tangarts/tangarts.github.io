<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>tangarts - blog</title><link href="/" rel="alternate"></link><link href="/feeds/blog.atom.xml" rel="self"></link><id>/</id><updated>2022-01-01T00:00:00+00:00</updated><entry><title>A Gentle Introduction to Inflation</title><link href="/a-gentle-introduction-to-inflation.html" rel="alternate"></link><published>2021-12-29T18:52:00+00:00</published><updated>2021-12-29T18:52:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-12-29:/a-gentle-introduction-to-inflation.html</id><summary type="html">&lt;p&gt;"Back in my day Freddos were 10p a pop. Now look at the price, two and a half times more than what used to pay. And every January, we brace a little for the increase price of living: potatoes, peas, and toilet paper. Whilst our wages stay the same."&lt;/p&gt;
&lt;p&gt;Imagine …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"Back in my day Freddos were 10p a pop. Now look at the price, two and a half times more than what used to pay. And every January, we brace a little for the increase price of living: potatoes, peas, and toilet paper. Whilst our wages stay the same."&lt;/p&gt;
&lt;p&gt;Imagine, 20 years ago, a fiver would have got netted you 50 Freddos. That's enough Freddos to keep you busy for a while, whatever you're doing. Now, finding the same five pound note, going to the bank, exchanging it for a crisp, polymer note and heading to Sainsburys. That note isn't going far, only 20 Freddos. That's not fair.&lt;/p&gt;
&lt;p&gt;Let's go back 20 years ago again. This time with the knowledge of increasing Freddo prices we have a goal to not get stung by the 250% price hike in 20 years. Playing it safe you look to the bank. Each year your bank gives you some money (interest) so that you can store your money with them. No risks involved, better than keeping it under the mattress right? &lt;/p&gt;
&lt;p&gt;Not quite.&lt;/p&gt;
&lt;h2&gt;Perverse incentives&lt;/h2&gt;
&lt;p&gt;Everything in life has risk. Despite some banks lasting for over a century, crashes do happen and people lose money. In the short term, storing your money with a bank does pose a risk with fraudsters and compromised account details. But the same is true for house thieves peeking under your mattress. The payout, or interest given to you by the bank can be thought of as twofold:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The bank pays you to incur risk of &lt;em&gt;keeping your money safe&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;You receive interest as an incentive to lend them your money.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your friend wants £100 for a fixed period. You negotiate that it isn't worth being £100 short this month so ask them for four Freddos in addition to the £100 on repayment. Your friend is trustworthy so you can be sure that they'll return the cash in full (and the four Freddos). &lt;/p&gt;
&lt;p&gt;Now what you don't realize is that your friend is using the £100 to buy limited edition (Nike's) that are currently on sale. They predict that after the first release sells out, latecomers will be eager to buy from the second hand market. Especially since Christmas is nearing. Your friend is confident there will be at least one customer willing to pay £110 on Acme marketplace. However, there is a risk that he might not sell it at £110, maybe all of the offers he receives are just enough to cover the cost of your four Freddos and an extra for themselves. Maybe an offer of £120 comes along. &lt;/p&gt;
&lt;p&gt;In nearly all scenarios, your friend benefits from the additional cash you provided them. Both parties win; each gaining profit in proportion the amount of risk taken. &lt;/p&gt;
&lt;p&gt;Now what if you struck a deal with old-reliable. Instead of a fixed period and them asking for a loan, you set up an agreement entailing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your friend keeps the £100 &lt;em&gt;safe&lt;/em&gt; and in return pay you a Freddo a month. &lt;/li&gt;
&lt;li&gt;You agree that you can ask for the £100 at any point. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now old-reliable has a conundrum, they will have to have the £100 spare &lt;em&gt;at all times&lt;/em&gt;. By roping another person in, your friend has pockets £200 heavier. The risk of one person asking for the £100 back before you re-sell another pair of trainers goes down.&lt;/p&gt;
&lt;p&gt;Why? That's a exercise for you, reader. &lt;/p&gt;
&lt;p&gt;So, there's a problem. What if both parties want their £100? Add a third. And another. What if some people want to lend a tenner instead? &lt;/p&gt;
&lt;p&gt;Again reader, that's for you to think about. &lt;/p&gt;
&lt;h2&gt;The cost of living&lt;/h2&gt;
&lt;p&gt;Every January we prepare ourselves for the increased prices of day to day goods like sliced bread, toothpaste and tea. This year the price of a standard white loaf may cost £1.05 instead of £1.00 - a 5% increase in price. This is inflation. To keep things simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inflation is a measure of how prices of goods and services vary from year to year.&lt;/li&gt;
&lt;li&gt;in the last 5 years in the UK it has fluctuated between 0.2% and 5%. That is, for the last 5 years, the cost of goods and services have increased yearly by 0.2% to 5%.&lt;/li&gt;
&lt;li&gt;the UK Government has a target of keeping inflation low and stable at 2%&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;If inflation is too high or it moves around a lot, it’s hard for businesses to set the right prices and for people to plan their spending.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;But if inflation is too low, or negative, then some people may put off spending because they expect prices to fall. Although lower prices sounds like a good thing, if everybody reduced their spending then companies could fail and people might lose their jobs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we take the 2% as our starting point and we have £100, next year, the same amount of money will be worth £98. The same thing for wages. A £9 per hour shift will invariably be worth £8.82. And that is in the ideal case. In short, under inflation, cash lying around loses its value, a bit like a human body that never exercises- wastes away. &lt;/p&gt;
&lt;p&gt;However, there are other ways of making your money resilient to inflation- we can't rely on our banks to match inflation; find me a bank that has a higher interest rate than inflation &lt;em&gt;without any catches&lt;/em&gt; and I'll give you a unicorn pony (for a fee of course). We have to be more like our friend selling trainers; not &lt;em&gt;exactly&lt;/em&gt; like our friend, the same principle applies. &lt;/p&gt;
&lt;p&gt;Own and manage assets that are likely to increase over time.&lt;/p&gt;
&lt;p&gt;"How does one do that with no knowledge of what assets are valuable and will increase over time? Property and stocks are the most obvious to me but I don't have enough money to buy a property and stocks are scary." &lt;/p&gt;
&lt;p&gt;For now, research is your best tool at finding out what you should own. What are your goals? For your money to grow without doing anything but following simple rules? I'm afraid I can't help you there. &lt;/p&gt;
&lt;p&gt;Investing, yes, whether that is buying vintage video games, collectable cards, cryptocurrency if you want to take on the risk follow the same rules: people hold onto assets as they believe, justified or not, that the value will increase and there are people willing to pay the increase price for the asset sometime in the future. &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.bankofengland.co.uk/monetary-policy/inflation"&gt;Inflation and the 2% target&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="blog"></category></entry><entry><title>Lotaria</title><link href="/lotaria.html" rel="alternate"></link><published>2021-06-27T06:51:00+01:00</published><updated>2021-06-27T06:51:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-06-27:/lotaria.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Adapted from If on a winter's night a traveller: Chapter 8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I asked Lotaria if she has already read some books of mine that I lent her. She
said no, because here she doesn't have a computer at her disposal. &lt;/p&gt;
&lt;p&gt;She explained to me that a suitably programmed computer can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Adapted from If on a winter's night a traveller: Chapter 8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I asked Lotaria if she has already read some books of mine that I lent her. She
said no, because here she doesn't have a computer at her disposal. &lt;/p&gt;
&lt;p&gt;She explained to me that a suitably programmed computer can read a novel in a
few minutes and record the list of all the words contained in the text, in
order of frequency. 'That way I can have an already completed reading at hand,"
Lotaria says, "with an incalculable saving of time. What is the reading of a
text, in fact, except the recording of certain thematic recurrences, certain
insistences of forms and meanings? An electronic reading supplies me with a
list of the frequencies, which I have only to glance at to form an idea of the
problems the book suggests to my critical study. Naturally, at the highest
frequencies the list records countless articles, pronouns, particles, but I
don't pay them any attention. I head straight for the words richest in meaning;
they can give me a fairly precise notion of the book." &lt;/p&gt;
&lt;p&gt;"In a novel of fifty to a hundred thousand words," she said to me, "I advise
you to observe immediately the words that are repeated about twenty times. Look
here. Words that appear nineteen times: &lt;/p&gt;
&lt;p&gt;princesses, frog, miser, juniper, doctor, salad, gardener,
watch, tail, singing, drank, journey, stretched, pulled,
scarcely, legs, stones, bad, rolled, middle, crept, laughed,
vain, glad, cock, broke, grieved, show, horses, tried,
having, cart, waiting, words, cottage, kept, dress, alive,
peas ... &lt;/p&gt;
&lt;p&gt;"Words that appear eighteen times: &lt;/p&gt;
&lt;p&gt;dancing, catherine, ashputtel, apples, clock, noise, thither,
bottom, making, mouth, please, meantime, ought, farther, deep,
girls, times, spot, strange, being, knife, lifted, carter,
someone, showed, running, marry, falada, waited, learnt&lt;/p&gt;
&lt;p&gt;"Don't you already have a clear idea what it's about?" Lotaria says.&lt;/p&gt;
&lt;p&gt;"There's no question: it's a collection of fairy tales, princesses, cottages, 
adventurous prose with a elements of darkness. The narration is entirely on the
surface, I would say; but to make sure, it's always a good idea to take a look
at the list of words used only once, though no less important for that. Take
this sequence, for example: &lt;/p&gt;
&lt;p&gt;readily, patience, straightening, leap, sixteenth, irons,
drowned, secret, dozing, comfortably, crawling, tittered,
adjourn, impertinent, worry, rises, handwriting, raw, pulling,
prove&lt;/p&gt;
&lt;p&gt;"Hmm, that seems consistent with what I suggested."&lt;/p&gt;
&lt;p&gt;Lotaria shows me another series of lists. "This is an entirely different novel.
It's immediately obvious. Look at the words that recur about fifty times: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;frequency&lt;/th&gt;
&lt;th&gt;word&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;above, after&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;order, army&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;keep, lucca, then, very, hold&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;florence, most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;alexander, although, found&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;pope, yet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;your&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;concerning, war, france&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;before, country&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;power, whilst, friends, does&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;where, sent, long&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;affairs, seen, another, considered, enemy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;wish, afterwards&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"What do you think of that? An book of betrayal, power struggle, indecisiveness
and uncertainty ... As a confirmation, we'll take a sample of words used
a single time: &lt;/p&gt;
&lt;p&gt;entreated, vainly, decree, reading, confirming, finest,
imaginary, consisted, standstill, perceiving, seventh, beatrice,
pressure, definiendis, colleoni, tales, essex, antico,
valdichiana, invasion&lt;/p&gt;
&lt;p&gt;"So we already have an idea of the atmosphere, the moods, the social background...
. We can go on to a third book: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;frequency&lt;/th&gt;
&lt;th&gt;word&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;master, added, jacques, word, five, empty, hear, stolen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;please, ago, doors, being, wall, sharply, top, wife, bernard, arrest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;pictures, work, does, jeanne, middle, already, paper, big, surprise, waiting, clock, behind, held, thief, seen, cigarette, lighted, keys&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;place, getting, ever, every, far, bag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;end, chapter, full, lips, four, hour, stared, papa, noise, towards, lost, ten, though, bureau, van, believe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;quick, marie, till, life, kept, next, our, stepped, brought, key, ladder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;cars, many, gentle, cut, hardly, turning, relzieres, taking, doesn, sudden, exactly, wasn, hundred, beside, yourself, shut, poor, certainly, picked, sprang&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;clear, fell, called, having, people, ask, world, kind, changed, closed, station, photograph, else, least, laughed, leave, detectives&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;theft, windows, slipped, wedding, knew, rang, bell, bring, whatever, doing, frowning, suddenly, keep, laugh, train, saying, horse, france, fact, handed, given, interesting, piece, hope, eight, help, prison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;true, honour, fine, sent, shoulders, absolutely, arm, frightened, charge, handkerchief&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"I would say we're dealing with a lighter story of deception but this time
a thief. Rhythmic twists and turns, gentlemen, a hidden romance. One last time,
let's look at the list of words with a frequency of one. Look, for example:&lt;/p&gt;
&lt;p&gt;covert, discussing, disturb, courtesy, duchesse, tragic, paltry,
excluded, aquiline, unheard, reward, dealer, improve, differed,
reassure, mason, poker, instantly, trap, plans&lt;/p&gt;
&lt;p&gt;"You see? A guilt complex, pure and simple! A valuable indication: the critical
inquiry can start with that, establish some working hypotheses.... What did I
tell you? Isn't this a quick, effective system?" &lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Discriminant Analysis</title><link href="/discriminant-analysis.html" rel="alternate"></link><published>2021-05-02T00:00:00+01:00</published><updated>2021-05-02T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-05-02:/discriminant-analysis.html</id><summary type="html">&lt;h2&gt;Linear Discriminant Classifier&lt;/h2&gt;
&lt;p&gt;Suppose we have two classes of data &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; corresponding to genuine
and counterfeit currency distributed &lt;span class="math"&gt;\(f_j(\mathbf x)\)&lt;/span&gt;, &lt;span class="math"&gt;\(j = \{1, 2\}\)&lt;/span&gt;. Letting
&lt;span class="math"&gt;\(Y\)&lt;/span&gt; denote classes &lt;span class="math"&gt;\(Y = 1\)&lt;/span&gt; or &lt;span class="math"&gt;\(Y = 2\)&lt;/span&gt;. We also assume the prior probabilities
of class assignment as &lt;span class="math"&gt;\(\mathbb P …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Linear Discriminant Classifier&lt;/h2&gt;
&lt;p&gt;Suppose we have two classes of data &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; corresponding to genuine
and counterfeit currency distributed &lt;span class="math"&gt;\(f_j(\mathbf x)\)&lt;/span&gt;, &lt;span class="math"&gt;\(j = \{1, 2\}\)&lt;/span&gt;. Letting
&lt;span class="math"&gt;\(Y\)&lt;/span&gt; denote classes &lt;span class="math"&gt;\(Y = 1\)&lt;/span&gt; or &lt;span class="math"&gt;\(Y = 2\)&lt;/span&gt;. We also assume the prior probabilities
of class assignment as &lt;span class="math"&gt;\(\mathbb P(Y = 1) = \pi_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathbb P(Y = 2) = \pi_2\)&lt;/span&gt;
and &lt;span class="math"&gt;\(\pi_1 + \pi_2 = 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Given we have observed &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; what is the probability of it belonging
to class 1?&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb P(Y = 1 \mid X = \mathbf x)
= \frac{\mathbb P(Y = 1 \cap X = \mathbf x)}{\mathbb P(X = \mathbf x)}
= \frac{f_1(\mathbf x)\pi_1}{f_1(\mathbf x)\pi_1 + f_2(\mathbf x)\pi_2}$$&lt;/div&gt;
&lt;p&gt;thus Bayes rule classifies &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to the class with the highest probability:&lt;/p&gt;
&lt;div class="math"&gt;$$\varphi(\mathbf x) = \arg \underset{j\in\{1, 2\}}\max \mathbb P(Y = j \mid X = \mathbf x).$$&lt;/div&gt;
&lt;p&gt;In other words, we assign &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to class 1 if &lt;span class="math"&gt;\(\mathbb P(Y = 1 \mid
X = \mathbf x) &amp;gt; \mathbb P(Y = 2 \mid X = \mathbf x)\)&lt;/span&gt; or &lt;span class="math"&gt;\(f_1(\mathbf x)\pi_1 &amp;gt;  f_2(\mathbf x)\pi_2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Assuming the populations follow a normal distribution with different means but
equal covariance, &lt;span class="math"&gt;\(X \mid Y = j \sim \mathcal N(\mu_, \Sigma)\)&lt;/span&gt; We then assign
&lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to class 1 if&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
&amp;amp;\frac{f_1(\mathbf x)}{f_2(\mathbf x)} &amp;gt; \frac{\pi_2}{\pi_1} \\
&amp;amp;\Rightarrow \log \frac{f_1(\mathbf x)}{f_2(\mathbf x)} + \log \frac{\pi_1}{\pi_2} &amp;gt; 0 \\
&amp;amp;= \log \frac{\pi_1}{\pi_2}  + (\mu_1 - \mu_2)^T\Sigma^{-1}\mathbf x - \frac{1}{2} (\mu_1 - \mu_2)^T\Sigma^{-1}(\mu_1 + \mu_2) &amp;gt; 0.
\end{aligned}$$&lt;/div&gt;
&lt;!--
From the last line we recover the discriminant function
$\delta_j(x) = \log\pi_j + \mu_j^T\Sigma^{-1}\mathbf x - \frac{1}{2}\mu_j^T\Sigma^{-1}\mu_j$
--&gt;

&lt;p&gt;In practice the true mean and covariance is not known for population
distributions. Instead we use the sample statistic,
&lt;span class="math"&gt;\(\hat \mu_j = \bar{\mathbf x_j}\)&lt;/span&gt; for the mean and
&lt;span class="math"&gt;\(\hat \Sigma_j = \sum_i (x_i - \bar{\mathbf x_j})^T(x_i - \bar{\mathbf x_j}) \,/\, (n_j - 1)\)&lt;/span&gt;
for the covariance. It is also common to specify the prior probabilites as
&lt;span class="math"&gt;\(\hat \pi_j  = n_j \,/\, N\)&lt;/span&gt;, where &lt;span class="math"&gt;\(n_j\)&lt;/span&gt; is the number of observations in class
&lt;span class="math"&gt;\(j\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Relaxing Constraints and Generalizing&lt;/h3&gt;
&lt;p&gt;So far we have looked at the &lt;span class="math"&gt;\(K =2\)&lt;/span&gt; classes case. For &lt;span class="math"&gt;\(K &amp;gt; 2\)&lt;/span&gt; the probability
of observation &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; being distributed under class &lt;span class="math"&gt;\(j\)&lt;/span&gt; is &lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb P(Y = j \mid \mathbf x) = \frac{f_j(x)\pi_j(x)}{\sum_{k=1}^K f_k(\mathbf x)\pi_k(\mathbf x)}$$&lt;/div&gt;
&lt;p&gt;If we assume the populations do not have the same covariance &lt;span class="math"&gt;\(\Sigma_j \neq
\Sigma_k\)&lt;/span&gt; we get Quadratic Discriminant Analysis. Gaussian assumption can be
replaced for non-linear decision boundary and the non-parametric version,
&lt;em&gt;Naive Bayes&lt;/em&gt; also considers &lt;em&gt;independent conditional probabilities&lt;/em&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Metropolis Hastings</title><link href="/metropolis-hastings.html" rel="alternate"></link><published>2021-04-27T00:00:00+01:00</published><updated>2021-04-27T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-27:/metropolis-hastings.html</id><summary type="html">&lt;p&gt;We continue the series of Monte Carlo methods by covering Markov chain based sampling algorithms.&lt;/p&gt;
&lt;p&gt;Metropolis Hastings is a sampling algorithm that relies on the guarantees from invariant distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Metropolis Hastings&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)}\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X \sim Q(\cdot \mid X^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Compute &lt;div class="math"&gt;$$\alpha(X …&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;We continue the series of Monte Carlo methods by covering Markov chain based sampling algorithms.&lt;/p&gt;
&lt;p&gt;Metropolis Hastings is a sampling algorithm that relies on the guarantees from invariant distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Metropolis Hastings&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)}\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X \sim Q(\cdot \mid X^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Compute &lt;div class="math"&gt;$$\alpha(X \mid X^{(t-1)}) = \min \left(1, \frac{\pi(X)Q(X^{(t-1)} \mid X)}{\pi(X^{(t-1)})Q(X \mid X^{(t-1)})} \right)$$&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Set &lt;span class="math"&gt;\(X^{(t)} = X\)&lt;/span&gt; with probability &lt;span class="math"&gt;\(\alpha(X \mid X^{(t-1)})\)&lt;/span&gt; else &lt;span class="math"&gt;\(X^{(t)} = X^{(t-1)}\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The conditional probability of accepting any proposed state given the chain is in &lt;span class="math"&gt;\(i\)&lt;/span&gt; is
&lt;/p&gt;
&lt;div class="math"&gt;$$ a(i) = \sum_{j \in \mathbb S} \alpha(j \mid i)Q_{i, j} $$&lt;/div&gt;
&lt;p&gt;From the algorithm we see the transition kernel &lt;span class="math"&gt;\(K_{i,j} = \alpha(j\mid i)Q_{i,i} + (1 - a(i))\delta_{ij}\)&lt;/span&gt; generates a 
Markov chain for the sequence &lt;span class="math"&gt;\((X^{(t)})_{t \geq 0}\)&lt;/span&gt; using the distribution &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;An advantage of using MH algorithm is we only need to know a distribution that is proportional to &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;There are two popular Metropolis-Hastings variations, the Metropolis algorithm
that uses a symmetric proposal distribution &lt;span class="math"&gt;\(Q(X^{(t)} \mid X^{(t-1)}) = Q(X^{(t-1)} \mid X^{(t)})\)&lt;/span&gt;. Common 
distributions used are normal, &lt;span class="math"&gt;\(\mathcal N(\mu, \sigma^2)\)&lt;/span&gt; and uniform, &lt;span class="math"&gt;\(U[a, b]\)&lt;/span&gt;.
The resulting acceptance ratio is simplified to&lt;/p&gt;
&lt;div class="math"&gt;$$\alpha(X \mid X^{(t-1)}) = \min \left(1, \frac{\pi(X)}{\pi(X^{(t-1)})} \right)$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Gibbs Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gibbs sampling uses full conditional distributions as the proposal distribution. For &lt;span class="math"&gt;\(j = 1,2, \ldots, n\)&lt;/span&gt; 
the proposal &lt;/p&gt;
&lt;div class="math"&gt;$$Q(X \mid X^{(t-1)}) = \pi(X_j \mid X_1^{(t-1)}, \ldots, X_1^{(t-1)}, X_1^{(t+1)}, \ldots, X_1^{(n)})$$&lt;/div&gt;
&lt;p&gt;
The acceptance probability &lt;span class="math"&gt;\(\alpha(X \mid X^{(t-1)})\)&lt;/span&gt; can be shown to be equal to 1.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)} = (X_1^{(0)}, X_2^{(0)})\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_1^{(t)} \sim \pi_{1|2}(\cdot \mid X_2^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_2^{(t)} \sim \pi_{2|1}(\cdot \mid X_1^{(t)})\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;The transition kernel that guarantees an invariant distribution is&lt;/p&gt;
&lt;div class="math"&gt;$$K(\mathbf x, \mathbf y) = \pi_{1|2}(y_1 \mid x_2)\pi_{2|1}(y_2 \mid y_1)$$&lt;/div&gt;
&lt;p&gt;
with &lt;span class="math"&gt;\(\mathbf x = (x_1, x_2) = (X_1^{(t-1)}, X_2^{(t-1)})\)&lt;/span&gt;
and &lt;span class="math"&gt;\(\mathbf y = (y_1, y_2) = (X_1^{(t)}, X_2^{(t)})\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Modelling TFL journeys</title><link href="/modelling-tfl-journeys.html" rel="alternate"></link><published>2021-04-26T00:00:00+01:00</published><updated>2021-04-29T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-26:/modelling-tfl-journeys.html</id><summary type="html">&lt;h2&gt;Data Description and Background&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://data.london.gov.uk/dataset/public-transport-journeys-type-transport"&gt;Public Transport Journeys by Type of Transport&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The data set comes from the Transport for London website. It describes the number of journeys on the public transport network by TFL reporting period, by type of transport. Data is broken down by bus, underground, DLR, tram, Overground …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Data Description and Background&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://data.london.gov.uk/dataset/public-transport-journeys-type-transport"&gt;Public Transport Journeys by Type of Transport&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The data set comes from the Transport for London website. It describes the number of journeys on the public transport network by TFL reporting period, by type of transport. Data is broken down by bus, underground, DLR, tram, Overground and cable car.&lt;/p&gt;
&lt;p&gt;Some information about the dataset from the data description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Period lengths are different in periods 1 and 13, and the data is not adjusted to account for that.
   Docklands Light Railway journeys are based on automatic passenger counts at stations.
   Overground and Tram journeys are based on automatic on-carriage passenger counts.
   Reliable Overground journey numbers have only been available since October 2010.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this project we will be forecasting the number of journeys on the London Underground network.&lt;/p&gt;
&lt;p&gt;We first create a test set the last 5 journey counts on the London Underground network to compare 
with our final forecasts.&lt;/p&gt;
&lt;h2&gt;Visualise the time series plot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-3-1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##                  Estimate   Std. Error  t value     Pr(&amp;gt;|t|)
## (Intercept)  4.983828e+03 4.579668e+02 10.88251 1.315793e-19
## period.start 6.840706e-03 6.413333e-04 10.66638 4.340164e-19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the initial plot, we can see the time series is non-stationary. We also confirm this from
the non-zero linear model regression coefficient.&lt;/p&gt;
&lt;p&gt;We also notice seasonal patterns which we will discuss later.&lt;/p&gt;
&lt;h2&gt;Stationarity&lt;/h2&gt;
&lt;p&gt;After first order differencing we plot the time series, its autocorrelation and partial auto correlation plots. &lt;/p&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-5-1.png"&gt;&lt;/p&gt;
&lt;p&gt;From the autocorrelation-lag plot we see high correlation at periodic intervals implying seasonality.&lt;/p&gt;
&lt;h2&gt;Seasonality&lt;/h2&gt;
&lt;p&gt;From the data we see months with two entries hence correlation every 13 lags. The data description also confirms this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Period lengths are different in periods 1 and 13, and the data is not adjusted to account for that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-6-1.png"&gt;&lt;/p&gt;
&lt;p&gt;After applying differencing every 13 lags we see a clearer representation of the ACF and
PACF plots. We initially consider &lt;strong&gt;ARIMA(0,1,1)(0,1,1)[13]&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,1)(0,1,1)[13]
## Q* = 5.4208, df = 8, p-value = 0.7118
## 
## Model df: 2.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = lu, order = c(0, 1, 1), seasonal = list(order = c(0, 1, 1), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1     sma1
##       -0.8258  -0.9033
## s.e.   0.0575   0.2643
## 
## sigma^2 estimated as 16.43:  log likelihood = -314.98,  aic = 635.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The model summary seems promising, we now check if the model is adequate using Ljung-Box tests for 
&lt;span class="math"&gt;\(K = 6\)&lt;/span&gt;, 12 and 24&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 1.9491, df = 6, p-value = 0.9243
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 14.991, df = 12, p-value = 0.242
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 28.14, df = 24, p-value = 0.2542
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the Ljung-Box tests, we can conclude the model is adequate up to lag 24.&lt;/p&gt;
&lt;h2&gt;Overdifferencing&lt;/h2&gt;
&lt;p&gt;We now try to overfit the model. We start by increasing the degree of the seasonal moving average part to 4. 
Assuming quarterly seasonal variation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,1)(0,1,4)[13]
## Q* = 5.4319, df = 5, p-value = 0.3655
## 
## Model df: 5.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = ts(lu), order = c(0, 1, 1), seasonal = list(order = c(0, 1, 4), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1     sma1     sma2     sma3    sma4
##       -0.8087  -0.8449  -0.0553  -0.2369  0.2667
## s.e.   0.0634   0.3447   0.1598   0.1669  0.1404
## 
## sigma^2 estimated as 14.78:  log likelihood = -311.11,  aic = 634.21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A decrease in AIC by 1.74, decrease in log likelihood by 3.87 suggesting this model is a
better fit to our data.&lt;/p&gt;
&lt;p&gt;We now consider &lt;strong&gt;ARIMA(0,1,2)(1,1,4)[13].&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,2)(0,1,4)[13]
## Q* = 5.676, df = 4, p-value = 0.2247
## 
## Model df: 6.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = lu, order = c(0, 1, 2), seasonal = list(order = c(0, 1, 4), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1      ma2     sma1     sma2     sma3    sma4
##       -0.7609  -0.0592  -0.8321  -0.0662  -0.2256  0.2670
## s.e.   0.1020   0.1022   0.2908   0.1589   0.1660  0.1458
## 
## sigma^2 estimated as 14.85:  log likelihood = -310.94,  aic = 635.87
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No improvement in the reduction of the log likelihood or AIC. &lt;/p&gt;
&lt;p&gt;The AIC is slightly higher compared to &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We conclude that &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt; is the best fitted model to the data.&lt;/p&gt;
&lt;h2&gt;Forecasting&lt;/h2&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-11-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Comparing with the test data we see all points lie close to the point forecast.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;From the analysis, we can see the yearly growth of the London Underground
network usage.&lt;/p&gt;
&lt;p&gt;We note there is seasonal effects of the number of journeys on the London
Underground network each year.&lt;/p&gt;
&lt;p&gt;We first fit the data to an &lt;strong&gt;ARIMA(0,1,1)(0,1,1)[13]&lt;/strong&gt; and after
overdifferencing concluded that a &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt; was more
suitable.&lt;/p&gt;
&lt;p&gt;We then forecasted the next 5 months resulting in accurate forecasts. 
All of which lie in the 80% forecast interval.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Sampling: Rejection and Importance</title><link href="/sampling-rejection-and-importance.html" rel="alternate"></link><published>2021-04-25T00:00:00+01:00</published><updated>2021-04-26T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-25:/sampling-rejection-and-importance.html</id><summary type="html">&lt;p&gt;We left the introduction to monte carlo simulations with its limitation of slow convergence.&lt;/p&gt;
&lt;p&gt;In this post we will cover Rejection and Importance sampling.&lt;/p&gt;
&lt;p&gt;For a density function &lt;span class="math"&gt;\(\pi(x)\)&lt;/span&gt;, how can we sample from it?&lt;/p&gt;
&lt;h2&gt;Rejection Sampling&lt;/h2&gt;
&lt;p&gt;The idea is to sample from a distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; that contains &lt;span class="math"&gt;\(\pi …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;We left the introduction to monte carlo simulations with its limitation of slow convergence.&lt;/p&gt;
&lt;p&gt;In this post we will cover Rejection and Importance sampling.&lt;/p&gt;
&lt;p&gt;For a density function &lt;span class="math"&gt;\(\pi(x)\)&lt;/span&gt;, how can we sample from it?&lt;/p&gt;
&lt;h2&gt;Rejection Sampling&lt;/h2&gt;
&lt;p&gt;The idea is to sample from a distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; that contains &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt;, that is 
&lt;span class="math"&gt;\(\pi \leq M \cdot q\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt; and a constant &lt;span class="math"&gt;\(M\)&lt;/span&gt;.
The algorithm is a two step process:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rejection Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;Sample &lt;span class="math"&gt;\(X \sim q\)&lt;/span&gt; and sample &lt;span class="math"&gt;\(U \sim U[0, 1]\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(\mathbb P(U &amp;lt; \frac{\pi(X)}{Mq(X)})\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;accept &lt;span class="math"&gt;\(X\)&lt;/span&gt; as a sample from &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;otherwise reject &lt;span class="math"&gt;\(X\)&lt;/span&gt; and repeat the sampling step.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;To show this works we prove:
For any &lt;span class="math"&gt;\(a, b \in \mathbb R\)&lt;/span&gt;, &lt;span class="math"&gt;\(a \leq b\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$
    \mathbb P(X \in [a, b] \mid X \text{ accepted}) = \int_a^b \pi(x) dx
$$&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{aligned}
\mathbb P(X \in [a, b] \cap \text{ accepted}) &amp;amp;= \int_a^b \mathbb P(X \text{ accepted} \mid X = x)q(x) dx \\
&amp;amp;= \int_a^b \frac{\pi(X)}{Mq(X)}q(x) dx \\
&amp;amp;= \frac{1}{M} \int_a^b \pi(x) dx  \\
\Rightarrow \mathbb P( X \text{ accepted}) &amp;amp;= \frac{1}{M} 
\end{aligned}
$$&lt;/div&gt;
&lt;p&gt;
Using Bayes' theorem
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{aligned}
    \mathbb P(X \in [a, b] \mid X \text{ accepted}) &amp;amp;= \frac{\mathbb P(X \in [a, b] \cap \text{ accepted})}{\mathbb P(X \text{ accepted})} \\
    &amp;amp;= \frac{\frac{1}{M} \int_a^b \pi(x) dx}{\frac{1}{M}} \\
    &amp;amp;= \int_a^b \pi(x) dx  
\end{aligned}
$$&lt;/div&gt;
&lt;p&gt;An important consequence of this is the probability until an acceptance &lt;span class="math"&gt;\(\mathbb P(X \text{ accepted}) = \frac{1}{M}\)&lt;/span&gt; is distributed
geometrically &lt;span class="math"&gt;\(Y \sim \text{Geometric}(\frac{1}{M})\)&lt;/span&gt;. The mean time until an acceptance is then &lt;span class="math"&gt;\(\mathbb E[Y] = M\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Importance sampling&lt;/h2&gt;
&lt;p&gt;We want to evaluate integrals in the form: &lt;span class="math"&gt;\(\int \varphi(x)\pi(x) dx\)&lt;/span&gt; where
&lt;span class="math"&gt;\(\pi\)&lt;/span&gt; is a probability distribution and &lt;span class="math"&gt;\(\varphi(x)\)&lt;/span&gt; is a function. Sometimes
&lt;span class="math"&gt;\(\pi\)&lt;/span&gt; is tricky to evaluate, maybe the integral is intractable. Importance
sampling introduces a proposal distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; such that&lt;/p&gt;
&lt;div class="math"&gt;$$ \{x : \pi(x) &amp;gt; 0\} \subseteq \{x : q(x) &amp;gt; 0\} $$&lt;/div&gt;
&lt;p&gt;or alternatively, there exists a constant &lt;span class="math"&gt;\(M\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\pi(x) \leq M \cdot
q(x)\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt; which allows us to express our integral as:&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\mathbb E_{\pi}[\varphi(X)] &amp;amp;= \int \varphi(x)\pi(x) dx \\
&amp;amp;= \int \varphi(x)\frac{\pi(x)}{q(x)}q(x) dx \\
&amp;amp;= \int \varphi(x)w(x)q(x) dx \\
&amp;amp;= \mathbb E_{q}[\varphi(X)w(X)]. \end{aligned}$$&lt;/div&gt;
&lt;p&gt;Using the equivalence above, letting &lt;span class="math"&gt;\(X_i \overset{i.i.d}\sim q\)&lt;/span&gt; and appealing
to the weak law of large numbers we see &lt;/p&gt;
&lt;div class="math"&gt;$$
    \frac{1}{n} \sum_{i=1}^n \varphi(X_i)w(X_i) \overset{\text{p}}\rightarrow \mathbb E_{\pi}[\varphi(X)]
$$&lt;/div&gt;
&lt;p&gt;The algorithm is as follows:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Importance Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Choose &lt;span class="math"&gt;\(q\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\{x : \pi(x) &amp;gt; 0\} \subseteq \{x : q(x) &amp;gt; 0\}\)&lt;/span&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For &lt;span class="math"&gt;\(i = 1, 2, \cdots, n\)&lt;/span&gt;:&lt;ul&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_i \sim q\)&lt;/span&gt; &lt;/li&gt;
&lt;li&gt;Calculate importance weights &lt;span class="math"&gt;\(w(X_i) = \frac{\pi(X_i)}{q(X_i)}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Calculate &lt;span class="math"&gt;\(\bar{\varphi}_n = \frac{1}{n}\sum_{i=1}^n \varphi(X_i)w(X_i)\)&lt;/span&gt;, 
the unbiased estimator of &lt;span class="math"&gt;\(\mathbb E_\pi[\varphi(X)]\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Monte Carlo</title><link href="/monte-carlo.html" rel="alternate"></link><published>2021-04-24T00:00:00+01:00</published><updated>2021-04-24T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-24:/monte-carlo.html</id><summary type="html">&lt;p&gt;Monte Carlo methods are a class of sampling algorithms to obtain numerical approximations.
To do this we rely on the weak law of large numbers:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;The weak law of large numbers&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A sequence of random variables &lt;span class="math"&gt;\(X_1, X_2, \cdots, X_n\)&lt;/span&gt; &lt;em&gt;converges in probability&lt;/em&gt; to a random
variable …&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;p&gt;Monte Carlo methods are a class of sampling algorithms to obtain numerical approximations.
To do this we rely on the weak law of large numbers:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;The weak law of large numbers&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A sequence of random variables &lt;span class="math"&gt;\(X_1, X_2, \cdots, X_n\)&lt;/span&gt; &lt;em&gt;converges in probability&lt;/em&gt; to a random
variable &lt;span class="math"&gt;\(X\)&lt;/span&gt; if for all &lt;span class="math"&gt;\(\delta &amp;gt; 0\)&lt;/span&gt;
&lt;div class="math"&gt;$$
    \lim_{n\rightarrow \infty} \mathbb P(|X_n - X | \geq \delta) = 0.
$$&lt;/div&gt;
&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;This is also written as &lt;span class="math"&gt;\(X_n \overset{\text{p}}\rightarrow X\)&lt;/span&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;A consequence of this taking using the empirical mean &lt;span class="math"&gt;\(\overline{X}_n = \frac{1}{n} \sum_{i=1}^n X_i\)&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;If the sequence &lt;span class="math"&gt;\(X_1, X_2, \cdots\)&lt;/span&gt; are independent and identically distributed (i.i.d) with &lt;span class="math"&gt;\(\mathbb E(X_1) = \mu\)&lt;/span&gt; and
finite variance &lt;span class="math"&gt;\(\sigma^2 &amp;lt; \infty\)&lt;/span&gt;,  we have &lt;span class="math"&gt;\(\overline{X}_n \overset{\text{p}}\rightarrow \mu\)&lt;/span&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;For an illustrated example we'll use an abstract example of estimating the probability that &lt;span class="math"&gt;\(X \in A\)&lt;/span&gt; for a set &lt;span class="math"&gt;\(A \subset \mathbb R\)&lt;/span&gt;. We also assume &lt;span class="math"&gt;\(X\)&lt;/span&gt; has probability density function &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Defining the estimator of a sample landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt; as &lt;span class="math"&gt;\(\hat{p} := \boldsymbol{1}_{X_n \in A}\)&lt;/span&gt; we notice that &lt;span class="math"&gt;\(\mathbb P(X \in A) = \mathbb E[\boldsymbol{1}_{X_n \in A}]\)&lt;/span&gt; thus we approximate &lt;span class="math"&gt;\(\mathbb P(X \in A)\)&lt;/span&gt; with the empirical mean &lt;span class="math"&gt;\(\frac{1}{n} \sum_{i=1}^n \boldsymbol{1}_{X_i \in A}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where
&lt;/p&gt;
&lt;div class="math"&gt;$$\boldsymbol{1}_{X_i \in A} = \left\{
\begin{array}{ll}
1 &amp;amp;  X_i \in A \\
0 &amp;amp; \text{otherwise}
\end{array} 
\right.$$&lt;/div&gt;
&lt;p&gt;The estimator &lt;span class="math"&gt;\(\hat{p}\)&lt;/span&gt; describes the proportion of samples landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt;. If we define &lt;span class="math"&gt;\(Z_n\)&lt;/span&gt; as the &lt;em&gt;number&lt;/em&gt; of samples landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt; the we have the relationship &lt;span class="math"&gt;\(\hat{p} = \dfrac{Z_n}{n}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It follows that the number of samples that land in &lt;span class="math"&gt;\(A\)&lt;/span&gt; follows a Binomial distribution &lt;span class="math"&gt;\(Z_n \sim \text{Bin}(n, p)\)&lt;/span&gt;. This arises from considering the sum of &lt;span class="math"&gt;\(n\)&lt;/span&gt; independent Bernoulli trials.&lt;/p&gt;
&lt;!--
#### The limitations of Monte Carlo simulations

As we know the distribution of $\hat{p}$ we can calculate the variance of the estimator:
$$
    \text{Var}(\hat{p}) = \frac{1}{n^2}\text{Var}(Z_n) = \frac{np(1 - p)}{n^2} = \frac{p(1 - p)}{n}.
$$
The empirical mean $\mathbb E[\hat{p}] = \frac{1}{n}\mathbb E[Z_n] = p$ thus using the weak law of large numbers, $\hat{p} \overset{\text{p}}\rightarrow p$.

How do we quantify how close $\hat{p}$ is to $p$? First we introduce the Central Limit theorem:

: For $X_1, X_2, \cdots, X_n$, $n$ i.i.d samples with mean $\mu$ and finite variance $\sigma^2$ with $\overline{X}_n$ defining the empirical mean,
$$Z = lim_{n \rightarrow \infty} \sqrt{n}\left( \frac{\overline{X}_n - \mu}{\sigma}\right) \sim \mathcal N(0, 1)$$

The consequence of the theorem tells us 
for large $n$ $\overline{Z}_n \sim \mu + \frac{\sigma}{\sqrt{n}}Z$
Which for our parameters of interest:
$$p + \frac{\sqrt{p(1-p)}}{\sqrt{n}}Z$$

$p$ the quantity of interest and $\frac{\sqrt{p(1-p)}}{\sqrt{n}}Z$ the error term. As $Z \in (0, 1)$ we take the error term to be $\frac{\sqrt{p(1-p)}}{\sqrt{n}}$

Finally, we see the error term shrinks by a factor of $\sqrt{n}$. 
--&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Web, faster</title><link href="/web-faster.html" rel="alternate"></link><published>2021-03-23T00:00:00+00:00</published><updated>2021-03-28T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-03-23:/web-faster.html</id><summary type="html">&lt;p&gt;On inspecting &lt;a href="sunset"&gt;sunset&lt;/a&gt; I noticed I had to wait as each image loaded, top to bottom.
There must be something I can do about it.&lt;/p&gt;
&lt;h2&gt;The Test&lt;/h2&gt;
&lt;p&gt;All tests conducted used &lt;a href="https://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt; with the default settings.&lt;/p&gt;
&lt;p&gt;For the &lt;a href="sunset"&gt;page&lt;/a&gt;, the bottlenecks were the multiple uncompressed, uncached images. &lt;/p&gt;
&lt;p&gt;&lt;img alt="before score" src="images/before-summary.jpg"&gt;
&lt;img alt="before optimized" src="images/before-optimized.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Image Compression&lt;/h2&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On inspecting &lt;a href="sunset"&gt;sunset&lt;/a&gt; I noticed I had to wait as each image loaded, top to bottom.
There must be something I can do about it.&lt;/p&gt;
&lt;h2&gt;The Test&lt;/h2&gt;
&lt;p&gt;All tests conducted used &lt;a href="https://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt; with the default settings.&lt;/p&gt;
&lt;p&gt;For the &lt;a href="sunset"&gt;page&lt;/a&gt;, the bottlenecks were the multiple uncompressed, uncached images. &lt;/p&gt;
&lt;p&gt;&lt;img alt="before score" src="images/before-summary.jpg"&gt;
&lt;img alt="before optimized" src="images/before-optimized.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Image Compression&lt;/h2&gt;
&lt;p&gt;The first &lt;code&gt;0/100&lt;/code&gt; score was the lack of image compression. &lt;/p&gt;
&lt;p&gt;Following Googles guideline to &lt;a href="https://developers.google.com/speed/docs/insights/OptimizeImages"&gt;optimizing images&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduce quality to 85 if it was higher. With quality larger than 85, the image
  becomes larger quickly, while the visual improvement is little.&lt;/li&gt;
&lt;li&gt;Reduce Chroma sampling to 4:2:0, because human visual system is less
  sensitive to colors as compared to luminance.&lt;/li&gt;
&lt;li&gt;Use progressive format for images over 10k bytes. Progressive JPEG usually
  has higher compression ratio than baseline JPEG for large image, and has the
  benefits of progressively rendering.&lt;/li&gt;
&lt;li&gt;Use grayscale color space if the image is black and white.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;can be represented using &lt;code&gt;convert&lt;/code&gt; from &lt;a href="https://imagemagick.org/index.php"&gt;ImageMagick&lt;/a&gt;,
first to change png to ipeg then apply progressive compression.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for image in *.png ;  do convert "$image" "${image%.*}.jpg" ; done&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for image in *.jpg; do convert "$image"  -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB "$image"; done&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As well as JPEG being a preferred format for photographs they are able to be
compressed such that the full image is instantly loaded.&lt;/p&gt;
&lt;h2&gt;Progressive JPEGs&lt;/h2&gt;
&lt;p&gt;The second &lt;code&gt;0/100&lt;/code&gt; score was the lack of progressive JPEG usage. Standard JPEGs
load from &lt;em&gt;top to bottom&lt;/em&gt;, the image loads line by line. Progressive
JPEGs on the other hand loads the entire image and renders pixel by pixel.
Contrasting with regular JPEGs we can say progressive JPEGs load from back to front.&lt;/p&gt;
&lt;h2&gt;After&lt;/h2&gt;
&lt;p&gt;&lt;img alt="after score" src="images/after-summary.jpg"&gt;
&lt;img alt="after optimized" src="images/after-optimized.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Success! A 2x speed up in loading time, from 32 to 16 seconds and a 2x reduction in page size.&lt;/p&gt;
&lt;h2&gt;Caching?&lt;/h2&gt;
&lt;p&gt;The remaining poor rating, caching, is managed on the server side. Github pages stores cached
content for only 10 minutes. Ideally for static content such as CSS, JS and images month long
caching is recommended. &lt;/p&gt;
&lt;h3&gt;Further&lt;/h3&gt;
&lt;p&gt;This post was inspired by Dan Luu's &lt;a href="https://danluu.com/octopress-speedup/"&gt;50x speed up&lt;/a&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>XOR</title><link href="/xor.html" rel="alternate"></link><published>2020-08-08T00:00:00+01:00</published><updated>2020-12-26T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-08:/xor.html</id><summary type="html">&lt;h1&gt;XOR problem&lt;/h1&gt;
&lt;p&gt;In learning a new field I don't think an introduction using the most basic
example doesn't help. Using the XOR problem to understand deep learning often
obscures the grander picture. That being said, I'm not sure who this
explanation is for. At the moment, myself. Why? To see …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;XOR problem&lt;/h1&gt;
&lt;p&gt;In learning a new field I don't think an introduction using the most basic
example doesn't help. Using the XOR problem to understand deep learning often
obscures the grander picture. That being said, I'm not sure who this
explanation is for. At the moment, myself. Why? To see how well I can explain
the fundamental concepts of deep learning using a toy example. &lt;/p&gt;
&lt;p&gt;A quick history lesson. &lt;/p&gt;
&lt;p&gt;Perceptrons are functions that perform a linear operation followed by a non
linear function mapping. In general, taking inputs &lt;span class="math"&gt;\(x_1, x_2, ..., x_n\)&lt;/span&gt; to an
output &lt;span class="math"&gt;\(f(\sum_i^n {w_i x_i})\)&lt;/span&gt;. Letting &lt;span class="math"&gt;\(f(z)\)&lt;/span&gt; be a step function with value &lt;code&gt;1
if z &amp;gt; 0 else 0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The problem here is that we are only able to find functions that are linearly
separable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multilayer and differentiable activation functions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What we want to do is add non linearity to our input. By doing so we can
transform our feature space for a linear model to learn.&lt;/p&gt;
&lt;h3&gt;The architecture&lt;/h3&gt;
&lt;p&gt;The network consists of two inputs &lt;span class="math"&gt;\(x_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(x_2\)&lt;/span&gt;, a hidden layer &lt;span class="math"&gt;\(\textbf{h}=
[h_1, h_2]\)&lt;/span&gt; and output &lt;span class="math"&gt;\(y\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Task&lt;/h3&gt;
&lt;p&gt;Find the parameters (weights) &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; that minimize the error (loss) between estimated function &lt;span class="math"&gt;\(f\)&lt;/span&gt; and our estimate &lt;span class="math"&gt;\(f^*\)&lt;/span&gt;. We want our &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; values to produce an estimate as close to &lt;span class="math"&gt;\(f^*\)&lt;/span&gt; as possible, or for the loss function &lt;span class="math"&gt;\(\mathcal L\)&lt;/span&gt; to be as close to zero.&lt;/p&gt;
&lt;p&gt;The mean squared error 
&lt;/p&gt;
&lt;div class="math"&gt;$$\mathcal L(\theta) = \frac{1}{2} \sum_{x} (f^*(\textbf{x}) - f( \textbf{x} ; \theta))^2$$&lt;/div&gt;
&lt;p&gt;has a nice derivative 
&lt;/p&gt;
&lt;div class="math"&gt;$$\nabla{\mathcal L_{\theta}} = \sum_{x} (f^*(\textbf{x}) - f( \textbf{x} ; \theta)) \nabla f( \textbf{x} ; \theta).$$&lt;/div&gt;
&lt;p&gt;(i.e. the product of the summed difference and the change in our estimated function &lt;span class="math"&gt;\(f(\textbf{x}; \theta)\)&lt;/span&gt; with respect to a change in &lt;span class="math"&gt;\(\theta\)&lt;/span&gt;)&lt;/p&gt;
&lt;h3&gt;Optimization, Gradient Descent&lt;/h3&gt;
&lt;p&gt;In thinking of our loss function as a terrain, we want the coordinates that reaches the lowest valley.&lt;/p&gt;
&lt;p&gt;We start at coordinates &lt;span class="math"&gt;\(\theta_0\)&lt;/span&gt; and ask, how do we find the deepest valley? Intuitively, a natural step would to go in the direction with the steepest incline by a small &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; sized step, &lt;span class="math"&gt;\(-\alpha \nabla_{\theta}{\mathcal L}\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Taking the step, we arrive at a new coordinate &lt;span class="math"&gt;\(\theta_1\)&lt;/span&gt;. Repeating this process choose the direction with the steepest decline until we reach our destination&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\theta_{n+1} = \theta_{n} - \alpha \nabla_{\theta}{\mathcal L}\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Backpropagation&lt;/h3&gt;
&lt;p&gt;Going back to the XOR problem we have&lt;/p&gt;
&lt;div class="math"&gt;$$\textbf{x} \rightarrow f(\textbf{W}^T\textbf{x}) = \textbf{h}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\textbf{h} \rightarrow g(\textbf{w}^T \textbf{h}) \rightarrow \textbf{w}^T f(\textbf{W}^T\textbf{x} ) = y.$$&lt;/div&gt;
&lt;p&gt;The parameter &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; is made up of different weights &lt;span class="math"&gt;\(\textbf W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\textbf w\)&lt;/span&gt; that the network will need to learn.&lt;/p&gt;
&lt;p&gt;Thus &lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\nabla_{x} \mathcal L &amp;amp;= \frac{\partial \mathcal L}{\partial y} \\
&amp;amp;= \frac{\partial y}{\partial (\textbf w^T \textbf h)} \\
&amp;amp;= \frac{\partial (\textbf w^T \textbf h)}{\partial h} \\
&amp;amp;= \frac{\partial h}{\partial (\textbf W ^T \textbf x)} \\
&amp;amp;= \frac{\partial (\textbf W^T \textbf x)}{\partial x}
\end{aligned}$$&lt;/div&gt;
&lt;div class="math"&gt;$$(y - y^*) \textbf w  f'(.) \textbf W$$&lt;/div&gt;
&lt;p&gt;where y is our predicted value, &lt;span class="math"&gt;\(y^*\)&lt;/span&gt; is the true value.&lt;/p&gt;
&lt;p&gt;So &lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_{w} \mathcal L = \frac{\partial \mathcal L}{\partial y}
\frac{\partial y}{\partial (\textbf w^T \textbf h)}
\frac{\partial (\textbf w^T \textbf h)}{\partial \textbf w} = (y - y^*)  \textbf h $$&lt;/div&gt;
&lt;p&gt;and &lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\nabla_{W} \mathcal L &amp;amp;= \frac{\partial \mathcal L}{\partial y} \frac{\partial y}{\partial (\textbf w^T \textbf h)}
\frac{\partial (\textbf w^T \textbf h)}{\partial h}
\frac{\partial h}{\partial (\textbf W ^T \textbf x)}
\frac{\partial (\textbf W^T \textbf x)}{\partial W} \\
&amp;amp;= (y - y^*) \textbf w f'(\textbf W ^T \textbf x)\textbf x
\end{aligned}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial \mathcal L}{\partial y} = (y - y^*)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial (\textbf w^T \textbf h)}{\partial h} = \textbf w$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial h}{\partial (\textbf W ^T \textbf x)} = f'(\textbf W ^T \textbf x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial (\textbf W^T \textbf x)}{\partial x}= \textbf W$$&lt;/div&gt;
&lt;h3&gt;Activation Function&lt;/h3&gt;
&lt;p&gt;The most common non-linear function used in modern neural networks is the ReLU &lt;/p&gt;
&lt;div class="math"&gt;$$f(z) = \max(0, z)$$&lt;/div&gt;
&lt;p&gt;or variations of it. &lt;/p&gt;
&lt;p&gt;Its derivative &lt;/p&gt;
&lt;div class="math"&gt;$$f'(z) = \max(0, 1)$$&lt;/div&gt;
&lt;p&gt;is easy to compute even though it is non differentiable at 0.&lt;/p&gt;
&lt;p&gt;The sigmoid function &lt;/p&gt;
&lt;div class="math"&gt;$$g(z) = \frac{1}{1 + \exp(-z)}$$&lt;/div&gt;
&lt;p&gt; is used in binary classification problems with derivative &lt;/p&gt;
&lt;div class="math"&gt;$$g'(z) = g(z)(1 - g(z))$$&lt;/div&gt;
&lt;h2&gt;Numpy Implementation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; A  B | XOR(A,B)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-----------------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; |     &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;-----------------&lt;/span&gt;
 &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; non-linear function &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dx_sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maximum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dx_relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loss_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# 100 iterations &lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;

&lt;span class="n"&gt;input_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;output_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="c1"&gt;# learning rate&lt;/span&gt;

&lt;span class="n"&gt;hidden_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_dim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_dim&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hidden_dim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_dim&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;activation_fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relu&lt;/span&gt;
&lt;span class="n"&gt;dx_activation_fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dx_relu&lt;/span&gt;


&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# forward pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2) x (2, 2) -&amp;gt; (4, 2)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;fc1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;activation_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2) x (2, 1) ==&amp;gt; (4, 1)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loss_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Loss: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.6f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  Step: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;## backward pass &lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;#(4x1)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;delta_hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dx_activation_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;## gradient descent&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;grad_w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;grad_w&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;grad_W&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta_hidden&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;grad_W&lt;/span&gt;



&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000012&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000003&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000001&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000001&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prediction&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;predicted &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;.5f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; =&amp;gt; true &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;0.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;1.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;1.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;0.00084&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.85018314&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.80808135&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;0.85056309&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.80776054&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mf"&gt;1.1756913&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.23749876&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;plot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Axes3D&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;xorNet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fc1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;

&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;splot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;surface plot of the xor outputs of&lt;/span&gt;
&lt;span class="sd"&gt;    the self.net for a mesh grid inputs of a and b:&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xorNet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inferno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;&lt;span class="c1"&gt;#edgecolor=&amp;#39;none&amp;#39;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;azim&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_yticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XOR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;ax3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;splot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="xor-relu-soln" src="images/xor-relu-soln.jpg"&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Password Store</title><link href="/password-store.html" rel="alternate"></link><published>2020-08-07T00:00:00+01:00</published><updated>2020-09-02T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-07:/password-store.html</id><summary type="html">&lt;p&gt;After taking more than a few hours to reset my Pass for iOS repository on my
phone, I thought it would be good to write a short guide to setting one up.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href="https://github.com/yishilin14/asc-key-to-qr-code-gif"&gt;official Pass for iOS
Wiki&lt;/a&gt; to see alternative
methods. Here I only explain one sequence of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After taking more than a few hours to reset my Pass for iOS repository on my
phone, I thought it would be good to write a short guide to setting one up.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href="https://github.com/yishilin14/asc-key-to-qr-code-gif"&gt;official Pass for iOS
Wiki&lt;/a&gt; to see alternative
methods. Here I only explain one sequence of setting up a the repository.&lt;/p&gt;
&lt;p&gt;Assuming your password store is already set up with a local git repository,
create a remote and hidden repository on github. &lt;/p&gt;
&lt;p&gt;Generate a new ssh key pair for cloning into the remote repository:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;puttygen -t rsa -b 2048 -O private-openssh -o pass_for_ios.key&lt;/code&gt; and &lt;code&gt;puttygen
pass_for_ios.key -C "Pass for iOS" -O public-openssh -o pass_for_ios.pub&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Importing ASCII-armored keys&lt;/h2&gt;
&lt;p&gt;Clone into this repo to use the asc2qr.sh script
&lt;code&gt;https://github.com/4bitfocus/asc-key-to-qr-code&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;(I tried using &lt;code&gt;https://github.com/yishilin14/asc-key-to-qr-code-gif&lt;/code&gt;
recommended by the guide but it didn't work)&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;asc2qr.sh pass_for_ios.key&lt;/code&gt; to generate Q1.png qr image which encodes your
ssh key.  Use it as your authentication method.&lt;/p&gt;
&lt;p&gt;Similarly for your PGP keys, both public and private, use the script to
generate QR images to import your PGP keys to the app.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;git repository url:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh://git@github.com/&lt;username&gt;/&lt;repo-name&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;branch name:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;username&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Authentication method&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH Key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Remember to exclude the &lt;code&gt;.git&lt;/code&gt; from the repo name&lt;/p&gt;
&lt;p&gt;That should be all :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;resetting ssh passphrase&lt;/strong&gt;
&lt;code&gt;ssh-keygen -f ~/.ssh/pass_for_ios.key -p&lt;/code&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>An OpenAI Challenge</title><link href="/xor-lstm.html" rel="alternate"></link><published>2020-08-04T00:00:00+01:00</published><updated>2020-08-04T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-04:/xor-lstm.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Problem Statement:&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Train an LSTM to solve the XOR problem: that is, given a sequence of bits,
determine its parity. The LSTM should consume the sequence, one bit at a time,
and then output the correct answer at the sequence’s end. &lt;/p&gt;
&lt;p&gt;Test the two approaches below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a dataset …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Problem Statement:&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Train an LSTM to solve the XOR problem: that is, given a sequence of bits,
determine its parity. The LSTM should consume the sequence, one bit at a time,
and then output the correct answer at the sequence’s end. &lt;/p&gt;
&lt;p&gt;Test the two approaches below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a dataset of random 100,000 binary strings of length 50. Train the
  LSTM; what performance do you get?&lt;/li&gt;
&lt;li&gt;Generate a dataset of random 100,000 binary strings, where the length of each
  string is independently and randomly chosen between 1 and 50. Train the LSTM.
  Does it succeed? What explains the difference?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LSTM networks have been used with success on sequential data. &lt;/p&gt;
&lt;p&gt;A great introduction to recurrent neural networks, specifically LSTM (long
short-term memory) networks can be found reading through Chris Olah's
explanation on &lt;a href="https://colah.github.io/posts/2015-08-Understanding-LSTMs/"&gt;understanding
LSTMs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the problem statement it specifies "The LSTM should consume the sequence,
one but at a time &amp;hellip;"&lt;/p&gt;
&lt;p&gt;As we are considering sequential data it seems that an LSTM would be a good
architectural choice in training a neural network to learn the parity of
a sequence of bits. &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Parity.&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The parity of a sequence checks the number of 1-bits. In our case we will
consider odd-parity, the function returning 1 if the number of bits in
a sequence is odd, 0 if even.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Parity function.&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The function takes in a sequence of bits and returns the parity bit of the
sequence. Returning 1 if the sequence contains an odd amount of 1-bits,
0 otherwise.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The parity function can be written as &lt;/p&gt;
&lt;div class="math"&gt;$$f(\textbf{x}) = x_1 \oplus x_2 \oplus \ldots \oplus x_n$$&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(\oplus\)&lt;/span&gt; is the XOR function defined by the table below&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;A &lt;span class="math"&gt;\(\oplus\)&lt;/span&gt; B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;functools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="mi"&gt;55&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# parity check, function = xor, acc = 0 sequece, 0s and 1s&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bitstring     |  parity &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  |    &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;bitstring&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;parity&lt;/span&gt; 
&lt;span class="o"&gt;-------------------------&lt;/span&gt;
&lt;span class="mi"&gt;001011110010&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trace_xor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    shows the intermediate steps of &lt;/span&gt;
&lt;span class="sd"&gt;    xor function on &lt;/span&gt;
&lt;span class="sd"&gt;    a sequence&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; XOR &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;


&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace_xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The middle column corresponds to our bit string we want to check. Notice the
left column is the previous result from XOR(a, b). As a consequence, the final
result only depends on XOR of the previously returned result. In our example the
last bit of our sequence being 1 and the previously returned XOR result, 0. &lt;/p&gt;
&lt;h2&gt;Experiment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generating parity data &lt;/li&gt;
&lt;li&gt;Training and evaluating LSTM&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.nn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;nn&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.utils.data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;data&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;torch.utils.data&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;
&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cuda&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Data&lt;/span&gt;
&lt;span class="n"&gt;TRAINING_SIZE&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;BIT_LEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Model Parameters&lt;/span&gt;
&lt;span class="n"&gt;INPUT_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;HIDDEN_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;NUM_LAYERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Training Parameters&lt;/span&gt;
&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;EPOCHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;LEARNING_RATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt; &lt;span class="c1"&gt;# DEFAULT ADAM 0.001&lt;/span&gt;

&lt;span class="n"&gt;THRESHOLD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; GENERATE XOR DATA &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bit_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# we generate random integers and pad the bits with zeros&lt;/span&gt;
            &lt;span class="c1"&gt;# to mimic variable bit string lengths &lt;/span&gt;
            &lt;span class="c1"&gt;# padding with zeros as they do not provide information&lt;/span&gt;
            &lt;span class="c1"&gt;# TODO: vectorize instead of loop?&lt;/span&gt;
            &lt;span class="n"&gt;pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;

        &lt;span class="n"&gt;bitsum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cumsum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# if bitsum[i] odd: -&amp;gt; True&lt;/span&gt;
        &lt;span class="c1"&gt;# else: False&lt;/span&gt;
        &lt;span class="n"&gt;parity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitsum&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Linear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sigmoid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lengths&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;h0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Forward propagate LSTM&lt;/span&gt;
        &lt;span class="n"&gt;out_lstm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
        &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_lstm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INPUT_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HIDDEN_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NUM_LAYERS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;criterion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BCELoss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;optimizer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;optim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Adam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LEARNING_RATE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# train&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;train&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;train_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRAINING_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                    &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;total_step&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_loader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Training...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;epoch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOCHS&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_loader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Forward pass&lt;/span&gt;
            &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Backward and optimize&lt;/span&gt;
            &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zero_grad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatTensor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Epoch [&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;], Step [&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;], Loss: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;, Accuracy: &lt;/span&gt;&lt;span class="si"&gt;{:.3f}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; 
                       &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epoch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOCHS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;THRESHOLD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EARLY STOPPING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;total_step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;valid_accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;validation accuracy: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_accuracy&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_accuracy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;THRESHOLD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EARLY STOPPING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;valid_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                        &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;
                        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;valid_loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;no_grad&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;Training&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7235&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.375&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6935&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.460&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;750&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6767&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.618&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.368&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1250&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4462&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.873&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0427&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.000&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;EARLY&lt;/span&gt; &lt;span class="n"&gt;STOPPING&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Model Summary&lt;/h3&gt;
&lt;p&gt;In viewing neural network architectures as function composition we see
recurrent neural networks can be viewed as a reduce operation on an input
sequence.&lt;/p&gt;
&lt;p&gt;&lt;img alt="rnn" src="images/RNN-encoding.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Considering one bit at a time and remembering the previous partial result in
a recurrent or multi-step architecture reduces the problem of learning k-bit
parity to the simple one of learning just 2-bit parity.&lt;/p&gt;
&lt;h3&gt;The Architecture&lt;/h3&gt;
&lt;p&gt;Below is a diagram showing the architecture of the LSTM.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xor lstm" src="images/xor_lstm.jpg"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;

&lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;LSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;Linear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bias&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;Sigmoid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sampleX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Cumulative parity of sample bit&lt;/strong&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sampleX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sampleY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>SVD</title><link href="/svd.html" rel="alternate"></link><published>2020-07-25T00:00:00+01:00</published><updated>2021-04-24T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-07-25:/svd.html</id><summary type="html">&lt;p&gt;Take an &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt;  matrix &lt;span class="math"&gt;\(X\)&lt;/span&gt;. The factorized form using singular value
decomposition is &lt;span class="math"&gt;\(U\Sigma V^T\)&lt;/span&gt; where &lt;span class="math"&gt;\(U\)&lt;/span&gt; is a &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt; matrix, &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; and
&lt;span class="math"&gt;\(V^T\)&lt;/span&gt; are &lt;span class="math"&gt;\(m \times m\)&lt;/span&gt; matrices.&lt;/p&gt;
&lt;h4&gt;Properties of the matrices, &lt;span class="math"&gt;\(U\)&lt;/span&gt;, &lt;span class="math"&gt;\(V\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Both &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V\)&lt;/span&gt; are orthogonal …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Take an &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt;  matrix &lt;span class="math"&gt;\(X\)&lt;/span&gt;. The factorized form using singular value
decomposition is &lt;span class="math"&gt;\(U\Sigma V^T\)&lt;/span&gt; where &lt;span class="math"&gt;\(U\)&lt;/span&gt; is a &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt; matrix, &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; and
&lt;span class="math"&gt;\(V^T\)&lt;/span&gt; are &lt;span class="math"&gt;\(m \times m\)&lt;/span&gt; matrices.&lt;/p&gt;
&lt;h4&gt;Properties of the matrices, &lt;span class="math"&gt;\(U\)&lt;/span&gt;, &lt;span class="math"&gt;\(V\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Both &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V\)&lt;/span&gt; are orthogonal matrices, &lt;span class="math"&gt;\(U^T U = I\)&lt;/span&gt;,  &lt;span class="math"&gt;\(V^T V = V V^T = I\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Singular values:&lt;/h4&gt;
&lt;p&gt;The diagonal matrix &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; has all entries off the main diagonal as zero. 
&lt;span class="math"&gt;\(\sigma_{11} \geq \sigma_{22} \geq \ldots \geq \sigma_{nn} \geq 0\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;low rank approximation:&lt;/h4&gt;
&lt;p&gt;The best approximation for &lt;span class="math"&gt;\(X \in p\)&lt;/span&gt; dimensions, &lt;span class="math"&gt;\(p &amp;lt; n\)&lt;/span&gt; is &lt;span class="math"&gt;\(U_p\Sigma_p V_p^T\)&lt;/span&gt;, the first &lt;span class="math"&gt;\(p\)&lt;/span&gt; columns of &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Principal Component Analysis&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X = U\Sigma V^T\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(U\Sigma = XV\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Other forms:&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X^T X = (U\Sigma V^T)^T U\Sigma V^T = V\Sigma U^TU\Sigma V^T = V\Sigma^2 V^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((X^T X)^{-1} = V\Sigma^{-2} V^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X(X^T X)^{-1}X^T = U\Sigma V^T V\Sigma^{-2}V^T V\Sigma U^T = UU^T\)&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Eigendecomposition&lt;/h3&gt;
&lt;p&gt;For symmetric &lt;span class="math"&gt;\(A = X^T\)&lt;/span&gt;, &lt;span class="math"&gt;\(X = V\Sigma^2 V^T\)&lt;/span&gt;, and
&lt;span class="math"&gt;\(B = XX^T = U\Sigma V^T(V\Sigma U^T) = U\Sigma^2U^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The eigenvalues of &lt;span class="math"&gt;\(A\)&lt;/span&gt; and &lt;span class="math"&gt;\(B\)&lt;/span&gt; are &lt;span class="math"&gt;\(\Sigma\Sigma^T\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma^T\Sigma\)&lt;/span&gt; respectively with eigenvectors &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V^T\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="nd"&gt;@v&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="nd"&gt;@u&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Economics in One Lesson</title><link href="/economics-in-one.html" rel="alternate"></link><published>2020-06-25T00:00:00+01:00</published><updated>2020-06-25T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-25:/economics-in-one.html</id><summary type="html">&lt;h2&gt;Notes on Economics in One Lesson by Henry Hazlitt&lt;/h2&gt;
&lt;h3&gt;The Lesson&lt;/h3&gt;
&lt;p&gt;Fallacies of economics, the self-interest of man ad the tendency to see only
the immediate effects of a given policy (overlooking secondary consequences).&lt;/p&gt;
&lt;p&gt;The whole of economics can be reduced to a single lesson, and that lesson can
be …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Notes on Economics in One Lesson by Henry Hazlitt&lt;/h2&gt;
&lt;h3&gt;The Lesson&lt;/h3&gt;
&lt;p&gt;Fallacies of economics, the self-interest of man ad the tendency to see only
the immediate effects of a given policy (overlooking secondary consequences).&lt;/p&gt;
&lt;p&gt;The whole of economics can be reduced to a single lesson, and that lesson can
be reduced to a single sentence. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The art of economics consists in looking not merely at the immediate but at
the longer effects of any act or policy; it consists in tracing the
consequences of that policy not merely for one group but for all groups.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, the opposite error is possible. We ought to not concentrate &lt;em&gt;only&lt;/em&gt;
on the long-run results.&lt;/p&gt;
&lt;h3&gt;The Broken Window&lt;/h3&gt;
&lt;p&gt;A boy smashes a bakers window. Community members claim there's positive sum in
this scenario, The payment of the glazer (to fix the window) will allow him to
spend with other merchants, the smashed window will go on providing money and
employment &amp;mdash; The boy was a public benefactor. The public fails to see the
$ 50 the baker loses in repairs. The $ 50 would have gone towards a suit.&lt;/p&gt;
&lt;p&gt;WYSIWYG (What you see is what you get).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Confusing need with demand.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The more war destroys, the more it impoverishes, the greater is the post-war
need. But need is not demand.  &lt;/p&gt;
&lt;p&gt;Effective economic demand requires not merely need but corresponding
purchasing power. The needs of China today are greater than the USA, its
purchasing power and &lt;em&gt;new business&lt;/em&gt; that it can stimulate, are smaller.&lt;/p&gt;
&lt;p&gt;There's an increase in production for &lt;em&gt;particular products&lt;/em&gt; i.e. diversion of
demand Post war demand in most countries will shrink in absolute amount as
compared to pre-war demand as a result of post-war supply shrinking.&lt;br&gt;
Technological discoveries and advances during the war, may increase individual
or national productivity.&lt;/p&gt;
&lt;p&gt;The destruction of war will, it is true, divert post-war demand from some
channels into others.&lt;/p&gt;
&lt;p&gt;A certain number of people may continue to be deceived indefinitely regarding
their real economic welfare by rising wages and prices caused by an excess of
printed money.  The belief that a genuine prosperity can be brought about by a
"replacement demand" is a fallacy.&lt;/p&gt;
&lt;h3&gt;Public Work Means Taxes&lt;/h3&gt;
&lt;p&gt;With such public works (infrastructure), necessary for their own sake, and
defended on that ground alone, I am not here concerned. I am here concerned
with public works considered as a means of "providing employment" or of adding
wealth to the community that it would not otherwise have had.&lt;/p&gt;
&lt;p&gt;The bridge built will provide X jobs per year,  however, for a bridge costing
$Y, the taxpayers will lose $Y, which could have been spent on things they
needed.&lt;/p&gt;
&lt;p&gt;At best, a &lt;em&gt;diversion&lt;/em&gt; of jobs happened as a result of the project, more
bridges, fewer auto mobile workers, farmers. (I don't agree here) Essentially,
one thing has been created instead of another.&lt;/p&gt;
&lt;p&gt;The psychological benefit of government works are that men are seen to work on
the houses, people live in them and proudly show their friends through the
rooms.&lt;/p&gt;
&lt;p&gt;The author continues to argue against government projects for the sake of
&lt;em&gt;creating jobs&lt;/em&gt;, (An argument for UBI?)&lt;/p&gt;
&lt;p&gt;Increased in tax on corporations (hurting the ability to offset losses against
gains) leads to slower expansion and enterprise.&lt;/p&gt;
&lt;p&gt;With personal income, risk-taking shrinks (investing in markets?)&lt;/p&gt;
&lt;p&gt;The larger the percentage of the national income taken by taxes the greater the
deterrent to private production and employment. &lt;/p&gt;
&lt;h3&gt;Credit Diverts Production&lt;/h3&gt;
&lt;p&gt;Assuming non-inflationary government credit&lt;/p&gt;
&lt;p&gt;Farmer A and B. Farmer A can acquire a loan from private bank, less risk for
the bank as farmer A is reputable. Government hands loan to B as &lt;em&gt;he is denied
from the bank (due to likelihood of unable to pay back loan&lt;/em&gt;. In addition to
losses from incomplete payments, increased interest rates hurt A or farm prices
as the supply decreases (due to government credit)&lt;/p&gt;
&lt;p&gt;Governments are encouraged to take on risks &lt;em&gt;too great for private industry&lt;/em&gt;
with taxpayers' money. Where private loans risk their own or face losing
business (hmm...)&lt;/p&gt;
&lt;p&gt;Another illustration of the fallacy of seeing a special short term interest,
forgetting the general interest in the long run.&lt;/p&gt;
&lt;p&gt;Government loans or subsidies to business; taxing successful private business
in order to support unsuccessful ones. &lt;/p&gt;
&lt;h3&gt;Curse of Machinery&lt;/h3&gt;
&lt;p&gt;Smith's &lt;em&gt;The Wealth of Nations&lt;/em&gt;, Chapter 1, without machinery, a workman could
hardly make one pin a day, &amp;hellip; with machinery he can make 4,8000 pins
a day. The fallacy is thinking the jobs lost due to machinery and
overproduction  &amp;hellip; may become chronic (&lt;em&gt;Recent economic changes&lt;/em&gt; - David
A. Wells).&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Elasticity&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A fall in the price of overcoats causes a larger total amount of money to be
spent on overcoats than previously, then more people may be employed even in
making overcoats than before the new labour-saving machine was introduced.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;In the case of no surplus of overcoats, just a reduced price for them, the
extra $ z leftover can be spent on something else.&lt;/p&gt;
&lt;p&gt;The result of the machine is to increase &lt;em&gt;production&lt;/em&gt;, to raise the standard of
living and increase economic welfare.&lt;/p&gt;
&lt;p&gt;Technology helps increase &lt;em&gt;voluntary&lt;/em&gt; unemployment, people can afford to work
less hours. Children and over-aged aren't required to work.&lt;/p&gt;
&lt;p&gt;Machines increase money wages or, by reducing prices, increase the goods and
services that the same money can buy. Sometimes both.&lt;/p&gt;
&lt;h3&gt;Spread-The-Work Schemes&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Fallacy&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;there is a fixed amount of work to be done in the world, if we cannot add to
this work by thinking up more cumbersome ways, we can think of ways to
distribute it.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The case of cutting maximum hours, allowing additional people to be employed,
reduces the wages of the original employee. Furthermore, the purchase of more
leisure was probably not a &lt;em&gt;voluntary&lt;/em&gt; decision.&lt;/p&gt;
&lt;p&gt;In increasing hourly rate to compensate for a shorter working week, an increase
in production costs may happen. A policy of monetary inflation, to enable
prices to rise so the increased hourly wages can be paid disguises &lt;em&gt;real&lt;/em&gt; wage
rates.&lt;/p&gt;
&lt;p&gt;The greatest downfall is the above fallacy. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"There is no limit to the amount of work to be done as long as any human need
or wish that work could fill remain unsatisfied"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Disbanding Troops and Bureaucrats&lt;/h3&gt;
&lt;p&gt;Argument for encouraging troops to become self-supporting civilians i.e.
integrated into normal civilian workforce.&lt;/p&gt;
&lt;p&gt;They (soldiers, policemen, firemen, street cleaners, health officers i.e. key
workers) make it possible for private industry to function in an atmosphere of
law, order, freedom and peace. But their justification consists in the utility
of their services. It does not consist in the "purchasing power" they possess
by virtue of being on the public payroll. &lt;/p&gt;
&lt;h3&gt;The Fetish of Full Employment&lt;/h3&gt;
&lt;p&gt;The economic goal of any nation, as of any individual, is to get the greatest
results with the least effort.&lt;/p&gt;
&lt;p&gt;Maximize production, employment merely the means.&lt;/p&gt;
&lt;p&gt;We can easily have full employment without full production.&lt;/p&gt;
&lt;p&gt;The progress of civilization has meant the reduction of employment, not its
increase. (Abolished child labour)&lt;/p&gt;
&lt;h3&gt;The Drive For Exports&lt;/h3&gt;
&lt;p&gt;Exports and imports must equal each other in the long run.&lt;/p&gt;
&lt;p&gt;Deciding to increase our exports, also decide to increase imports &amp;hellip;
foreign exchange&lt;/p&gt;
&lt;p&gt;National government loans (upside to loans not being repaid) -&amp;gt; ???&lt;/p&gt;
&lt;p&gt;An export subsidy is a clear case of giving a foreigner something for nothing.
It is another case of trying to get rich by giving things away.&lt;/p&gt;
&lt;p&gt;Bad loans and export subsidies may have negative first-order effects, but
greater long-run outcomes. (?)&lt;/p&gt;
&lt;h3&gt;"Parity" Prices&lt;/h3&gt;
&lt;p&gt;Example, rise in farmer prices so he can afford industrial equipment. Prices
should rise relative to each other. &lt;/p&gt;
&lt;p&gt;The farmers get more for their crops thus purchase power increases, more
prosperous and buy more for industry products.&lt;/p&gt;
&lt;p&gt;However, the increased commodity prices bump up the prices of goods related.
Wheat and bread. The city bread buyer thus loses purchase power, no net
industry gain.&lt;/p&gt;
&lt;p&gt;The agricultural increase in business leads to city business decrease.&lt;/p&gt;
&lt;p&gt;The farmer reducing production for "parity" produces less, his income does not
increase in proportion to his prices.  &lt;/p&gt;
&lt;p&gt;So the alleged benefits of still another scheme evaporate as soon as we trace
not only its immediate effects on a special group but its long-run effects on
everyone.&lt;/p&gt;
&lt;h3&gt;Saving the X Industry&lt;/h3&gt;
&lt;p&gt;Saving industry x as a generalized parity argument/tariff.&lt;/p&gt;
&lt;p&gt;In order that new industries may grow fast enough it is necessary for some old
to be allowed to shrink or die for the sake of releasing capital and labour for
new industries (Horse and buggy trade)&lt;/p&gt;
&lt;h3&gt;"Stabilizing" Commodities&lt;/h3&gt;
&lt;p&gt;Government intervention -&amp;gt; keeps high-cost producers in the game, causing
inefficiency in the market. Without intervention, the inefficient producers are
driven out, the efficient ones can expand and produce at a lower cost. Thus
raising more capital for the economy. (?) (Advocating for monopolies?)&lt;/p&gt;
&lt;h3&gt;Government Price-Fixing&lt;/h3&gt;
&lt;p&gt;Argument for price fixing, keeping costs down so everyone can get a fair share
than only the people with purchasing power allowed.&lt;/p&gt;
&lt;h3&gt;Minimum Wage Laws&lt;/h3&gt;
&lt;p&gt;Minimum wage caps the amount of man power by not being able to employ workers
that are worth less than minimum wage. For a low wage you substitute for
unemployment. (hmm...)&lt;/p&gt;
&lt;p&gt;The benefit of minimum wage is for workers being paid below market value.&lt;/p&gt;
&lt;p&gt;Argument for scrapping minimum wage states that industry X should be priced out
if it can't pay above minimum wage. However, more jobs lost (whole industry)
more than it produces.&lt;/p&gt;
&lt;p&gt;The best way to raise wages is to raise labour productivity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increase in capital accumulation (new machines to aid workers)&lt;/li&gt;
&lt;li&gt;New technology&lt;/li&gt;
&lt;li&gt;Efficient management&lt;/li&gt;
&lt;li&gt;Efficient and industrious workers&lt;/li&gt;
&lt;li&gt;Better education and training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The more he produces the more he increases community wealth, the more his
services are worth to consumers and employers hence the more he'll get paid.&lt;/p&gt;
&lt;h3&gt;Lessons Restated&lt;/h3&gt;
&lt;p&gt;Economics is a science recognising &lt;em&gt;secondary&lt;/em&gt; consequences and seeing
&lt;em&gt;general&lt;/em&gt; consequences.  &lt;/p&gt;
&lt;p&gt;There's no change in public taste/morals that would not hurt someone.  &lt;/p&gt;
&lt;p&gt;Less policemen, lawyers and judges without criminals (there'll be increase in
another field (?))&lt;/p&gt;
&lt;p&gt;Tariffs, destruction of machinery, restriction schemes: the insane doctrine of
wealth through scarcity.&lt;/p&gt;
&lt;p&gt;May always be privately true for any particular group of producers in isolation
but a doctrine which is publicly false.&lt;/p&gt;
&lt;p&gt;To see the problem as a whole, and not in fragments: that is the goal of
economic science.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;New Terminology&lt;/strong&gt; :)&lt;/p&gt;
&lt;h3&gt;Dictionary&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Sophism&lt;/dt&gt;
&lt;dd&gt;A plausible but fallacious argument.&lt;/dd&gt;
&lt;dt&gt;Purchasing power&lt;/dt&gt;
&lt;dd&gt;the amount of goods and services that can be purchased with a unit of currency&lt;/dd&gt;
&lt;dt&gt;Impetus&lt;/dt&gt;
&lt;dd&gt;the force with which any body is driven or impelled; Momentum&lt;/dd&gt;
&lt;/dl&gt;</content><category term="blog"></category></entry><entry><title>sunset</title><link href="/sunset.html" rel="alternate"></link><published>2020-06-15T15:36:29+01:00</published><updated>2020-06-15T15:36:29+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-15:/sunset.html</id><summary type="html">&lt;p&gt;I've been thinking about sunsets recently and the lack of them &lt;a href=""&gt;at home.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Why in the East, was I blessed to witness spectacular sunsets daily and now left with only memories of orange-hazed skies?&lt;/p&gt;
&lt;h3&gt;Scattering&lt;/h3&gt;
&lt;p&gt;When white light passes through our atmosphere, gases in our atmosphere absorb and scatter the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been thinking about sunsets recently and the lack of them &lt;a href=""&gt;at home.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Why in the East, was I blessed to witness spectacular sunsets daily and now left with only memories of orange-hazed skies?&lt;/p&gt;
&lt;h3&gt;Scattering&lt;/h3&gt;
&lt;p&gt;When white light passes through our atmosphere, gases in our atmosphere absorb and scatter the shorter wavelength (blue and violet). The scattered blue light thus illuminates the sky.&lt;/p&gt;
&lt;h3&gt;Orange sky at night&amp;hellip;&lt;/h3&gt;
&lt;p&gt;The light travelling from the sun near the horizon passes through more atmosphere to reach the observer. Blue light scatters multiple times, leaving longer wavelengths visible &amp;mdash; the yellow, orange and reds found at sunrise and sunset.&lt;/p&gt;
&lt;h3&gt;Clouds &amp;amp; Particles&lt;/h3&gt;
&lt;p&gt;Particles larger than oxygen and nitrogen molecules cause a reduction in saturation hence rural sunsets appear more vibrant.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This was an excuse to post my sunset pics.  &lt;em&gt;Enjoy&lt;/em&gt; &lt;strong&gt;:)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="New College 19th Floor view" src="/images/19th.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="motorbiking" src="/images/moto.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Langkawi" src="/images/langkawi.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paknai" src="/images/paknai.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paknai II" src="/images/paknaii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden" src="/images/garden.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden II" src="/images/gardenii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden III" src="/images/gardeniii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="watershed I" src="/images/shed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="watershed II" src="/images/watershed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Last HK sunset" src="/images/last.jpg"&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Dear me</title><link href="/dear-me.html" rel="alternate"></link><published>2020-06-05T00:00:00+01:00</published><updated>2020-06-05T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-05:/dear-me.html</id><summary type="html">&lt;p&gt;Keep up the good school work. It's vital that you build a strong foundation for
the sciences, a desire to never stop learning. Mathematics &amp;mdash; It'll open
doors and give you options just like you originally planned. But never forget
about others; people are important, each interaction moulds us. &lt;/p&gt;
&lt;p&gt;Take risks …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Keep up the good school work. It's vital that you build a strong foundation for
the sciences, a desire to never stop learning. Mathematics &amp;mdash; It'll open
doors and give you options just like you originally planned. But never forget
about others; people are important, each interaction moulds us. &lt;/p&gt;
&lt;p&gt;Take risks. Ask for more. Feel rejection early on. You'll come to a point in
which you will fail. School is a microcosm, a finite game in an infinite one.
Yes, the lessons learned and grades obtained will decide the paths you can
take. However, it isn't the be-all and end-all. You know this already. &lt;/p&gt;
&lt;p&gt;I think about if you should take this on board, whether to explore more outside
school. Make things whilst you're young. Write. Draw. Create. Be aware of
failure but don't shy away from it. Calculated, not dismissive and wholly, risk
averse.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Writing to my younger self. If, somehow you we're able to read my advice, what
would become of me today? &lt;/p&gt;
&lt;p&gt;It reminds me of Ted Chiang's shorts, Story of Your Life and the Merchant and
the Alchemist's gate, both exploring the nature of time. How, in the first
story the narrator learns to perceive time not in a linear, sequential order
but as "a refracted ray of light must know all possible paths to travel along
the minimal path". &lt;/p&gt;
&lt;p&gt;And in the second,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Past and future are the same, and we cannot change either, only know them
more fully.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;h3&gt;Future me,&lt;/h3&gt;
&lt;p&gt;Pay attention to what has been said to younger us. I trust you. I trust in the
foundation our younger self has laid. I trust in the decisions we make,
whatever the outcome.&lt;/p&gt;
&lt;p&gt;What's the point of hindsight? &lt;/p&gt;
&lt;p&gt;I, writing this, currently believe there's only one thing I regret so far. If
one can learn from their supposed mistake, then I would like to think regret
doesn't fit. There's still time, only now you know what it feels to lose.  In
all seriousness. I hope whatever you're doing, wherever you are, that you have
stuck to our values.&lt;/p&gt;
&lt;p&gt;Your nails better be pristine :)&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Revolution of our Time</title><link href="/revolution-of-our-time.html" rel="alternate"></link><published>2020-06-03T00:00:00+01:00</published><updated>2020-06-03T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-03:/revolution-of-our-time.html</id><summary type="html">&lt;p&gt;"But half of the T-shirts I own are black &amp;hellip;" &lt;/p&gt;
&lt;p&gt;I didn't give much thought to the political situation before flying out.
Flights were booked and in my mind, Hong Kong was home for the next 10 months.
Protests simmering over summer weren't going away. One side, had to give. &lt;/p&gt;
&lt;p&gt;An …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"But half of the T-shirts I own are black &amp;hellip;" &lt;/p&gt;
&lt;p&gt;I didn't give much thought to the political situation before flying out.
Flights were booked and in my mind, Hong Kong was home for the next 10 months.
Protests simmering over summer weren't going away. One side, had to give. &lt;/p&gt;
&lt;p&gt;An aptly named Special Administration Region, Hong Kong had been surrendered by
China to the British on a 99-year lease. In 1997, the transition began with the
establishment of the "One country, two systems"  policy, lasting until 2047 in
which the handover would be complete. During this period, outlined in Chapter
1, Article 5 of the constitution:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The socialist system and policies shall not be practiced in the Hong Kong
Special Administrative Region, and the previous capitalist system and way of
life shall remain unchanged for 50 years.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The erosion of this common law happens while our governments and large
institutions ignore.&lt;/p&gt;
&lt;p&gt;I remember 3 years prior, my first time as a sightseer on the A11 bus from the
Chek Lap Kok Airport. As we passed across the Tsing Ma bridge, high-rise
buildings emerged in the distance, growing as we ventured further into the
heart of Hong Kong. I looked out of the window and up. Monolithic tower blocks
loomed over me like the opening scene of Akira. Shouldered together in clusters
they formed mansions, estates and homes. Squeezed between a supermarket and a
medicinal shop, steam waft from the bamboo baskets of a food vendor. In the
same frame, meter-wide circular trays sat outside a dried food shop, scattered
with shrimp. The smell, off putting for some, memorable to say the least.&lt;/p&gt;
&lt;p&gt;Spanning the majority of the Island, Hong Kong Tramways operates as strident as
the first journey in 1904. No wider than the shoulder width of 3 adults, the
tram system is frequented by locals and tourists. On a day without
responsibility, ride the full 26km circuit from Kennedy Town to Shau Kei Wan
and back. Observe the speed at which the world around moves, time is money and
so is space.&lt;/p&gt;
&lt;p&gt;Connecting Hong Kong to its most remote districts, the MTR rivals the
efficiency and cleanliness of Singapore's MRT and Tokyo's Metro. Buses run here
too. The service worth noting are the little green or red minibus rocket ships
&amp;mdash; the red ones especially. Without check-pointed stops, one must &lt;em&gt;shout&lt;/em&gt;
where to get off &amp;hellip; in Cantonese of course, or continue the ride on the
world's most cortisol-raising mode of public transport. &lt;/p&gt;
&lt;p&gt;Asking a local friend what to do with my free time, she replied: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Eat." &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From 3 a.m dim sum to afternoon tea at the Peninsula, it is hard to find an
hour without thinking about food. With 92% of GDP composed of services,
fulfilling your daydreams and stomach is never an issue; spending a leisurely
hour on a bowl of cart noodles, is, however. If warm service and patient staff
are &lt;em&gt;essential&lt;/em&gt; to your meal experience, there are plenty of expat-friendly
places that'd gladly offer you an international experience. Old Hong Kong has
no time or space to entertain.&lt;/p&gt;
&lt;p&gt;Owing to the hilly topology, there's no shortage of mountains and peaks in
which the world is seen with childlike awe. Any mountain, hill or peak you
choose (the 19th floor New College pantry anyone?) land, sea and concrete
civilization awaits you at the top. For the adventurous, Hong Kong is hard to
disappoint;  a variety of hiking trails are scattered across the terrain to
roam and explore. &lt;/p&gt;
&lt;p&gt;Sunsets, high and low are once again novel. The wet marshlands of Pak Nai
overlooks to the Shenzhen special economic zone; sun rays reflect off the
marshland plains creating a mirror world below the horizon. The focus shifts to
the mainland after dusk &amp;mdash; across the sea, Shenzhen illuminates the night
with a white halogen glow. The future is just across the water.&lt;/p&gt;
&lt;h4&gt;11/11&lt;/h4&gt;
&lt;p&gt;Mistrust towards the Hong Kong police force grew stronger as the police
increased their aggression on the protestors and the death of Alex Chow, a
HKUST student. On the night before the planned general strike, the police force
stormed a university hall and arrested a student. In response to the invasion,
the universities across Hong Kong barricaded their campuses; road blocks
followed. Peaceful protests continued throughout the week, office workers on
the streets in Central and malls echoing chants of support. Hong Kong's youth,
taking centre stage.&lt;/p&gt;
&lt;p&gt;West Gate entrance, the University of Hong Kong. As police progressed towards
the East gate exit, protestors strengthened their hold on the entrances to the
campus. The empty street decorated with bricks, each block propped upon two
others like legs. By midnight, from Flora Ho to HKU Exit C1, Pok Fu Lam heard
no sirens, all vehicles were re-routed around the campus.&lt;/p&gt;
&lt;p&gt;A car approaches, stops and leaves.&lt;/p&gt;
&lt;p&gt;"They've come to deliver supplies. Food, masks, helmets, water &amp;hellip;" &lt;/p&gt;
&lt;p&gt;There were students no older than 18 at the lookout posts, what do their
parents think? &lt;/p&gt;
&lt;p&gt;"The ones outside support them. When they were our age they fought the same
struggle we did. It's the revolution of our time." &lt;/p&gt;
&lt;h4&gt;Chapter 1, Article 1:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;The Hong Kong Special Administrative Region is an inalienable part of the
People's Republic of China.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For better or for worse, China will not back away from what is theirs. The
people of Hong Kong kindle the flame of hope. However small it is.&lt;/p&gt;
&lt;h4&gt;2047.&lt;/h4&gt;
&lt;p&gt;To some it can't arrive any faster.&lt;/p&gt;
&lt;p&gt;To anyone who can, see for yourself what it is before it is no more.&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>grok the term</title><link href="/grok-the-term.html" rel="alternate"></link><published>2020-01-29T00:00:00+00:00</published><updated>2020-12-26T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-29:/grok-the-term.html</id><summary type="html">&lt;p&gt;A few minutes into a conversation about &lt;a href=""&gt;why I use Linux&lt;/a&gt;, I am hit with the question. &lt;em&gt;So what is&lt;/em&gt; a terminal?&lt;/p&gt;
&lt;p&gt;looking at a segment of &lt;code&gt;pstree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ├─st───zsh───tmux: client
 └─st───zsh───pstree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see htop running on this terminal.&lt;/p&gt;
&lt;p&gt;Now if we look at the process …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few minutes into a conversation about &lt;a href=""&gt;why I use Linux&lt;/a&gt;, I am hit with the question. &lt;em&gt;So what is&lt;/em&gt; a terminal?&lt;/p&gt;
&lt;p&gt;looking at a segment of &lt;code&gt;pstree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ├─st───zsh───tmux: client
 └─st───zsh───pstree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see htop running on this terminal.&lt;/p&gt;
&lt;p&gt;Now if we look at the process tree below&amp;hellip;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ─firefox─┬─Privileged Cont───20*&lt;span class="o"&gt;[{&lt;/span&gt;Privileged Cont&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─Web Content───26*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─2*&lt;span class="o"&gt;[&lt;/span&gt;Web Content───23*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]]&lt;/span&gt;
          ├─2*&lt;span class="o"&gt;[&lt;/span&gt;Web Content───24*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]]&lt;/span&gt;
          ├─Web Content───15*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─WebExtensions───22*&lt;span class="o"&gt;[{&lt;/span&gt;WebExtensions&lt;span class="o"&gt;}]&lt;/span&gt;
          └─79*&lt;span class="o"&gt;[{&lt;/span&gt;firefox&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Woah&lt;/em&gt;, a lot more processes.&lt;/p&gt;
&lt;p&gt;Firefox uses a &lt;em&gt;graphical user interface (GUI)&lt;/em&gt; which runs more programs for user accessibility. &lt;/p&gt;
&lt;p&gt;By interacting with a terminal, I reduce the need to expend resources at the expense of learning a new skill.&lt;/p&gt;
&lt;p&gt;Consider another example. Using Notepad++ and Vim. Or Vim and gVim (vim running with a GUI).
Scaling up, we get to a desktop with its clickable menus and convenient taskbar. &lt;/p&gt;
&lt;p&gt;For a laptop that is 10 years old, extra processes takes it's toll.&lt;br&gt;
I also only use a handful of applications: text-editor, file manager, music player, pdf viewer. Everything else is online. &lt;/p&gt;
&lt;p&gt;No desktop, minimal GUI, only the applications I need.&lt;/p&gt;
&lt;p&gt;I think Bruce Lee sums it up well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Absorb what is useful, discard what is useless and add what is specifically your own.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="blog"></category></entry><entry><title>The Year of Creating</title><link href="/the-year-of-creating.html" rel="alternate"></link><published>2020-01-29T00:00:00+00:00</published><updated>2020-01-29T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-29:/the-year-of-creating.html</id><summary type="html">&lt;h3&gt;It's not too late for new years resolutions!&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Lunar_calendar"&gt;New Years&lt;/a&gt; have arrived
and I'm still without a goal to chase. An accomplishment to achieve by the end
of the year.&lt;/p&gt;
&lt;p&gt;From the CGP Grey video I have decided to make it the year of creating.&lt;/p&gt;
&lt;p&gt;Resolutions are hard rules …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;It's not too late for new years resolutions!&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Lunar_calendar"&gt;New Years&lt;/a&gt; have arrived
and I'm still without a goal to chase. An accomplishment to achieve by the end
of the year.&lt;/p&gt;
&lt;p&gt;From the CGP Grey video I have decided to make it the year of creating.&lt;/p&gt;
&lt;p&gt;Resolutions are hard rules to follow.  Humans aren't too good at sticking to
hard rules.  Instead, yearly themes are substituted as a way of defining our
yearly goals.&lt;/p&gt;
&lt;p&gt;The beauty of themes is that they aren't strictly defined. This plays well with
ever changing goals and circumstances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So why creating?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For months, I have been meaning to improve my ability to communicate well
through writing. So far, not much has been produced in terms of publishable
content. I hope to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Increase the amount of written files I produce.&lt;/strong&gt; Whether that is on daily
  entries on how I feel, technical topics accessible to anyone literate or an
  interesting insight that I would like to review and document in my own words.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Refine and edit new and existing pieces.&lt;/strong&gt; Removing unnecessary words. Not
  being afraid of reading material from my past self.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will be an interesting to see where the year of creativity will take me. &lt;/p&gt;
&lt;p&gt;What goals will I have achieved and how will I define creating in 12 months.  &lt;/p&gt;
&lt;p&gt;To a year of creating!&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Designs That Don't Suck</title><link href="/designs-that-dont-suck.html" rel="alternate"></link><published>2020-01-28T00:00:00+00:00</published><updated>2020-01-28T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-28:/designs-that-dont-suck.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.curiositry.com/designs-that-don-t-suck/"&gt;some useful advice&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ample leading&lt;/h2&gt;
&lt;p&gt;Set our leading (line-height) to 120-145% of your base font size. Give your words room to breathe.&lt;/p&gt;
&lt;h2&gt;Alignment&lt;/h2&gt;
&lt;p&gt;Everything should look in place. Ideally, use a grid and typographic scale. Align body text left.&lt;/p&gt;
&lt;h2&gt;Line-length&lt;/h2&gt;
&lt;p&gt;Aim for 40-90 characters per line  &lt;/p&gt;
&lt;h2&gt;Readable text size&lt;/h2&gt;
&lt;p&gt;For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.curiositry.com/designs-that-don-t-suck/"&gt;some useful advice&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ample leading&lt;/h2&gt;
&lt;p&gt;Set our leading (line-height) to 120-145% of your base font size. Give your words room to breathe.&lt;/p&gt;
&lt;h2&gt;Alignment&lt;/h2&gt;
&lt;p&gt;Everything should look in place. Ideally, use a grid and typographic scale. Align body text left.&lt;/p&gt;
&lt;h2&gt;Line-length&lt;/h2&gt;
&lt;p&gt;Aim for 40-90 characters per line  &lt;/p&gt;
&lt;h2&gt;Readable text size&lt;/h2&gt;
&lt;p&gt;For print, 10-14 pt. On screen, 16-24 pt for body text.&lt;/p&gt;
&lt;h2&gt;Quality Typefaces&lt;/h2&gt;
&lt;p&gt;Regular, bold and italic variants are essential.&lt;/p&gt;
&lt;h2&gt;White Space&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>An English Wood</title><link href="/an-english-wood.html" rel="alternate"></link><published>2020-01-27T10:25:00+00:00</published><updated>2020-01-27T10:25:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-27:/an-english-wood.html</id><summary type="html">&lt;h5&gt;by Robert Greaves&lt;/h5&gt;
&lt;p&gt;This valley wood is pledged&lt;br&gt;
To the set shape of things,&lt;br&gt;
And reasonably hedged:&lt;br&gt;
Here are no harpies fledged,&lt;br&gt;
No rocs may clap their wings,&lt;br&gt;
Nor gryphons wave their stings.&lt;br&gt;
Here, poised in quietude,&lt;br&gt;
Calm elementals brood&lt;br&gt;
On the set shape of things:&lt;br&gt;
They fend away alarms …&lt;/p&gt;</summary><content type="html">&lt;h5&gt;by Robert Greaves&lt;/h5&gt;
&lt;p&gt;This valley wood is pledged&lt;br&gt;
To the set shape of things,&lt;br&gt;
And reasonably hedged:&lt;br&gt;
Here are no harpies fledged,&lt;br&gt;
No rocs may clap their wings,&lt;br&gt;
Nor gryphons wave their stings.&lt;br&gt;
Here, poised in quietude,&lt;br&gt;
Calm elementals brood&lt;br&gt;
On the set shape of things:&lt;br&gt;
They fend away alarms&lt;br&gt;
From this green wood.&lt;br&gt;
Here nothing is that harms –&lt;br&gt;
No bulls with lungs of brass,&lt;br&gt;
No toothed or spiny grass,&lt;br&gt;
No tree whose clutching arms&lt;br&gt;
Drink blood when travellers pass,&lt;br&gt;
No mount of glass;&lt;br&gt;
No bardic tongues unfold&lt;br&gt;
Satires or charms.&lt;br&gt;
Only, the lawns are soft,&lt;br&gt;
The tree-stems, grave and old;&lt;br&gt;
Slow branches sway aloft,&lt;br&gt;
The evening air comes cold,&lt;br&gt;
The sunset scatters gold.&lt;br&gt;
Small grasses toss and bend,&lt;br&gt;
Small pathways idly tend&lt;br&gt;
Towards no fearful end.  &lt;/p&gt;</content><category term="blog"></category><category term="Poem"></category></entry><entry><title>Learning to Learn</title><link href="/learning-to-learn.html" rel="alternate"></link><published>2019-07-20T00:00:00+01:00</published><updated>2022-01-01T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2019-07-20:/learning-to-learn.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Notes from the Coursera Course: Learning How to Learn&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;1. What is Learning&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FOCUSED&lt;/strong&gt; and &lt;strong&gt;DIFFUSE&lt;/strong&gt; mode.&lt;/p&gt;
&lt;p&gt;When learning, its best to make use of both modes, switching between focused and diffuse mode thinking.&lt;/p&gt;
&lt;p&gt;When learning, there are times in which you are focused and times in which you allow …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Notes from the Coursera Course: Learning How to Learn&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;1. What is Learning&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FOCUSED&lt;/strong&gt; and &lt;strong&gt;DIFFUSE&lt;/strong&gt; mode.&lt;/p&gt;
&lt;p&gt;When learning, its best to make use of both modes, switching between focused and diffuse mode thinking.&lt;/p&gt;
&lt;p&gt;When learning, there are times in which you are focused and times in which you allow your mind to wander.  &lt;/p&gt;
&lt;p&gt;This unfocused, or diffused, mode is just as valuable as the focused mode in allowing your brain to LEARN something. &lt;/p&gt;
&lt;p&gt;Take breaks, meditate, think about other things, and give yourself plenty of time in both modes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WORKING (short term)&lt;/strong&gt; and &lt;strong&gt;LONG TERM&lt;/strong&gt; memory&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SLEEP&lt;/strong&gt; - vital.&lt;/p&gt;
&lt;h2&gt;2. Chunking&lt;/h2&gt;
&lt;p&gt;The act of grouping concepts into compact packages of information.&lt;/p&gt;
&lt;p&gt;Don't always trust your initial intuition. Einstellung problem (a German word for Mindset). &lt;/p&gt;
&lt;p&gt;An idea or a neural pattern you developed might prevent a new better idea from being found.  &lt;/p&gt;
&lt;p&gt;Your initial intuition on what you need to be doing is misleading. &lt;/p&gt;
&lt;p&gt;You've to unlearn old ideas and approaches as you are learning new ones.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Master the main idea - survey and priming 
    — this involves scanning a book or the syllabus of a course, for example, to get a general idea of the bigger picture. &lt;/li&gt;
&lt;li&gt;Observe an example. Then, do it yourself. &lt;/li&gt;
&lt;li&gt;Finally, do it again and again in different contexts.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Techniques&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Recall&lt;/strong&gt; - a couple of minutes to summarise/recall material you're trying to learn&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bite sized Testing&lt;/strong&gt; - test yourself as you encounter new material, Recall is a testing technique&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interleaving&lt;/strong&gt; - know when to apply a particular concept is as important as knowing how.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Spaced_repetition"&gt;Spaced Repetition&lt;/a&gt;&lt;/strong&gt; - vary the frequency of revisiting material based on how well you can recall (&lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not important to pass the test without mistakes. Mistakes and correcting them are important to solidify learning&lt;/p&gt;
&lt;p&gt;Metaphors and analogies - Feynman technique&lt;/p&gt;
&lt;p&gt;Brief notes that summarise key concepts are more effective that highlighting&lt;/p&gt;
&lt;p&gt;Illusion of competence: don't repeat easy topics&lt;/p&gt;
&lt;h2&gt;3. Procrastination and Memory&lt;/h2&gt;
&lt;h4&gt;Procrastination&lt;/h4&gt;
&lt;p&gt;Weekly/Daily list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write your daily list the evening before. Not writing them down will take up valuable slots of memory.&lt;/li&gt;
&lt;li&gt;Set aside 30–60 minutes every day for each task.&lt;/li&gt;
&lt;li&gt;Plan your finishing time, just as important as planning your working time.&lt;/li&gt;
&lt;li&gt;Eat the frog - Work in the most important and most disliked task first, even if it’s only one pomodoro.&lt;/li&gt;
&lt;li&gt;Take notes about what works and what doesn't.&lt;/li&gt;
&lt;li&gt;Have a backup plan for when you will still procrastinate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Memory&lt;/h4&gt;
&lt;p&gt;Creativity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A better short term/working memory makes it harder to be creative. it is more likely to experience Einstellung as it will pick up new concepts very quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A smaller working memory means you can generalise your learning into new, creative combinations. You can get more inputs from the brain due to the memories being less tightly locked in. Your brain is used to being creative with the small amounts of memory it can work on at any period of time. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. Renaissance Learning and Unlocking Potential&lt;/h2&gt;
&lt;p&gt;You learn complex concepts by trying to make sense out of the information you perceive. Not by having someone else telling it to you.&lt;/p&gt;
&lt;p&gt;Metaphors and analogies are very helpful, not only to memorize, but to also understand different concepts. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deliberate practice&lt;/strong&gt; is what helps the average brain lift into the realm of those naturally gifted. Practising certain mental patterns deepens your mind.&lt;/p&gt;
&lt;p&gt;The key to success is &lt;strong&gt;perseverance, taking responsibility for their learning and changing their thoughts.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hard start - Jump to easy&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start on the hardest problem first and move to easy one once you get stuck/lose momentum&lt;/li&gt;
&lt;li&gt;Let diffuse mode work on the harder problem&lt;/li&gt;
&lt;/ul&gt;</content><category term="blog"></category></entry><entry><title>Grow the Tree</title><link href="/grow-the-tree.html" rel="alternate"></link><published>2019-07-05T00:00:00+01:00</published><updated>2020-05-15T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2019-07-05:/grow-the-tree.html</id><summary type="html">&lt;p&gt;My decision to take up writing has led me to sporadically output what pops into
my head when I'm near my Pentel 205, Pilot G5 and A6 notepad or sat in front of
the keyboard of my laptop.&lt;/p&gt;
&lt;p&gt;It's caused me to forget many important-at-the-time insights that may return
one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My decision to take up writing has led me to sporadically output what pops into
my head when I'm near my Pentel 205, Pilot G5 and A6 notepad or sat in front of
the keyboard of my laptop.&lt;/p&gt;
&lt;p&gt;It's caused me to forget many important-at-the-time insights that may return
one day. I've grown a habit of starting many 'threads' and leaving them to
hang. &lt;/p&gt;
&lt;p&gt;I say this as I just interrupted another reflection on stray cats.&lt;/p&gt;
&lt;p&gt;It's not too dissimilar to how brains naturally process thoughts. Non-linear.
Weaving from topic to topic, falling short to fully resolve an idea before
moving onto the next. At this current stage of romantic novelty, I am far from
creating a strict routine in which I can consistently churn out lines of text. &lt;/p&gt;
&lt;p&gt;That was my original point of this script. Beginning to write is often the
hardest step. Writer's block is real. However, when the moment arrives and the
flood gates are let loose, let loose. Don't try to contain the stream of
consciousness, apply pen to paper, fingertips to the keyboard. &lt;/p&gt;
&lt;p&gt;I say this while still avoiding the topic title. &lt;/p&gt;
&lt;p&gt;Grow the tree, whip up a first draft. Sure there'll be reams of content you'll
want to cut out, paragraphs that will need to be edited but that comes after
with pruning your tree. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="tree, poem" src="images/grow-the-tree.jpg"&gt;&lt;/p&gt;</content><category term="blog"></category></entry></feed>