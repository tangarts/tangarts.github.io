<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>tangarts</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2022-02-02T00:00:00+00:00</updated><entry><title>Application Startup in ASP.NET Core</title><link href="/application-startup.html" rel="alternate"></link><published>2022-02-02T00:00:00+00:00</published><updated>2022-02-02T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2022-02-02:/application-startup.html</id><summary type="html">&lt;p&gt;In this post, we investigate what the application startup code does in a new ASP.NET Core web project.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;TLDR; In an ASP.NET web application, the Program.cs file contains code that configures, runs and manages the lifetime of your app. In this post we explore what happens when you run a new ASP.NET Core web application.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When working on an existing ASP.NET application it might be daunting to know where to begin with understanding the codebase. With a new ASP.NET Core 3.1 or .NET 5.0 web application you're met with two files with boilerplate code the &lt;code&gt;Startup.cs&lt;/code&gt; and &lt;code&gt;Program.cs&lt;/code&gt;. What do they do?&lt;/p&gt;
&lt;h2&gt;The entry point&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Program&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;CreateHostBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;IHostBuilder&lt;/span&gt; &lt;span class="nf"&gt;CreateHostBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;Host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigureWebHostDefaults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webBuilder&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;webBuilder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseStartup&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In .NET applications, it is convention to have a &lt;code&gt;Program.cs&lt;/code&gt; file with a public static method called &lt;code&gt;Main&lt;/code&gt; inside the &lt;code&gt;Program&lt;/code&gt; class&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Similar to command-line applications, the &lt;code&gt;Program.Main&lt;/code&gt; method is the entry point of our application, where the execution chain begins when the application starts running.&lt;/p&gt;
&lt;p&gt;When you run the application using &lt;code&gt;dotnet run&lt;/code&gt; on the command line, the command looks in the current folder or project file, builds the project, launches a process and looks for the entry point to execute your code. &lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;Main&lt;/code&gt; method is executed, the program creates a host builder, builds the host and then runs the application. The host is responsible for the application's startup and lifetime management. &lt;/p&gt;
&lt;p&gt;The host is also responsible for configuring the necessary pieces your web application needs to communicate with incoming HTTP requests and to respond in the appropriate way. This includes: an HTTP server implementation, middleware components, logging, dependency injection (DI) services and configuration. The configuration and instantiation consists of the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a builder&lt;/li&gt;
&lt;li&gt;configuring services&lt;/li&gt;
&lt;li&gt;creating the application host&lt;/li&gt;
&lt;li&gt;running the application&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The next few sections expand on the above steps.&lt;/p&gt;
&lt;h3&gt;Creating a builder&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;HostBuilder&lt;/code&gt; knows how to create your application and also configures the necessary default pieces your web application needs to determine how to operate. If we look at the definition of &lt;code&gt;CreateDefaultBuilder&lt;/code&gt; method we see that it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sets the base root of the project to the current directory. This is how the application is able to locate the folder containing static files, Razor pages, and configuration files such as  &lt;code&gt;appsettings.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;loads configuration. The different configuration sources include &lt;code&gt;appsettings.json&lt;/code&gt;, environment variables, and command-line arguments. &lt;/li&gt;
&lt;li&gt;adds logging logging providers such as console and debug. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The next method to be called is the &lt;code&gt;ConfigureWebHostDefaults&lt;/code&gt; which unsurprisingly, configures web specific defaults. This includes setting the HTTP server as Kestrel server and adds the host filtering middleware, which in combination with the &lt;code&gt;AllowedHosts&lt;/code&gt; key in &lt;code&gt;appsettings.json&lt;/code&gt;, specifies the allowable host names. &lt;/p&gt;
&lt;h3&gt;Configuring services&lt;/h3&gt;
&lt;p&gt;The call to &lt;code&gt;UseStartup&lt;/code&gt; looks for the &lt;code&gt;ConfigureServices&lt;/code&gt; and &lt;code&gt;Configure&lt;/code&gt; methods in the &lt;code&gt;Startup&lt;/code&gt; class. The &lt;code&gt;ConfigureServices&lt;/code&gt; method allows us to register services with the dependency injection container. This gives us the ability to put our custom services into the ASP.NET Core, which can be injected into the application where needed. An example would be registering a database, whether that is an in-memory or a SQL database. &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Configure&lt;/code&gt; method allows us to customise the HTTP request pipeline or middleware pipeline. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Startup&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IConfiguration&lt;/span&gt; &lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IConfiguration&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// This method gets called by the runtime. Use this method to add services to the container.&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;ConfigureServices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IServiceCollection&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddControllersWithViews&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IApplicationBuilder&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IWebHostEnvironment&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
        &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseRouting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseEndpoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoints&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapControllerRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{controller=Home}/{action=Index}/{id?}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Creating the application&lt;/h3&gt;
&lt;p&gt;We call &lt;code&gt;.Build()&lt;/code&gt; on the &lt;code&gt;HostBuilder&lt;/code&gt; which initialises the host. This then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;starts the web host instance so it can listen, receive and process HTTP messages.&lt;/li&gt;
&lt;li&gt;loads configuration from &lt;code&gt;appsettings.json&lt;/code&gt;, environment variables and other configuration sources.&lt;/li&gt;
&lt;li&gt;sends logging output to the console. This what we see in the console as we interact with the web application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Run&lt;/h3&gt;
&lt;p&gt;We then &lt;code&gt;Run&lt;/code&gt; the application. The &lt;code&gt;Run&lt;/code&gt; method starts the application and blocks the calling thread until the host is shut down. &lt;/p&gt;
&lt;h2&gt;.NET 6.0&lt;/h2&gt;
&lt;p&gt;With .NET 6.0 we're given a &lt;code&gt;Startup.cs&lt;/code&gt; file with the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;WebApplicationBuilder&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Add services to the container.&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddRazorPages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddControllersWithViews&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;WebApplication&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Configure the HTTP request pipeline.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsDevelopment&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseExceptionHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseHttpsRedirection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseStaticFiles&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseAuthorization&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/hi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapDefaultControllerRoute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MapRazorPages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is a significant visual difference between the new boilerplate we are now given and the first example. However, the execution of steps remain the same:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;we create a builder which registers default services &lt;/li&gt;
&lt;li&gt;we register our services&lt;/li&gt;
&lt;li&gt;we build the web application&lt;/li&gt;
&lt;li&gt;we run the web application&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.NET 6 simplifies the boiler plate code and introduces types &lt;code&gt;WebApplicationBuilder&lt;/code&gt; and &lt;code&gt;WebApplication&lt;/code&gt; that replaces the &lt;code&gt;HostBuilder&lt;/code&gt; and &lt;code&gt;Host&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h3&gt;.NET &lt;code&gt;WebApplication&lt;/code&gt; Host&lt;/h3&gt;
&lt;p&gt;This is the new and default way of creating a web application. There are a few major differences in how the &lt;code&gt;WebApplication&lt;/code&gt; host is configured but the underlying steps to configure and manage the application is similar to the &lt;code&gt;Host&lt;/code&gt; we saw in the previous section. &lt;/p&gt;
&lt;p&gt;First of all, the &lt;code&gt;Startup&lt;/code&gt; class has been removed. Instead of registering services with &lt;code&gt;ConfigureServices&lt;/code&gt;, they are registered directly on the &lt;code&gt;Services&lt;/code&gt; property. The same applies when configuring the HTTP pipeline. Instead of registering middleware with &lt;code&gt;Configure&lt;/code&gt; we call the &lt;code&gt;UseXyz&lt;/code&gt; methods directly on the app of type &lt;code&gt;WebApplication&lt;/code&gt; (which implements &lt;code&gt;IApplicationBuilder&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For new applications, this is the preferred way of getting started. However, this doesn't mean you should migrate every ASP.NET application to using the new template. The previous instantiation using the &lt;code&gt;HostBuilder&lt;/code&gt; and &lt;code&gt;Startup&lt;/code&gt; class still works in .NET 6. &lt;/p&gt;
&lt;p&gt;With the simplified .NET 6.0 achieving the same result as the first example, is it necessary to know about &lt;code&gt;HostBuilder&lt;/code&gt; and the separation of concerns with the &lt;code&gt;Program.cs&lt;/code&gt; and &lt;code&gt;Startup.cs&lt;/code&gt;? Well, yes. The next section covers why we still have the &lt;code&gt;HostBuilder&lt;/code&gt; and briefly comments on the original way of creating a default web host (that was introduced in ASP.NET Core 2.1).&lt;/p&gt;
&lt;h2&gt;ASP.NET Core: &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;WebHost&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;ASP.NET Core &lt;code&gt;WebHost&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Before ASP.NET Core 3.x, this was the default way of configuring and instantiating your web application. The decision to move away from using the &lt;code&gt;WebHost&lt;/code&gt; and &lt;code&gt;WebHostBuilder&lt;/code&gt; was to decouple the web specific configuration (server and middleware) from application specific configuration (logging, configuration and dependency injection services). &lt;/p&gt;
&lt;p&gt;Creating a &lt;code&gt;WebHostBuilder&lt;/code&gt; involves:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configuring DI services, logging, configuration, default filtering middleware and the HTTP server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseStartup&amp;lt;Startup&amp;gt;()&lt;/code&gt; to specify the startup class to configure our dependency injection services and HTTP request pipeline.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;IWebHostBuilder&lt;/span&gt; &lt;span class="nf"&gt;CreateWebHostBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="n"&gt;WebHost&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseStartup&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Startup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For a web application using the generic &lt;code&gt;HostBuilder&lt;/code&gt;, &lt;code&gt;WebHost.CreateDefaultBuilder&lt;/code&gt; is split across two methods &lt;code&gt;Host.CreateDefaultBuilder&lt;/code&gt; and &lt;code&gt;ConfigureWebHostDefaults&lt;/code&gt; as we saw in the first code snippet. The &lt;code&gt;WebHost&lt;/code&gt; is no longer recommended for creating new web applications. However, it is still used for backwards compatibility with ASP.NET Core 2.x. &lt;/p&gt;
&lt;h3&gt;.NET Generic &lt;code&gt;Host&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This is the default way of creating a web host in ASP.NET Core 3.x and .NET 5.0. The generic host separates the registering of configuration, dependency injection services and logging from the web specific resources such as the middleware components and the HTTP server implementation. This allows non-HTTP based applications to be able to use dependency injection services, logging and configuration. &lt;/p&gt;
&lt;p&gt;The interfaces &lt;code&gt;IHost&lt;/code&gt; and &lt;code&gt;IHostBuilder&lt;/code&gt; are found in &lt;code&gt;Microsoft.Extensions.Hosting&lt;/code&gt;, emphasising that we can now have hosted services that are not dependent on &lt;code&gt;AspNetCore&lt;/code&gt; namespace. &lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this post we looked at understanding what the boilerplate code does in a new ASP.NET Core application. We first looked at the ASP.NET Core 3.x and 5.0 example and then covered the new ASP.NET 6.0 web application template. We saw that despite the visual difference between template code, both do similar jobs and achieve the same outcome. We ended by talking about the differences between startup code across the different ASP.NET Core version, from 2.1 to 6.0.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;With .NET 6 this is no longer mandatory. Some of the new changes also include not requiring the &lt;code&gt;namespace&lt;/code&gt; keyword and the removal of commonly used &lt;code&gt;using&lt;/code&gt; statements.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term=".NET"></category><category term="dotnet"></category><category term="csharp"></category></entry><entry><title>Consistency Levels and Quorums</title><link href="/consistency-levels-and-quorums.html" rel="alternate"></link><published>2022-01-18T00:00:00+00:00</published><updated>2022-01-18T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2022-01-18:/consistency-levels-and-quorums.html</id><summary type="html">&lt;p&gt;This post dives into the internals of how Cosmos guarantees consistency&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;What is the underlying mechanism for data replication in Cosmos DB?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In a &lt;a href="./consistency-levels-in-cosmos-db"&gt;previous post&lt;/a&gt;, I covered the five different consistency levels Cosmos offers. We saw that choosing a consistency level requires evaluating a trade off in data consistency, availability and performance. In this post, I explore how Cosmos DB enforces consistency.&lt;/p&gt;
&lt;p&gt;From the Microsoft documentation page on &lt;a href="https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels"&gt;Consistency levels in Azure Cosmos DB&lt;/a&gt; we have:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For strong and bounded staleness, &lt;em&gt;reads are done against two replicas in a four replica set (minority quorum)&lt;/em&gt; to provide consistency guarantees. Session, consistent prefix and eventual do &lt;em&gt;single replica reads&lt;/em&gt;. The result is that, for the same number of request units, read throughput for strong and bounded staleness is half of the other consistency levels.&lt;/p&gt;
&lt;p&gt;For a given type of write operation, such as insert, replace, upsert, and delete, the write throughput for request units is identical for all consistency levels. For &lt;em&gt;strong consistency, changes need to be committed in every region (global majority)&lt;/em&gt; while for all other consistency levels, local majority (three replicas in a four replica set) is being used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We also get the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Consistency Level&lt;/th&gt;
&lt;th&gt;Quorum Reads&lt;/th&gt;
&lt;th&gt;Quorum Writes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Strong&lt;/td&gt;
&lt;td&gt;Local Minority&lt;/td&gt;
&lt;td&gt;Global Majority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bounded Staleness&lt;/td&gt;
&lt;td&gt;Local Minority&lt;/td&gt;
&lt;td&gt;Local Majority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Session&lt;/td&gt;
&lt;td&gt;Single Replica (using session token)&lt;/td&gt;
&lt;td&gt;Local Majority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Consistent Prefix&lt;/td&gt;
&lt;td&gt;Single Replica&lt;/td&gt;
&lt;td&gt;Local Majority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Eventual&lt;/td&gt;
&lt;td&gt;Single Replica&lt;/td&gt;
&lt;td&gt;Local Majority&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;What does this all mean? What are quorums, replica sets, global majority, local majority, and local minority. In this post we will figure it out together.&lt;/p&gt;
&lt;h2&gt;Quorums and consensus&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Quorum&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The smallest number of people needed to be present at a meeting before it can officially begin and before official decisions can be taken. &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;A more technical definition of a quorum is as follows:&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A quorum is the minimum number of votes that a distributed transaction has to obtain in order to be allowed to perform an operation in a distributed system. A quorum-based technique is implemented to enforce consistent operation in a distributed system. &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;So a quorum is a collection of replicas communicating in such a way to ensure data consistency. Cosmos DB groups four replicas (one leader, three followers) within a physical partition to form a &lt;em&gt;replica set&lt;/em&gt;. The leader is responsible for propagating writes within the replica set. And within the replica set we can group replicas together to for a &lt;em&gt;quorum&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="A partition set consisting of one leader and three followers" src="/images/partition-set.svg"&gt;&lt;/p&gt;
&lt;p&gt;How then are quorums involved in ensuring a write or read is successful?&lt;/p&gt;
&lt;h3&gt;Quorum Writes and Reads&lt;/h3&gt;
&lt;p&gt;Under strong consistency, a write is deemed successful if every replica can agree on the most recent write. This comes at the price of decreased performance as every replica must have the latest value written to it for the system to agree on the current state.&lt;/p&gt;
&lt;p&gt;&lt;img alt="figure showing two partition sets under strong consistency" src="/images/global-m-partition-set.png"&gt;&lt;/p&gt;
&lt;p&gt;For consistency levels other than strong, a local majority is used. This means when writing to a replica set (four instances of the data), only three of the four replicas have to be up to date at any given time for a write to be acknowledged. This keeps latency lower as if one replica was unavailable the write could still be acknowledged by the database.&lt;/p&gt;
&lt;p&gt;For quorum reads, the convention is similar. Strong and bounded staleness, reads are done against a local majority; &lt;em&gt;two replicas in a four replica set&lt;/em&gt;, this means two replicas have to agree on seeing the same value for a read to be acknowledged. In the diagram below the bounded staleness partition-set reads from a quorum in which two partitions have the been updated to the latest value. &lt;/p&gt;
&lt;p&gt;We can imagine the leader and two followers enclosed in the dotted line as writing a value and then a reader milliseconds later querying the same value from the replica set as the dashed box. As both boxes overlap we are guaranteed to see the latest written value.&lt;/p&gt;
&lt;p&gt;&lt;img alt="figure showing a partition sets under bounded staleness" src="/images/bs-partition-set.png"&gt;&lt;/p&gt;
&lt;p&gt;Session, consistent prefix and eventual reads are done through single replicas. As shown in the diagram below, comes at a cost of reading stale data.&lt;/p&gt;
&lt;p&gt;&lt;img alt="figure showing a partition sets under session, consistent prefix or eventual" src="/images/single-partition-set.png"&gt;&lt;/p&gt;
&lt;p&gt;The quorum reads and quorum writes are the same for session, consistent prefix and eventual. This explains why write latencies, availability and read throughput for session and consistent prefix are comparable to eventual consistency.&lt;/p&gt;
&lt;h3&gt;Quorum consensus&lt;/h3&gt;
&lt;p&gt;In general, with &lt;span class="math"&gt;\(n\)&lt;/span&gt; replicas in a replica set, every write must be confirmed by &lt;span class="math"&gt;\(w\)&lt;/span&gt; nodes to be considered a successful write. We must query at least &lt;span class="math"&gt;\(r\)&lt;/span&gt; nodes for each read. As long as &lt;span class="math"&gt;\(w + r &amp;gt; n\)&lt;/span&gt; we expect to get an up-to-date value when reading; at least one of the &lt;span class="math"&gt;\(r\)&lt;/span&gt; nodes we are reading from must be up-to-date.&lt;/p&gt;
&lt;p&gt;Reads and writes obeying &lt;span class="math"&gt;\(r\)&lt;/span&gt; and &lt;span class="math"&gt;\(w\)&lt;/span&gt; values are called quorum reads and writes. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;At least one node needs to overlap:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(w \geq (n - r) + 1\)&lt;/span&gt; and &lt;span class="math"&gt;\(r \geq (n - w) + 1\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;thus &lt;span class="math"&gt;\(w &amp;gt; n - r\)&lt;/span&gt; and &lt;span class="math"&gt;\(r &amp;gt; n - w\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;thus &lt;span class="math"&gt;\(w + r &amp;gt; n\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Probabilistic Bounded Staleness&lt;/h2&gt;
&lt;p&gt;You may have noticed that under bounded staleness, the quorum consensus set up ensure we always see the latest value. However, bounded staleness can allow stale reads. This occurs when we replicate our data across multiple replica sets. Here we are not guaranteed strong consistency as one quorum may not have received the latest write.&lt;/p&gt;
&lt;p&gt;&lt;img alt="figure showing two partition sets under bounded staleness" src="/images/global-m-partition-set.png"&gt;&lt;/p&gt;
&lt;p&gt;Instead, we can use a metric called &lt;a href="http://pbs.cs.berkeley.edu/"&gt;probabilistic bounded staleness&lt;/a&gt; to determine the probability of getting strongly consistent reads for a combination of write and read regions.&lt;/p&gt;
&lt;h2&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;Quorums are one mechanism which explains why different consistency levels have differing performance characteristics. In this post we defined what quorums are and how Cosmos DB uses them to enforce consistency constraints. &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://dictionary.cambridge.org/dictionary/english/quorum"&gt;Meaning of &lt;strong&gt;quorum&lt;/strong&gt; in English&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Quorum_%28distributed_computing%29"&gt;Quorum (distributed computing)&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Azure, Big Data"></category><category term="Azure"></category><category term="CosmosDB"></category></entry><entry><title>A Gentle Introduction to Inflation</title><link href="/a-gentle-introduction-to-inflation.html" rel="alternate"></link><published>2021-12-29T18:52:00+00:00</published><updated>2021-12-29T18:52:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-12-29:/a-gentle-introduction-to-inflation.html</id><summary type="html">&lt;p&gt;"Back in my day Freddos were 10p a pop. Now look at the price, two and a half times more than what used to pay. And every January, we brace a little for the increase price of living: potatoes, peas, and toilet paper. Whilst our wages stay the same."&lt;/p&gt;
&lt;p&gt;Imagine …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"Back in my day Freddos were 10p a pop. Now look at the price, two and a half times more than what used to pay. And every January, we brace a little for the increase price of living: potatoes, peas, and toilet paper. Whilst our wages stay the same."&lt;/p&gt;
&lt;p&gt;Imagine, 20 years ago, a fiver would have got netted you 50 Freddos. That's enough Freddos to keep you busy for a while, whatever you're doing. Now, finding the same five pound note, going to the bank, exchanging it for a crisp, polymer note and heading to Sainsburys. That note isn't going far, only 20 Freddos. That's not fair.&lt;/p&gt;
&lt;p&gt;Let's go back 20 years ago again. This time with the knowledge of increasing Freddo prices we have a goal to not get stung by the 250% price hike in 20 years. Playing it safe you look to the bank. Each year your bank gives you some money (interest) so that you can store your money with them. No risks involved, better than keeping it under the mattress right? &lt;/p&gt;
&lt;p&gt;Not quite.&lt;/p&gt;
&lt;h2&gt;Perverse incentives&lt;/h2&gt;
&lt;p&gt;Everything in life has risk. Despite some banks lasting for over a century, crashes do happen and people lose money. In the short term, storing your money with a bank does pose a risk with fraudsters and compromised account details. But the same is true for house thieves peeking under your mattress. The payout, or interest given to you by the bank can be thought of as twofold:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The bank pays you to incur risk of &lt;em&gt;keeping your money safe&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;You receive interest as an incentive to lend them your money.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your friend wants £100 for a fixed period. You negotiate that it isn't worth being £100 short this month so ask them for four Freddos in addition to the £100 on repayment. Your friend is trustworthy so you can be sure that they'll return the cash in full (and the four Freddos). &lt;/p&gt;
&lt;p&gt;Now what you don't realize is that your friend is using the £100 to buy limited edition (Nike's) that are currently on sale. They predict that after the first release sells out, latecomers will be eager to buy from the second hand market. Especially since Christmas is nearing. Your friend is confident there will be at least one customer willing to pay £110 on Acme marketplace. However, there is a risk that he might not sell it at £110, maybe all of the offers he receives are just enough to cover the cost of your four Freddos and an extra for themselves. Maybe an offer of £120 comes along. &lt;/p&gt;
&lt;p&gt;In nearly all scenarios, your friend benefits from the additional cash you provided them. Both parties win; each gaining profit in proportion the amount of risk taken. &lt;/p&gt;
&lt;p&gt;Now what if you struck a deal with old-reliable. Instead of a fixed period and them asking for a loan, you set up an agreement entailing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your friend keeps the £100 &lt;em&gt;safe&lt;/em&gt; and in return pay you a Freddo a month. &lt;/li&gt;
&lt;li&gt;You agree that you can ask for the £100 at any point. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now old-reliable has a conundrum, they will have to have the £100 spare &lt;em&gt;at all times&lt;/em&gt;. By roping another person in, your friend has pockets £200 heavier. The risk of one person asking for the £100 back before you re-sell another pair of trainers goes down.&lt;/p&gt;
&lt;p&gt;Why? That's a exercise for you, reader. &lt;/p&gt;
&lt;p&gt;So, there's a problem. What if both parties want their £100? Add a third. And another. What if some people want to lend a tenner instead? &lt;/p&gt;
&lt;p&gt;Again reader, that's for you to think about. &lt;/p&gt;
&lt;h2&gt;The cost of living&lt;/h2&gt;
&lt;p&gt;Every January we prepare ourselves for the increased prices of day to day goods like sliced bread, toothpaste and tea. This year the price of a standard white loaf may cost £1.05 instead of £1.00 - a 5% increase in price. This is inflation. To keep things simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inflation is a measure of how prices of goods and services vary from year to year.&lt;/li&gt;
&lt;li&gt;in the last 5 years in the UK it has fluctuated between 0.2% and 5%. That is, for the last 5 years, the cost of goods and services have increased yearly by 0.2% to 5%.&lt;/li&gt;
&lt;li&gt;the UK Government has a target of keeping inflation low and stable at 2%&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;If inflation is too high or it moves around a lot, it’s hard for businesses to set the right prices and for people to plan their spending.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;But if inflation is too low, or negative, then some people may put off spending because they expect prices to fall. Although lower prices sounds like a good thing, if everybody reduced their spending then companies could fail and people might lose their jobs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we take the 2% as our starting point and we have £100, next year, the same amount of money will be worth £98. The same thing for wages. A £9 per hour shift will invariably be worth £8.82. And that is in the ideal case. In short, under inflation, cash lying around loses its value, a bit like a human body that never exercises- wastes away. &lt;/p&gt;
&lt;p&gt;However, there are other ways of making your money resilient to inflation- we can't rely on our banks to match inflation; find me a bank that has a higher interest rate than inflation &lt;em&gt;without any catches&lt;/em&gt; and I'll give you a unicorn pony (for a fee of course). We have to be more like our friend selling trainers; not &lt;em&gt;exactly&lt;/em&gt; like our friend, the same principle applies. &lt;/p&gt;
&lt;p&gt;Own and manage assets that are likely to increase over time.&lt;/p&gt;
&lt;p&gt;"How does one do that with no knowledge of what assets are valuable and will increase over time? Property and stocks are the most obvious to me but I don't have enough money to buy a property and stocks are scary." &lt;/p&gt;
&lt;p&gt;For now, research is your best tool at finding out what you should own. What are your goals? For your money to grow without doing anything but following simple rules? I'm afraid I can't help you there. &lt;/p&gt;
&lt;p&gt;Investing, yes, whether that is buying vintage video games, collectable cards, cryptocurrency if you want to take on the risk follow the same rules: people hold onto assets as they believe, justified or not, that the value will increase and there are people willing to pay the increase price for the asset sometime in the future. &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.bankofengland.co.uk/monetary-policy/inflation"&gt;Inflation and the 2% target&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Finance"></category></entry><entry><title>Python packaging</title><link href="/python-packaging.html" rel="alternate"></link><published>2021-12-09T00:00:00+00:00</published><updated>2021-12-31T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-12-09:/python-packaging.html</id><summary type="html">&lt;h1&gt;Python packaging&lt;/h1&gt;
&lt;h2&gt;How can I reuse local python code in different projects?&lt;/h2&gt;
&lt;p&gt;I've collected a few useful utility functions to help me with &lt;a href="https://adventofcode.com/2021"&gt;advent of code 2021&lt;/a&gt;. So far it has been great, the folder lives in the same directory as my yearly advent of code folder like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;advent …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;Python packaging&lt;/h1&gt;
&lt;h2&gt;How can I reuse local python code in different projects?&lt;/h2&gt;
&lt;p&gt;I've collected a few useful utility functions to help me with &lt;a href="https://adventofcode.com/2021"&gt;advent of code 2021&lt;/a&gt;. So far it has been great, the folder lives in the same directory as my yearly advent of code folder like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;advent&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;day1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
        &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
            &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
            &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;LICENSE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
    &lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For each puzzle I create a new python file with the first line always starting with &lt;code&gt;from toolbox.core import ...&lt;/code&gt; to handle parsing data.&lt;/p&gt;
&lt;p&gt;Everything works smoothly until I wanted to re-use my toolbox modules for 2020 problems. I don't want to duplicate my toolbox for every advent of code year I participate in. A logical place I thought, would be to place the toolbox package in the root of the project like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;advent&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;day1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;LICENSE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
    &lt;span class="n"&gt;README&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This way I won't have to duplicate my code and could expose the toolbox for each year to use. Not quite.&lt;/p&gt;
&lt;p&gt;The problem is that when running the python file inside the &lt;code&gt;2021/&lt;/code&gt; directory, the python interpreter is unable to locate the &lt;code&gt;toolbox/&lt;/code&gt;. The list of system paths tells python where to look for python code that it can import such as the inbuilt &lt;code&gt;collections&lt;/code&gt;, &lt;code&gt;functools&lt;/code&gt; and &lt;code&gt;math&lt;/code&gt; packages, and pip-installed modules such as &lt;code&gt;pytest&lt;/code&gt;, &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;pandas&lt;/code&gt;. We could, for each runnable script, add the location of the toolbox to the system path (&lt;code&gt;sys.path&lt;/code&gt;). However, this is cumbersome; there is a much better way.&lt;/p&gt;
&lt;h2&gt;Local modules&lt;/h2&gt;
&lt;p&gt;A simple fix is to create a local package using the &lt;code&gt;setuptools&lt;/code&gt; package. &lt;code&gt;setuptools&lt;/code&gt; can be installed using &lt;code&gt;pip install setuptools&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want a minimal solution look no further, Here it is.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;setup.py&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;local_toolbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;toolbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And to install the package locally on the command line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pip install -e .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From &lt;code&gt;pip install --help&lt;/code&gt; we see that the &lt;code&gt;-e&lt;/code&gt; flag or &lt;code&gt;--editable&lt;/code&gt; is to "install a project in editable mode (i.e. setuptools "develop mode") from a local project path ...".&lt;/p&gt;
&lt;p&gt;Enjoy :).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For those who want to know a little more, let's continue. &lt;/p&gt;
&lt;h2&gt;&lt;code&gt;setup.cfg&lt;/code&gt; and &lt;code&gt;setup.py&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;There are two ways to specify setup config, dynamically as parameters of the &lt;code&gt;setuptools.setup()&lt;/code&gt; function and in a &lt;code&gt;setup.cfg&lt;/code&gt; config file.&lt;/p&gt;
&lt;p&gt;The equivalent setup to the first example would be split across the executable and config file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;setup.py&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;setup.cfg&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[options]&lt;/span&gt;
&lt;span class="na"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;toolbox&lt;/span&gt;

&lt;span class="k"&gt;[metadata]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;local_toolbox&lt;/span&gt;
&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0.1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;packages&lt;/code&gt; attributes are now configured as options and metadata. There is no definitive way in using &lt;code&gt;setuptools&lt;/code&gt;. I personally prefer to have all config in a config file. With additional optional fields such as a &lt;em&gt;long_description&lt;/em&gt;, it is easy to edit a config file than source code. Even if it is python. &lt;/p&gt;
&lt;h2&gt;Sharing is Caring&lt;/h2&gt;
&lt;p&gt;Finally, if you're excited to share your python project as a package, it is easy to register it using the Python Package Index (PyPI). I recommend looking at the &lt;a href="https://setuptools.pypa.io/en/latest/userguide/quickstart.html"&gt;setuptools&lt;/a&gt; documentation and &lt;a href="https://packaging.python.org/en/latest/tutorials/packaging-projects/"&gt;Packaging Python Authority (PyPA)&lt;/a&gt; to learn more about the standard way of building and distributing python projects. &lt;/p&gt;
&lt;h2&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;Reusing python code across local projects can be done in as little as a two liner python script and pip install command. Whilst there are different options in packaging a project to share on the Python Package Index, &lt;code&gt;setuptools&lt;/code&gt; makes it easy to build a package and registering is also fairly simple.&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category></entry><entry><title>Consistency Levels in Cosmos DB</title><link href="/consistency-levels-in-cosmos-db.html" rel="alternate"></link><published>2021-12-01T11:11:11+00:00</published><updated>2021-12-01T11:11:11+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-12-01:/consistency-levels-in-cosmos-db.html</id><summary type="html">&lt;p&gt;TLDR; Cosmos DB offers five different levels of consistency guarantees so that the best performance of an application can be achieved without sacrificing data integrity.&lt;/p&gt;
&lt;h2&gt;What is Consistency?&lt;/h2&gt;
&lt;p&gt;Within distributed systems, consistency assumes there is a single correct way to describe the order in which the events happen. Consistency can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;TLDR; Cosmos DB offers five different levels of consistency guarantees so that the best performance of an application can be achieved without sacrificing data integrity.&lt;/p&gt;
&lt;h2&gt;What is Consistency?&lt;/h2&gt;
&lt;p&gt;Within distributed systems, consistency assumes there is a single correct way to describe the order in which the events happen. Consistency can also be seen as recency guarantee; there appears to be a single copy of the data. As soon as one client successfully completes a write, all observers reading from the database must be able to see the value just written. &lt;/p&gt;
&lt;p&gt;On one hand, strong consistency guarantees every user will see the latest updated data, but may need to wait for all instances to be up to date. On the other hand, an eventual consistency guarantee means users will get a fast response but may see inconsistent data. &lt;/p&gt;
&lt;p&gt;With globally distributed applications, the characteristics of the chosen consistency level is emphasised. A greater distance for data to travel and a greater number of replicas to update increases the likelihood of performance issues under a strongly consistent model and inconsistent data under an eventually consistent model.&lt;/p&gt;
&lt;p&gt;Different consistency models offer different trade off between consistency, write latencies, throughput and availability. Generally, stronger consistency results in higher write latencies, higher throughput, and reduced availability. The purpose of different consistency levels is to give the client the best performance whilst achieving the minimum accepted level of consistency to an application.&lt;/p&gt;
&lt;p&gt;So what are the consistency level Cosmos offers? What are their guarantees, and when should I use each?&lt;/p&gt;
&lt;p&gt;As a nod to the white paper&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; that made consistency levels click for me, I'll use the example of a global sporting event watched by billions of people, the &lt;a href="https://en.wikipedia.org/wiki/2018_FIFA_World_Cup_Final"&gt;2018 FIFA World Cup final&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The scores and time of updates are as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;th&gt;France&lt;/th&gt;
&lt;th&gt;Croatia&lt;/th&gt;
&lt;th&gt;Database Operation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;read("France"); read("Croatia")&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;write(team: "France", score: 1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;write(team: "Croatia", score: 1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;write(team: "France", score: 2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;write(team: "France", score: 3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;write(team: "France", score: 4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;write(team: "Croatia", score: 2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;read("France"); read("Croatia")&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In this scenario we have a primary database (located in West Europe region) providing writes to all replicas, and three follower replicas within the data centre. We also geo-replicate our data across each continent, each having four replicas in each data centre.&lt;/p&gt;
&lt;p&gt;We will consider who would most benefit from what consistency level. Cosmos DB allows clients to override the default consistency level for a specific read request, meaning we can relax read consistency per request for increased performance. &lt;/p&gt;
&lt;h2&gt;Guarantees&lt;/h2&gt;
&lt;p&gt;Cosmos DB offers five levels of consistency guarantees. In order of consistency, they are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#strong-consistency"&gt;Strong&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;You will always see the latest version of the data. &lt;/li&gt;
&lt;li&gt;At any point in the game, you will see the latest score. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bounded-staleness-consistency"&gt;Bounded Staleness&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Reads lag behind writes by at most &lt;em&gt;K&lt;/em&gt; updates or time interval &lt;em&gt;T&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;The score you see might be old by timespan &lt;em&gt;T&lt;/em&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#session-consistency"&gt;Session&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Within a "session", reads are functionally strongly consistent. Outside the session, consistent prefix. &lt;/li&gt;
&lt;li&gt;Reads in the "&lt;em&gt;EU west&lt;/em&gt; session" will receive the latest score. Everyone outside may see an old score.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#consistent-prefix-consistency"&gt;Consistent Prefix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;For all regions, writes are ordered. &lt;/li&gt;
&lt;li&gt;At any point in the game, you will never see a score that has never occurred.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#eventual-consistency"&gt;Eventual&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;No guarantees, reads may be stale and inconsistent. Eventually, the data will be consistent until a new write.&lt;/li&gt;
&lt;li&gt;Any combination of scores may be seen, including scores that never occur.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Strong consistency&lt;/h3&gt;
&lt;p&gt;Also known as linearizability, strong consistency guarantees all your users see the latest writes; every user at the 70 minute mark will see the score &lt;code&gt;{France: 4, Croatia: 2}&lt;/code&gt;. As a consequence, there is increased latency. &lt;/p&gt;
&lt;p&gt;For a write to be committed to the system and acknowledged as successful, &lt;em&gt;all&lt;/em&gt; replicas have to agree on the most recent value. This means high latency and reduced availability. If a region becomes unavailable, since the application cannot accept reads that are stale, the application will not be able to respond until the region has recovered and updated to the most recent write value. &lt;/p&gt;
&lt;p&gt;In practice anyone wanting updates from the World Cup final would be well served by a strong consistency guarantee. However, most people would be OK in seeing a score that is outdated by a few minutes. When would this not be acceptable? As scores are calculated by incrementing the previous score, it would be a disaster if the scorekeeper read the wrong score. In this case, the score keeper could not tolerate stale reads so strong consistency would be appropriate.  &lt;/p&gt;
&lt;h3&gt;Bounded Staleness consistency&lt;/h3&gt;
&lt;p&gt;This is the second strongest consistency guarantee Cosmos DB offers. As the name suggests, there is a window that you can tolerate stale data. Reads can be behind at most &lt;em&gt;K&lt;/em&gt; updates to an item or behind by at most &lt;em&gt;T&lt;/em&gt; time interval, whichever is reached first. For data that falls out of the specified window, the guarantees are identical to strong consistency.&lt;/p&gt;
&lt;p&gt;What is interesting about bounded staleness is that if you know the maximum allowable lag for your system then you can get the same guarantee of strong consistency without the penalty in latency. &lt;/p&gt;
&lt;p&gt;A football pundit only cares about the score during half time and at the end of the game. The pundit could use the length of the game to guarantee they read the most recent score by setting the window to 45 minutes. A read in the 46th minute would mean the most recent score is read and again in the 91st minute for post-game discussion.&lt;/p&gt;
&lt;h3&gt;Session consistency&lt;/h3&gt;
&lt;p&gt;This is the default configured consistency level. Within a single client session, operations are guaranteed to follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Monotonic Reads&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;While the client can read arbitrarily stale data, it is guaranteed to read data that is increasingly up to date over time. &lt;/li&gt;
&lt;li&gt;(E.g., one it has read the score of &lt;code&gt;{France: 4, Croatia: 2}&lt;/code&gt;, it won't then later see &lt;code&gt;{France: 0, Croatia: 0}&lt;/code&gt; in the same session.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monotonic writes&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Ensures that if the client performs writes &lt;em&gt;w&lt;/em&gt; and then &lt;em&gt;v&lt;/em&gt;, all processes within the session observe &lt;em&gt;w&lt;/em&gt; before &lt;em&gt;v&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read your writes&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;All writes performed by the client are visible to the session's subsequent reads. In other words, strong consistency holds for the writer and clients sharing the same session id.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Write follows reads&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Ensures that write updates are propagated after performing the previous read operation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consistent prefix&lt;/strong&gt;:&lt;ul&gt;
&lt;li&gt;Covered in the next section&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A session is defined through a unique session key that all writers include in their requests. Cosmos DB uses the session key to ensure read-my-writes (for the writer) and one of the above guarantees for readers using the session token. Within the same session, reads are consistent. Everyone outside of the session will fall back to the consistent prefix model.&lt;/p&gt;
&lt;p&gt;Session consistency provides good performance: write latencies, availability, and read throughput comparable to that of eventual consistency.&lt;/p&gt;
&lt;p&gt;Revisiting the score keeper we notice that they can achieve consistent reads without sacrificing performance by using session consistency. As the score keeper will be reading their own writes, session consistency guarantees they will see their most recent writes with the added benefit of not having to wait for all replicas to be up to date.&lt;/p&gt;
&lt;h3&gt;Consistent Prefix consistency&lt;/h3&gt;
&lt;p&gt;Also referred to as snapshot isolation; the reader sees a "snapshot of the data". Consistent prefix guarantees whilst they may not read the most current score, the score would reflect a previous score. And unlike bounded staleness, there is no guarantee on how long the delay is.&lt;/p&gt;
&lt;p&gt;With consistent prefix consistency, reads are some prefix of the updates. Possible scores for a consistent prefix read could be one of the following: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{France: 1, Croatia: 0}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{France: 2, Croatia: 1}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{France: 4, Croatia: 1}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{France: 4, Croatia: 2}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consistent prefix is great for those who wish to have write latencies, availability, and read throughput similar to eventual consistency whilst guaranteeing ordered writes. This means you'll never see a state which could have emerged if the order of writes was changed. As we will see below, a read value of &lt;code&gt;{France: 0, Croatia: 1}&lt;/code&gt; could never happen under consistent prefix as France's first goal (write to the database) was before Croatia's.&lt;/p&gt;
&lt;h3&gt;Eventual consistency&lt;/h3&gt;
&lt;p&gt;Eventual consistency does not guarantee ordering for reads. Writes are also propagated in an arbitrary fashion. This means that you can see data that never occurs. For our football example, under eventual consistency a reader might see the score &lt;code&gt;{France: 0, Croatia: 1}&lt;/code&gt;. In reality, this event never happened as France scored before Croatia. If no more writes occur, the replicas will eventually catch up and become consistent with the leader.&lt;/p&gt;
&lt;p&gt;A casual fan might opt for eventual consistency and read the final score hours or a day later. As there are no writes after the 90th minute, it is highly likely every replica would be updated with the final score when the fan decided to check the score. There is no need to choose a more consistent level than this.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Giving strong consistency gives up performance and availability. The question is then &lt;em&gt;what is the minimum level of consistency that is tolerable to the program that gives you the best performance?&lt;/em&gt; Choosing the best consistency for your 
application requires application semantics and usage scenarios to be understood.&lt;/p&gt;
&lt;p&gt;In reality, Cosmos DBs SLAs guarantee that read latency for all consistency levels is always guaranteed to be less than 10 milliseconds at the 99th percentile. In addition, Cosmos provides a &lt;em&gt;Probabilistic Bounded Staleness (PBS) metric&lt;/em&gt; to quantify when eventual consistency is "good enough". &lt;/p&gt;
&lt;!--

There is no way I could not talk about eventual consistency without sharing this illustration:

![Comic illustrating eventual consistency](/assets/images/blog/2021/12/eventual-consistency.jpg)

--&gt;

&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://www.microsoft.com/research/publication/replicated-data-consistency-explained-through-baseball/"&gt;Replicated Data Consistency Explained Through Baseball (whitepaper) by Doug Terry&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Azure"></category><category term="Azure"></category><category term="CosmosDB"></category><category term="Database"></category></entry><entry><title>What cloud service is right for me?</title><link href="/what-cloud-service-is-right-for-me.html" rel="alternate"></link><published>2021-09-12T00:00:00+01:00</published><updated>2021-09-12T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-09-12:/what-cloud-service-is-right-for-me.html</id><summary type="html">&lt;!-- In this post I will introduce the different categories of cloud services. --&gt;

&lt;p&gt;Cloud services can be categorised into three service models. Infrastructure-as-a-service (IaaS), Platform-as-a-Service (PaaS) and Software-as-a-Service (SaaS).
Each service has the advantage of no up-front cost for buying and maintaining hardware. &lt;/p&gt;
&lt;p&gt;An on-premises service maintains the entire technology stack.&lt;/p&gt;
&lt;h3&gt;Infrastructure as a Service&lt;/h3&gt;
&lt;p&gt;IaaS manages the most expensive part, the virtual …&lt;/p&gt;</summary><content type="html">&lt;!-- In this post I will introduce the different categories of cloud services. --&gt;

&lt;p&gt;Cloud services can be categorised into three service models. Infrastructure-as-a-service (IaaS), Platform-as-a-Service (PaaS) and Software-as-a-Service (SaaS).
Each service has the advantage of no up-front cost for buying and maintaining hardware. &lt;/p&gt;
&lt;p&gt;An on-premises service maintains the entire technology stack.&lt;/p&gt;
&lt;h3&gt;Infrastructure as a Service&lt;/h3&gt;
&lt;p&gt;IaaS manages the most expensive part, the virtual machines, storage and networking. You pay a third party cloud provider to rent infrastructure. This is the most flexible out of the three models, allowing you control over the size of hardware and how much you want to use. Azure Virtual Machines, Azure Storage and Azure Virtual Networks are three examples of infrastructure Azure has to offer.&lt;/p&gt;
&lt;h3&gt;Platform as a Service&lt;/h3&gt;
&lt;p&gt;For PaaS, server configuration is handled for you. It is usually quicker to set up than IaaS. Azure App Services enables mobile and web apps to be deployed without having to worry about server configuration. This allows developers to focus more of their energy on business logic. &lt;/p&gt;
&lt;h3&gt;Software as a Service&lt;/h3&gt;
&lt;p&gt;SaaS solutions are the most user friendly. Office 365, Dropbox and many common apps such as Slack and Shopify. These are usually available via monthly or annual subscriptions. SaaS allows organizations to have the same application quickly and easily. &lt;/p&gt;
&lt;h3&gt;Functions as a Service&lt;/h3&gt;
&lt;p&gt;Another cloud service model that doesn't fall into the above three is serveless computing. Serverless computing is a misnomer— it still uses servers to operate; the name comes from the infrastructure being invisible to the developer. The cloud service provider provisions, scales and manages the infrastructure required to execute code. Serverless applications are event-driven, resources are used when a trigger occurs.&lt;/p&gt;
&lt;p&gt;Serverless solutions provided by Azure can be custom code scripts via Azure Functions or a workflow based no-code tool using Azure Logic Apps.&lt;/p&gt;
&lt;p&gt;Serverless is similar to PaaS as the infrastructure is abstracted away from the developer. However, there are notable differences between the two such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serverless application code executes only when triggered by an event&lt;/li&gt;
&lt;li&gt;Serverless apps scales automatically whereas a PaaS scaling parameters have to be configures&lt;/li&gt;
&lt;li&gt;PaaS solutions have more control over development environment— it is easier to test and debug the application.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Cloud"></category><category term="Cloud"></category><category term="Azure"></category></entry><entry><title>Apprenticeship Patterns</title><link href="/apprenticeship-patterns.html" rel="alternate"></link><published>2021-07-29T00:00:00+01:00</published><updated>2021-07-29T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-07-29:/apprenticeship-patterns.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Notes from Apprenticeship Patterns&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;An apprenticeship is a season in your career when your focus is
more on your own growth than almost anything else.&lt;/p&gt;
&lt;p&gt;This is a time for you to delay your ambitions of immediately maximizing your earning potential in order to maximize your learning opportunities ... And …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Notes from Apprenticeship Patterns&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;An apprenticeship is a season in your career when your focus is
more on your own growth than almost anything else.&lt;/p&gt;
&lt;p&gt;This is a time for you to delay your ambitions of immediately maximizing your earning potential in order to maximize your learning opportunities ... And once that season is over, your priorities will need to adapt&lt;/p&gt;
&lt;h2&gt;Emptying the Cup&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.ironmag.com/archive/ironmag/2000_mg_reality_of_learning.htm"&gt;Michel Grandmont’s “Tasting a New Cup of
Tea.”&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Your First Language&lt;/h3&gt;
&lt;p&gt;Become fluent in &lt;em&gt;one&lt;/em&gt; language for the next few years which will be used to solve problems and the default skill to hone when practising (Python).&lt;/p&gt;
&lt;p&gt;Best way to improve-- solve real problems (duh).
The fundamental way to improve this experience is to seek out opportunities to create &lt;em&gt;short&lt;/em&gt; feedback loops (which help gauge progress).&lt;/p&gt;
&lt;p&gt;... test-driven development techniques can keep you focused on taking small steps and ensure you check your assumptions.&lt;/p&gt;
&lt;p&gt;Read the language specification.&lt;/p&gt;
&lt;h3&gt;The White Belt&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You've reached some competency but are at a plateau, how do you continue to accelerate the pace of learning and personal development?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Learn new technologies, explore, try new paradigms.&lt;/p&gt;
&lt;p&gt;"Now you must try to avoid synthesizing new and old knowledge until the new knowledge has had time to sink in, and approach this new knowledge with the mind of a beginner. This may mean losing some productivity in the short term in order take a leap forward once you master the new approach."&lt;/p&gt;
&lt;p&gt;Learning new domains, you learn to express yourself &lt;em&gt;idiomatically&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Find something to &lt;em&gt;unlearn&lt;/em&gt;: write an existing program you have written in another language that uses a different paradigm.&lt;/p&gt;
&lt;h3&gt;Unleash Your Enthusiasm&lt;/h3&gt;
&lt;p&gt;As an apprentice you bring freshness and enthusiasm to the team.&lt;/p&gt;
&lt;p&gt;Team dynamics should always be considered. If you find yourself on a team that does not accept your excitement, you will need to find ways to nurture your passion.&lt;/p&gt;
&lt;p&gt;For a team that is open to excitement and contributions of an apprentice, this is the time to take risks and speak your mind.&lt;/p&gt;
&lt;h3&gt;Concrete Skills&lt;/h3&gt;
&lt;p&gt;Acquire concrete skills so that others know you can take responsibility. Examples: writing build files in various popular languages, knowledge of various popular open source frameworks, basic web design, JS and standard libraries.&lt;/p&gt;
&lt;h3&gt;Expose Your Ignorance&lt;/h3&gt;
&lt;p&gt;Conceding to unspoken pressures and telling people what they want to hear is not a good way to build strong relationships. Tell people the truth. ... your reputation will be built upon your learning ability rather than what you already know.&lt;/p&gt;
&lt;p&gt;The most obvious way to expose your ignorance is to ask questions. &lt;/p&gt;
&lt;p&gt;One of the most important traits that a craftsman can possess is the ability to learn, identifying an area of ignorance and working to reduce it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write down a list of five things you really don’t understand about your work. Put that list where others can see it. Then get in the habit of refreshing this list as your work changes.&lt;/p&gt;
&lt;h3&gt;Confront Your Ignorance&lt;/h3&gt;
&lt;p&gt;Pick one skill, tool, or technique and actively fill the gaps in your knowledge about it.&lt;/p&gt;
&lt;p&gt;As an apprentice you must be able to &lt;em&gt;expose&lt;/em&gt; ignorance as well as confronting.&lt;/p&gt;
&lt;h3&gt;The Deep End&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;How to get involved with bigger, larger projects and problems&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jump in at the deep end. Take the promotion or foreign assignment even if there is a high chance of failure. Be prepared to fail and recover.&lt;/p&gt;
&lt;p&gt;... you still need to remember that if the water level is above your head it means you’re drowning.&lt;/p&gt;
&lt;p&gt;Track the projects you work on in terms of size, complexity. Use it as a measure the progress of taking on responsibility.&lt;/p&gt;
&lt;h3&gt;Retreat into Competence&lt;/h3&gt;
&lt;p&gt;(Dunning-Kruger, knowing that you know nothing in the vast scope of your field)&lt;/p&gt;
&lt;p&gt;Reflect on &lt;em&gt;how much you do know&lt;/em&gt; and what you have learnt.&lt;/p&gt;
&lt;p&gt;Reinforce what you do know via a small project.&lt;/p&gt;
&lt;h2&gt;Walking the Long Road&lt;/h2&gt;
&lt;h3&gt;Craft Over Art&lt;/h3&gt;
&lt;p&gt;Focus on delivering value to your customer over advancing your own self-interests.&lt;/p&gt;
&lt;h3&gt;Sustainable Motivations&lt;/h3&gt;
&lt;p&gt;“Do what you love and the money will follow.” ... While many programmers could probably find higher-paying jobs in the short term, the money that follows from doing what you love will pay off handsomely in the long run. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write down at least 15 things that motivate you. Wait a little while, then write down another five. How many of your motivations are about what other people think rather than what you feel?
Write down the list of five most important things and refer to it in tough times.&lt;/p&gt;
&lt;h3&gt;Nurture Your Passion&lt;/h3&gt;
&lt;p&gt;"Try to keep the sense of wonder about programming that you had at age 14. If you’re worried that your current job is rotting your brain, it probably is." - pg.&lt;/p&gt;
&lt;h3&gt;Draw Your Own Map&lt;/h3&gt;
&lt;p&gt;If your role is not aligning with what you want to do day to day or there is no opportunity within the company to transition into increasing the work you enjoy, leave.&lt;/p&gt;
&lt;h3&gt;Use Your Title&lt;/h3&gt;
&lt;h3&gt;Stay in the Trenches&lt;/h3&gt;
&lt;h3&gt;A Different Road&lt;/h3&gt;
&lt;h2&gt;Accurate Self Assessment&lt;/h2&gt;
&lt;h3&gt;Be the Worst&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;If you are the smartest person in the room, you're in the wrong room&lt;/em&gt;.
Surround yourself with excellent devs.
Being the weakest, your goal is to work harder than anyone else and work your way up from the bottom.&lt;/p&gt;
&lt;h3&gt;Find Mentors&lt;/h3&gt;
&lt;h3&gt;Kindred Spirits&lt;/h3&gt;
&lt;h3&gt;Rubbing Elbows&lt;/h3&gt;
&lt;p&gt;(Pair Programming, or broadly collaboration.)&lt;/p&gt;
&lt;h3&gt;Sweep the Floor&lt;/h3&gt;
&lt;p&gt;As a new apprentice volunteer for the unglamorous but necessary tasks. Writing docs, editing wiki, tests, bug fixes, code reviews, ...&lt;/p&gt;
&lt;p&gt;Avoid becoming the team gopher that only does the unglamorous tasks or shying away from more responsibility. If that does happen, remember  to Nurture Your Passion, Unleash Your Enthusiasm, advocate for yourself, and look for every opportunity to prove yourself worthy of higher-level work.&lt;/p&gt;
&lt;h2&gt;Perpetual Learning&lt;/h2&gt;
&lt;p&gt;"software development is composed of two primary activities: learning and communication..." - Andy Hunt.&lt;/p&gt;
&lt;h3&gt;Expand Your Bandwidth&lt;/h3&gt;
&lt;p&gt;You must develop the discipline and techniques necessary to efficiently absorb new information, as well as to understand it, retain it, and apply it. Seek new knowledge and experiences.&lt;/p&gt;
&lt;h3&gt;Practice, Practice, Practice&lt;/h3&gt;
&lt;p&gt;"Deliberate Practice" (K. Anders Ericsson)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[T]he masters described by George Leonard love to practice is that they do something a little bit different each time an exercise is performed. The point is not to hone your memory, but to discover the nuances in even the simplest skilled activity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Practice makes permanent.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Get the fundamentals sharpened!! Data structures and algorithms.&lt;/p&gt;
&lt;h3&gt;Breakable Toys&lt;/h3&gt;
&lt;p&gt;Build small (useful) projects such as address book, wiki or calendar to learn and explore without the fear of failure. Actively try ideas and techniques that might lead to failure.&lt;/p&gt;
&lt;p&gt;Personal wiki is a good project to work with HTTP, REST, web design, full text search, databases...&lt;/p&gt;
&lt;p&gt;Other examples: Games (Tetris, tic-tac-toe), IRC clients, blogging software.&lt;/p&gt;
&lt;p&gt;The goal is to &lt;em&gt;learn new things&lt;/em&gt; (technologies, language idioms) and create a custom app that serves your needs. They should be fun.&lt;/p&gt;
&lt;h3&gt;Use the Source&lt;/h3&gt;
&lt;p&gt;Examine the structure of the codebase and try to work out why the files were laid out that way. See if there is a rationale behind the way the developers modularized the codebase and compare it to the way you would have done it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pick an algorithmically sophisticated open source project (mercurial?). Browse the source noting algorithms and data structures and design patterns that are new. Write a post describing the architecture and new ideas learnt. Where can it be applied in your everyday work?&lt;/p&gt;
&lt;h3&gt;Reflect As You Work&lt;/h3&gt;
&lt;p&gt;Consider whether your practices are novel, innovative, or outdated. Ask yourself questions about the things that the rest of your team takes for granted. If there is something particularly painful or pleasant about your current work, ask yourself how it got that way, and if things are negative, how can they be improved?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Personal Practices Map&lt;/em&gt;: Writing down things they do and connections between them. (?)&lt;/p&gt;
&lt;h3&gt;Record What You Learn&lt;/h3&gt;
&lt;p&gt;Code diary :). 
Chronological record of lessons learnt&lt;/p&gt;
&lt;p&gt;Try to make new connections every time you review the material.&lt;/p&gt;
&lt;p&gt;Public and Private wikis&lt;/p&gt;
&lt;h3&gt;Share What You Learn&lt;/h3&gt;
&lt;p&gt;Write blog posts on lessons learnt. Provide the information you wish had existed and that would have helped you learn.&lt;/p&gt;
&lt;h3&gt;Create Feedback Loops&lt;/h3&gt;
&lt;p&gt;Find something in your working environment that you can measure and, more importantly, affect. Track that metric for a while. &lt;/p&gt;
&lt;h3&gt;Learn How You Fail&lt;/h3&gt;
&lt;p&gt;[T]he goal is to gain self-knowledge about the patterns, conditions, habits, and behaviours that lead you to failure.&lt;/p&gt;
&lt;h2&gt;Construct Your Curriculum&lt;/h2&gt;
&lt;h3&gt;Reading List&lt;/h3&gt;
&lt;h3&gt;Read Constantly&lt;/h3&gt;
&lt;h3&gt;Study the Classics&lt;/h3&gt;
&lt;h3&gt;Dig Deeper&lt;/h3&gt;
&lt;p&gt;Going to the primary sources of concepts (Roy Fielding's PhD thesis on REST)&lt;/p&gt;
&lt;p&gt;Find out who first came up with the ideas and understand the problems they were trying to solve.&lt;/p&gt;
&lt;p&gt;When you read a tutorial, you should not be looking for code to copy but for a mental structure in which to place your new knowledge. Your goal should be to understand the historical context of the concept and whether it is a special instance of something else.&lt;/p&gt;
&lt;p&gt;[Y]ou need to take care not to accidentally become a narrow specialist. The goal is to be able to acquire as much specialized knowledge as necessary to solve any problem, without losing your perspective about the relative importance of different aspects of software development. (?)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt; (Come back to this later)&lt;/p&gt;
&lt;h3&gt;Familiar Tools&lt;/h3&gt;
&lt;p&gt;Know when to use the right tools. Trade-offs between the tools you know and productivity of the team. Don't let tools become "Golden hammers".&lt;/p&gt;
&lt;p&gt;Acknowledge tools can become obsolete (subversion) and better tools are out there.&lt;/p&gt;
&lt;p&gt;For your career to prosper, you must learn to acquire and abandon familiar tools with ease.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Write down a list of familiar tools. If the list has less than five items, look for tools that will fill gaps. Unfamiliar tools or new tools altogether.&lt;/p&gt;
&lt;p&gt;For lists greater than five, are there more powerful tools available? Are there tools that may become obsolete?&lt;/p&gt;</content><category term="Book Notes"></category></entry><entry><title>Lotaria</title><link href="/lotaria.html" rel="alternate"></link><published>2021-06-27T06:51:00+01:00</published><updated>2021-06-27T06:51:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-06-27:/lotaria.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Adapted from If on a winter's night a traveller: Chapter 8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I asked Lotaria if she has already read some books of mine that I lent her. She
said no, because here she doesn't have a computer at her disposal. &lt;/p&gt;
&lt;p&gt;She explained to me that a suitably programmed computer can …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Adapted from If on a winter's night a traveller: Chapter 8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I asked Lotaria if she has already read some books of mine that I lent her. She
said no, because here she doesn't have a computer at her disposal. &lt;/p&gt;
&lt;p&gt;She explained to me that a suitably programmed computer can read a novel in a
few minutes and record the list of all the words contained in the text, in
order of frequency. 'That way I can have an already completed reading at hand,"
Lotaria says, "with an incalculable saving of time. What is the reading of a
text, in fact, except the recording of certain thematic recurrences, certain
insistences of forms and meanings? An electronic reading supplies me with a
list of the frequencies, which I have only to glance at to form an idea of the
problems the book suggests to my critical study. Naturally, at the highest
frequencies the list records countless articles, pronouns, particles, but I
don't pay them any attention. I head straight for the words richest in meaning;
they can give me a fairly precise notion of the book." &lt;/p&gt;
&lt;p&gt;"In a novel of fifty to a hundred thousand words," she said to me, "I advise
you to observe immediately the words that are repeated about twenty times. Look
here. Words that appear nineteen times: &lt;/p&gt;
&lt;p&gt;princesses, frog, miser, juniper, doctor, salad, gardener,
watch, tail, singing, drank, journey, stretched, pulled,
scarcely, legs, stones, bad, rolled, middle, crept, laughed,
vain, glad, cock, broke, grieved, show, horses, tried,
having, cart, waiting, words, cottage, kept, dress, alive,
peas ... &lt;/p&gt;
&lt;p&gt;"Words that appear eighteen times: &lt;/p&gt;
&lt;p&gt;dancing, catherine, ashputtel, apples, clock, noise, thither,
bottom, making, mouth, please, meantime, ought, farther, deep,
girls, times, spot, strange, being, knife, lifted, carter,
someone, showed, running, marry, falada, waited, learnt&lt;/p&gt;
&lt;p&gt;"Don't you already have a clear idea what it's about?" Lotaria says.&lt;/p&gt;
&lt;p&gt;"There's no question: it's a collection of fairy tales, princesses, cottages, 
adventurous prose with a elements of darkness. The narration is entirely on the
surface, I would say; but to make sure, it's always a good idea to take a look
at the list of words used only once, though no less important for that. Take
this sequence, for example: &lt;/p&gt;
&lt;p&gt;readily, patience, straightening, leap, sixteenth, irons,
drowned, secret, dozing, comfortably, crawling, tittered,
adjourn, impertinent, worry, rises, handwriting, raw, pulling,
prove&lt;/p&gt;
&lt;p&gt;"Hmm, that seems consistent with what I suggested."&lt;/p&gt;
&lt;p&gt;Lotaria shows me another series of lists. "This is an entirely different novel.
It's immediately obvious. Look at the words that recur about fifty times: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;frequency&lt;/th&gt;
&lt;th&gt;word&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;above, after&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;order, army&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;keep, lucca, then, very, hold&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;florence, most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;alexander, although, found&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;pope, yet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;your&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;concerning, war, france&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;before, country&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;power, whilst, friends, does&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;where, sent, long&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;affairs, seen, another, considered, enemy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;wish, afterwards&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"What do you think of that? An book of betrayal, power struggle, indecisiveness
and uncertainty ... As a confirmation, we'll take a sample of words used
a single time: &lt;/p&gt;
&lt;p&gt;entreated, vainly, decree, reading, confirming, finest,
imaginary, consisted, standstill, perceiving, seventh, beatrice,
pressure, definiendis, colleoni, tales, essex, antico,
valdichiana, invasion&lt;/p&gt;
&lt;p&gt;"So we already have an idea of the atmosphere, the moods, the social background...
. We can go on to a third book: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;frequency&lt;/th&gt;
&lt;th&gt;word&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;master, added, jacques, word, five, empty, hear, stolen&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;please, ago, doors, being, wall, sharply, top, wife, bernard, arrest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;pictures, work, does, jeanne, middle, already, paper, big, surprise, waiting, clock, behind, held, thief, seen, cigarette, lighted, keys&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;place, getting, ever, every, far, bag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;end, chapter, full, lips, four, hour, stared, papa, noise, towards, lost, ten, though, bureau, van, believe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;quick, marie, till, life, kept, next, our, stepped, brought, key, ladder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;cars, many, gentle, cut, hardly, turning, relzieres, taking, doesn, sudden, exactly, wasn, hundred, beside, yourself, shut, poor, certainly, picked, sprang&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;clear, fell, called, having, people, ask, world, kind, changed, closed, station, photograph, else, least, laughed, leave, detectives&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;theft, windows, slipped, wedding, knew, rang, bell, bring, whatever, doing, frowning, suddenly, keep, laugh, train, saying, horse, france, fact, handed, given, interesting, piece, hope, eight, help, prison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;true, honour, fine, sent, shoulders, absolutely, arm, frightened, charge, handkerchief&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;"I would say we're dealing with a lighter story of deception but this time
a thief. Rhythmic twists and turns, gentlemen, a hidden romance. One last time,
let's look at the list of words with a frequency of one. Look, for example:&lt;/p&gt;
&lt;p&gt;covert, discussing, disturb, courtesy, duchesse, tragic, paltry,
excluded, aquiline, unheard, reward, dealer, improve, differed,
reassure, mason, poker, instantly, trap, plans&lt;/p&gt;
&lt;p&gt;"You see? A guilt complex, pure and simple! A valuable indication: the critical
inquiry can start with that, establish some working hypotheses.... What did I
tell you? Isn't this a quick, effective system?" &lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Born to Run</title><link href="/born-to-run.html" rel="alternate"></link><published>2021-05-19T00:00:00+01:00</published><updated>2021-05-19T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-05-19:/born-to-run.html</id><summary type="html">&lt;h2&gt;Notes from Born to Run&lt;/h2&gt;
&lt;p&gt;"The best runner leaves no tracks"-- wasn't some gossamer koan, but real,
concrete, how-to, training advice.&lt;/p&gt;
&lt;p&gt;There's something so universal about that sensation, the way running unites our
two most primal impulses: fear and pleasure. We run when we're scared, we run
when we're ecstatic …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Notes from Born to Run&lt;/h2&gt;
&lt;p&gt;"The best runner leaves no tracks"-- wasn't some gossamer koan, but real,
concrete, how-to, training advice.&lt;/p&gt;
&lt;p&gt;There's something so universal about that sensation, the way running unites our
two most primal impulses: fear and pleasure. We run when we're scared, we run
when we're ecstatic, we run away from our problems and run around for a good
time.&lt;/p&gt;
&lt;p&gt;Three times, America has seen distance-running skyrocket, ... Great Depression
..., Early 70s (Cold War), One year after the September 11 attacks,
trail-running suddenly became the fastest-growing outdoor sport in the country.&lt;/p&gt;
&lt;p&gt;when this ninety-five-year-old man came hiking twenty-five miles over the
mountain. Know why he could do it? Because no one ever told him he couldn't. No
one ever told him he oughta be off dying somewhere in an old age home. You live
up to your own expectations, man.&lt;/p&gt;
&lt;p&gt;Vigil had been furiously taking mental notes (Look how they point their toes
down, not up, ...&lt;/p&gt;
&lt;p&gt;Remember? Back when you were a kid and you had to be yelled at to slow down?&lt;/p&gt;
&lt;p&gt;That was the real secret of the Tarahumara: they'd never forgotten what it felt
like to love running&lt;/p&gt;
&lt;p&gt;They were so ignorant, they didn't even realize they were supposed to be burned
out, overtrained, and injured. Instead, they were fast; really fast.&lt;/p&gt;
&lt;p&gt;Emil Zatopek  &lt;/p&gt;
&lt;p&gt;"There are two goddesses in your heart, ...  "The Goddess of Wisdom and the
Goddess of Wealth. Everyone thinks they need to get wealth first, and wisdom
will come. So they concern themselves with chasing money. But they have it
backwards. You have to give your heart to the Goddess of Wisdom, give her all
your love and attention, and the Goddess of Wealth will become jealous, and
follow you."&lt;/p&gt;
&lt;p&gt;My arms floated until my hands were rib-high; my stride chopped down to
pitty-pat steps; my back straightened so much I could almost hear the vertebrae
creaking.&lt;/p&gt;
&lt;p&gt;Think Easy, Light, Smooth, and Fast. You start with easy, because if that's all
you get, that's not so bad&lt;/p&gt;
&lt;p&gt;Posted on the wall of Vigil's office was a magic formula for fast running that,
as far as Deena could tell, had absolutely nothing to do with running: it was
stuff like "Practice abundance by giving back," and "Improve personal
relationships," and "Show integrity to your value system.&lt;/p&gt;
&lt;p&gt;For ten minutes, Scott lay like a corpse. Then he got up and did it, shattering
the Badwater record with a time of 24:36.&lt;/p&gt;
&lt;p&gt;But like every champion, he was up against the Curse of Ali:...&lt;/p&gt;
&lt;p&gt;"I thought if you could run one hundred miles, you'd be in this Zen state.
You'd be the fucking Buddha, bringing peace and a smile to the world. It didn't
work in my case--I'm the same old punk-ass as before--but there's always that
hope that it will turn you into the person you want to be, a better, more
peaceful person."&lt;/p&gt;
&lt;p&gt;Dr. Daniel Lieberman -- "A lot of foot and knee injuries that are currently
plaguing us are actually caused by people running with shoes that actually make
our feet weak, cause us to overpronate, give us knee problems&lt;/p&gt;
&lt;p&gt;In a stroke of dark irony, Bowerman named it the Cortez--after the conquistador
who plundered the New World for gold and unleashed a horrific smallpox epidemic...&lt;/p&gt;
&lt;p&gt;"The forward foot moves toward the track in a downward, backward, 'stroking'
motion (not punching or pounding) and the outer edge of the ball of the foot
makes first contact with the track," Wilt writes. "Running progression results
from these forces pushing behind the center of gravity of the body. ..."&lt;/p&gt;
&lt;p&gt;But Bowerman had an idea: maybe you could grab a little extra distance if you
stepped ahead of your center of gravity. &lt;/p&gt;
&lt;p&gt;"We ran in canvas shoes," Lydiard went on&lt;/p&gt;
&lt;p&gt;"You don't stop running because you get old," said the Demon. "You
get old because you stop running."&lt;/p&gt;
&lt;p&gt;"Whenever you run, remember that feeling of straining against the rope. It'll
keep your feet under your body, your hips driving straight ahead, and your
heels out of the picture."&lt;/p&gt;
&lt;p&gt;... the greatest marathoners in the world run like kindergartners. "Watch kids at
a playground running around. Their feet land right under them, and they push
back,"&lt;/p&gt;
&lt;p&gt;1988, triathletes started to use aero bars on their bikes and cyclists mocked
them mercilessly--until Greg Lemond used one and won the Tour de France by eight
seconds."&lt;/p&gt;
&lt;p&gt;"Quick, light leg
contractions are more economical than big, forceful ones.&lt;/p&gt;
&lt;p&gt;Yeah. It's like they're running on hot coals."&lt;/p&gt;
&lt;p&gt;The way to activate your fat-burning furnace is by staying below your
aerobic threshold--your hard-breathing point--during your endurance runs. (fact-check)&lt;/p&gt;
&lt;p&gt;... his only advice being to focus on form and keep the pace relaxed enough to
occasionally breathe with my mouth shut. (Fifty years earlier, Arthur Lydiard
offered an equal but opposite tip for managing heart rate and pace: "Only go
as fast as you can while holding a conversation.")&lt;/p&gt;
&lt;p&gt;... tesgüino is very lightly fermented, so it's low in alcohol and high in nutrients.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Running Man theory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;getting air may have determined the way we got our bodies.&lt;/p&gt;
&lt;p&gt;Bramble would later say. Running is just a controlled fall,&lt;/p&gt;
&lt;p&gt;Achilles tendon, which connects the calf to the heel: we've got
one, chimps don't ... Your butt's job is to prevent the momentum of your upper
body from flipping you onto your face. ...  Achilles tendon serves no purpose
at all in walking ... All an Achilles tendon does is stretch like a rubber band&lt;/p&gt;
&lt;p&gt;David put lizards on a treadmill, and found they can't even run and breathe at
the same time. The best they can manage is a quick scramble before
stopping to pant&lt;/p&gt;
&lt;p&gt;So how long would it take to actually run an animal to death? ... if you can
run six miles on a summer day then you, my friend, are a lethal weapon in the
animal kingdom.&lt;/p&gt;
&lt;p&gt;... how old are you when you're back to running the same speed you did at
nineteen?"  ... It's sixty-four."&lt;/p&gt;
&lt;p&gt;The reason I was feeling so much stronger today than I had on the long haul
over from Batopilas, I realized, was because I was running like the Kalahari
Bushmen. I wasn't trying to overtake the antelope; I was just keeping it in
sight.&lt;/p&gt;</content><category term="Book Notes"></category></entry><entry><title>Discriminant Analysis</title><link href="/discriminant-analysis.html" rel="alternate"></link><published>2021-05-02T00:00:00+01:00</published><updated>2021-05-02T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-05-02:/discriminant-analysis.html</id><summary type="html">&lt;h2&gt;Linear Discriminant Classifier&lt;/h2&gt;
&lt;p&gt;Suppose we have two classes of data &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; corresponding to genuine
and counterfeit currency distributed &lt;span class="math"&gt;\(f_j(\mathbf x)\)&lt;/span&gt;, &lt;span class="math"&gt;\(j = \{1, 2\}\)&lt;/span&gt;. Letting
&lt;span class="math"&gt;\(Y\)&lt;/span&gt; denote classes &lt;span class="math"&gt;\(Y = 1\)&lt;/span&gt; or &lt;span class="math"&gt;\(Y = 2\)&lt;/span&gt;. We also assume the prior probabilities
of class assignment as &lt;span class="math"&gt;\(\mathbb P …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Linear Discriminant Classifier&lt;/h2&gt;
&lt;p&gt;Suppose we have two classes of data &lt;span class="math"&gt;\(P_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(P_2\)&lt;/span&gt; corresponding to genuine
and counterfeit currency distributed &lt;span class="math"&gt;\(f_j(\mathbf x)\)&lt;/span&gt;, &lt;span class="math"&gt;\(j = \{1, 2\}\)&lt;/span&gt;. Letting
&lt;span class="math"&gt;\(Y\)&lt;/span&gt; denote classes &lt;span class="math"&gt;\(Y = 1\)&lt;/span&gt; or &lt;span class="math"&gt;\(Y = 2\)&lt;/span&gt;. We also assume the prior probabilities
of class assignment as &lt;span class="math"&gt;\(\mathbb P(Y = 1) = \pi_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathbb P(Y = 2) = \pi_2\)&lt;/span&gt;
and &lt;span class="math"&gt;\(\pi_1 + \pi_2 = 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Given we have observed &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; what is the probability of it belonging
to class 1?&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb P(Y = 1 \mid X = \mathbf x)
= \frac{\mathbb P(Y = 1 \cap X = \mathbf x)}{\mathbb P(X = \mathbf x)}
= \frac{f_1(\mathbf x)\pi_1}{f_1(\mathbf x)\pi_1 + f_2(\mathbf x)\pi_2}$$&lt;/div&gt;
&lt;p&gt;thus Bayes rule classifies &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to the class with the highest probability:&lt;/p&gt;
&lt;div class="math"&gt;$$\varphi(\mathbf x) = \arg \underset{j\in\{1, 2\}}\max \mathbb P(Y = j \mid X = \mathbf x).$$&lt;/div&gt;
&lt;p&gt;In other words, we assign &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to class 1 if &lt;span class="math"&gt;\(\mathbb P(Y = 1 \mid
X = \mathbf x) &amp;gt; \mathbb P(Y = 2 \mid X = \mathbf x)\)&lt;/span&gt; or &lt;span class="math"&gt;\(f_1(\mathbf x)\pi_1 &amp;gt;  f_2(\mathbf x)\pi_2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Assuming the populations follow a normal distribution with different means but
equal covariance, &lt;span class="math"&gt;\(X \mid Y = j \sim \mathcal N(\mu_, \Sigma)\)&lt;/span&gt; We then assign
&lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; to class 1 if&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
&amp;amp;\frac{f_1(\mathbf x)}{f_2(\mathbf x)} &amp;gt; \frac{\pi_2}{\pi_1} \\
&amp;amp;\Rightarrow \log \frac{f_1(\mathbf x)}{f_2(\mathbf x)} + \log \frac{\pi_1}{\pi_2} &amp;gt; 0 \\
&amp;amp;= \log \frac{\pi_1}{\pi_2}  + (\mu_1 - \mu_2)^T\Sigma^{-1}\mathbf x - \frac{1}{2} (\mu_1 - \mu_2)^T\Sigma^{-1}(\mu_1 + \mu_2) &amp;gt; 0.
\end{aligned}$$&lt;/div&gt;
&lt;!--
From the last line we recover the discriminant function
$\delta_j(x) = \log\pi_j + \mu_j^T\Sigma^{-1}\mathbf x - \frac{1}{2}\mu_j^T\Sigma^{-1}\mu_j$
--&gt;

&lt;p&gt;In practice the true mean and covariance is not known for population
distributions. Instead we use the sample statistic,
&lt;span class="math"&gt;\(\hat \mu_j = \bar{\mathbf x_j}\)&lt;/span&gt; for the mean and
&lt;span class="math"&gt;\(\hat \Sigma_j = \sum_i (x_i - \bar{\mathbf x_j})^T(x_i - \bar{\mathbf x_j}) \,/\, (n_j - 1)\)&lt;/span&gt;
for the covariance. It is also common to specify the prior probabilites as
&lt;span class="math"&gt;\(\hat \pi_j  = n_j \,/\, N\)&lt;/span&gt;, where &lt;span class="math"&gt;\(n_j\)&lt;/span&gt; is the number of observations in class
&lt;span class="math"&gt;\(j\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Relaxing Constraints and Generalizing&lt;/h3&gt;
&lt;p&gt;So far we have looked at the &lt;span class="math"&gt;\(K =2\)&lt;/span&gt; classes case. For &lt;span class="math"&gt;\(K &amp;gt; 2\)&lt;/span&gt; the probability
of observation &lt;span class="math"&gt;\(\mathbf x\)&lt;/span&gt; being distributed under class &lt;span class="math"&gt;\(j\)&lt;/span&gt; is &lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb P(Y = j \mid \mathbf x) = \frac{f_j(x)\pi_j(x)}{\sum_{k=1}^K f_k(\mathbf x)\pi_k(\mathbf x)}$$&lt;/div&gt;
&lt;p&gt;If we assume the populations do not have the same covariance &lt;span class="math"&gt;\(\Sigma_j \neq
\Sigma_k\)&lt;/span&gt; we get Quadratic Discriminant Analysis. Gaussian assumption can be
replaced for non-linear decision boundary and the non-parametric version,
&lt;em&gt;Naive Bayes&lt;/em&gt; also considers &lt;em&gt;independent conditional probabilities&lt;/em&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="blog"></category></entry><entry><title>Metropolis Hastings</title><link href="/metropolis-hastings.html" rel="alternate"></link><published>2021-04-27T00:00:00+01:00</published><updated>2021-04-27T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-27:/metropolis-hastings.html</id><summary type="html">&lt;p&gt;We continue the series of Monte Carlo methods by covering Markov chain based sampling algorithms.&lt;/p&gt;
&lt;p&gt;Metropolis Hastings is a sampling algorithm that relies on the guarantees from invariant distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Metropolis Hastings&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)}\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X \sim Q(\cdot \mid X^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Compute &lt;div class="math"&gt;$$\alpha(X …&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;We continue the series of Monte Carlo methods by covering Markov chain based sampling algorithms.&lt;/p&gt;
&lt;p&gt;Metropolis Hastings is a sampling algorithm that relies on the guarantees from invariant distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Metropolis Hastings&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)}\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X \sim Q(\cdot \mid X^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Compute &lt;div class="math"&gt;$$\alpha(X \mid X^{(t-1)}) = \min \left(1, \frac{\pi(X)Q(X^{(t-1)} \mid X)}{\pi(X^{(t-1)})Q(X \mid X^{(t-1)})} \right)$$&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Set &lt;span class="math"&gt;\(X^{(t)} = X\)&lt;/span&gt; with probability &lt;span class="math"&gt;\(\alpha(X \mid X^{(t-1)})\)&lt;/span&gt; else &lt;span class="math"&gt;\(X^{(t)} = X^{(t-1)}\)&lt;/span&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The conditional probability of accepting any proposed state given the chain is in &lt;span class="math"&gt;\(i\)&lt;/span&gt; is
&lt;/p&gt;
&lt;div class="math"&gt;$$ a(i) = \sum_{j \in \mathbb S} \alpha(j \mid i)Q_{i, j} $$&lt;/div&gt;
&lt;p&gt;From the algorithm we see the transition kernel &lt;span class="math"&gt;\(K_{i,j} = \alpha(j\mid i)Q_{i,i} + (1 - a(i))\delta_{ij}\)&lt;/span&gt; generates a 
Markov chain for the sequence &lt;span class="math"&gt;\((X^{(t)})_{t \geq 0}\)&lt;/span&gt; using the distribution &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;An advantage of using MH algorithm is we only need to know a distribution that is proportional to &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;There are two popular Metropolis-Hastings variations, the Metropolis algorithm
that uses a symmetric proposal distribution &lt;span class="math"&gt;\(Q(X^{(t)} \mid X^{(t-1)}) = Q(X^{(t-1)} \mid X^{(t)})\)&lt;/span&gt;. Common 
distributions used are normal, &lt;span class="math"&gt;\(\mathcal N(\mu, \sigma^2)\)&lt;/span&gt; and uniform, &lt;span class="math"&gt;\(U[a, b]\)&lt;/span&gt;.
The resulting acceptance ratio is simplified to&lt;/p&gt;
&lt;div class="math"&gt;$$\alpha(X \mid X^{(t-1)}) = \min \left(1, \frac{\pi(X)}{\pi(X^{(t-1)})} \right)$$&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Gibbs Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gibbs sampling uses full conditional distributions as the proposal distribution. For &lt;span class="math"&gt;\(j = 1,2, \ldots, n\)&lt;/span&gt; 
the proposal &lt;/p&gt;
&lt;div class="math"&gt;$$Q(X \mid X^{(t-1)}) = \pi(X_j \mid X_1^{(t-1)}, \ldots, X_1^{(t-1)}, X_1^{(t+1)}, \ldots, X_1^{(n)})$$&lt;/div&gt;
&lt;p&gt;
The acceptance probability &lt;span class="math"&gt;\(\alpha(X \mid X^{(t-1)})\)&lt;/span&gt; can be shown to be equal to 1.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Initialise &lt;span class="math"&gt;\(X^{(0)} = (X_1^{(0)}, X_2^{(0)})\)&lt;/span&gt; and for &lt;span class="math"&gt;\(t \geq 1\)&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_1^{(t)} \sim \pi_{1|2}(\cdot \mid X_2^{(t-1)})\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_2^{(t)} \sim \pi_{2|1}(\cdot \mid X_1^{(t)})\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;The transition kernel that guarantees an invariant distribution is&lt;/p&gt;
&lt;div class="math"&gt;$$K(\mathbf x, \mathbf y) = \pi_{1|2}(y_1 \mid x_2)\pi_{2|1}(y_2 \mid y_1)$$&lt;/div&gt;
&lt;p&gt;
with &lt;span class="math"&gt;\(\mathbf x = (x_1, x_2) = (X_1^{(t-1)}, X_2^{(t-1)})\)&lt;/span&gt;
and &lt;span class="math"&gt;\(\mathbf y = (y_1, y_2) = (X_1^{(t)}, X_2^{(t)})\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Statistics"></category><category term="Statistics"></category></entry><entry><title>Modelling TFL journeys</title><link href="/modelling-tfl-journeys.html" rel="alternate"></link><published>2021-04-26T00:00:00+01:00</published><updated>2021-04-29T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-26:/modelling-tfl-journeys.html</id><summary type="html">&lt;h2&gt;Data Description and Background&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://data.london.gov.uk/dataset/public-transport-journeys-type-transport"&gt;Public Transport Journeys by Type of Transport&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The data set comes from the Transport for London website. It describes the number of journeys on the public transport network by TFL reporting period, by type of transport. Data is broken down by bus, underground, DLR, tram, Overground …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Data Description and Background&lt;/h2&gt;
&lt;h3&gt;&lt;a href="https://data.london.gov.uk/dataset/public-transport-journeys-type-transport"&gt;Public Transport Journeys by Type of Transport&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The data set comes from the Transport for London website. It describes the number of journeys on the public transport network by TFL reporting period, by type of transport. Data is broken down by bus, underground, DLR, tram, Overground and cable car.&lt;/p&gt;
&lt;p&gt;Some information about the dataset from the data description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Period lengths are different in periods 1 and 13, and the data is not adjusted to account for that.
   Docklands Light Railway journeys are based on automatic passenger counts at stations.
   Overground and Tram journeys are based on automatic on-carriage passenger counts.
   Reliable Overground journey numbers have only been available since October 2010.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this project we will be forecasting the number of journeys on the London Underground network.&lt;/p&gt;
&lt;p&gt;We first create a test set the last 5 journey counts on the London Underground network to compare 
with our final forecasts.&lt;/p&gt;
&lt;h2&gt;Visualise the time series plot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-3-1.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;##                  Estimate   Std. Error  t value     Pr(&amp;gt;|t|)
## (Intercept)  4.983828e+03 4.579668e+02 10.88251 1.315793e-19
## period.start 6.840706e-03 6.413333e-04 10.66638 4.340164e-19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the initial plot, we can see the time series is non-stationary. We also confirm this from
the non-zero linear model regression coefficient.&lt;/p&gt;
&lt;p&gt;We also notice seasonal patterns which we will discuss later.&lt;/p&gt;
&lt;h2&gt;Stationarity&lt;/h2&gt;
&lt;p&gt;After first order differencing we plot the time series, its autocorrelation and partial auto correlation plots. &lt;/p&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-5-1.png"&gt;&lt;/p&gt;
&lt;p&gt;From the autocorrelation-lag plot we see high correlation at periodic intervals implying seasonality.&lt;/p&gt;
&lt;h2&gt;Seasonality&lt;/h2&gt;
&lt;p&gt;From the data we see months with two entries hence correlation every 13 lags. The data description also confirms this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Period lengths are different in periods 1 and 13, and the data is not adjusted to account for that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-6-1.png"&gt;&lt;/p&gt;
&lt;p&gt;After applying differencing every 13 lags we see a clearer representation of the ACF and
PACF plots. We initially consider &lt;strong&gt;ARIMA(0,1,1)(0,1,1)[13]&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,1)(0,1,1)[13]
## Q* = 5.4208, df = 8, p-value = 0.7118
## 
## Model df: 2.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = lu, order = c(0, 1, 1), seasonal = list(order = c(0, 1, 1), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1     sma1
##       -0.8258  -0.9033
## s.e.   0.0575   0.2643
## 
## sigma^2 estimated as 16.43:  log likelihood = -314.98,  aic = 635.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The model summary seems promising, we now check if the model is adequate using Ljung-Box tests for 
&lt;span class="math"&gt;\(K = 6\)&lt;/span&gt;, 12 and 24&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 1.9491, df = 6, p-value = 0.9243
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 14.991, df = 12, p-value = 0.242
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Box-Ljung test
## 
## data:  model1$residuals
## X-squared = 28.14, df = 24, p-value = 0.2542
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the Ljung-Box tests, we can conclude the model is adequate up to lag 24.&lt;/p&gt;
&lt;h2&gt;Overdifferencing&lt;/h2&gt;
&lt;p&gt;We now try to overfit the model. We start by increasing the degree of the seasonal moving average part to 4. 
Assuming quarterly seasonal variation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,1)(0,1,4)[13]
## Q* = 5.4319, df = 5, p-value = 0.3655
## 
## Model df: 5.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = ts(lu), order = c(0, 1, 1), seasonal = list(order = c(0, 1, 4), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1     sma1     sma2     sma3    sma4
##       -0.8087  -0.8449  -0.0553  -0.2369  0.2667
## s.e.   0.0634   0.3447   0.1598   0.1669  0.1404
## 
## sigma^2 estimated as 14.78:  log likelihood = -311.11,  aic = 634.21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A decrease in AIC by 1.74, decrease in log likelihood by 3.87 suggesting this model is a
better fit to our data.&lt;/p&gt;
&lt;p&gt;We now consider &lt;strong&gt;ARIMA(0,1,2)(1,1,4)[13].&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
##  Ljung-Box test
## 
## data:  Residuals from ARIMA(0,1,2)(0,1,4)[13]
## Q* = 5.676, df = 4, p-value = 0.2247
## 
## Model df: 6.   Total lags used: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## 
## Call:
## arima(x = lu, order = c(0, 1, 2), seasonal = list(order = c(0, 1, 4), period = 13), 
##     method = (&amp;quot;ML&amp;quot;))
## 
## Coefficients:
##           ma1      ma2     sma1     sma2     sma3    sma4
##       -0.7609  -0.0592  -0.8321  -0.0662  -0.2256  0.2670
## s.e.   0.1020   0.1022   0.2908   0.1589   0.1660  0.1458
## 
## sigma^2 estimated as 14.85:  log likelihood = -310.94,  aic = 635.87
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No improvement in the reduction of the log likelihood or AIC. &lt;/p&gt;
&lt;p&gt;The AIC is slightly higher compared to &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We conclude that &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt; is the best fitted model to the data.&lt;/p&gt;
&lt;h2&gt;Forecasting&lt;/h2&gt;
&lt;p&gt;&lt;img alt="center" src="/images/tfl/unnamed-chunk-11-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Comparing with the test data we see all points lie close to the point forecast.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;From the analysis, we can see the yearly growth of the London Underground
network usage.&lt;/p&gt;
&lt;p&gt;We note there is seasonal effects of the number of journeys on the London
Underground network each year.&lt;/p&gt;
&lt;p&gt;We first fit the data to an &lt;strong&gt;ARIMA(0,1,1)(0,1,1)[13]&lt;/strong&gt; and after
overdifferencing concluded that a &lt;strong&gt;ARIMA(0,1,1)(0,1,4)[13]&lt;/strong&gt; was more
suitable.&lt;/p&gt;
&lt;p&gt;We then forecasted the next 5 months resulting in accurate forecasts. 
All of which lie in the 80% forecast interval.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Statistics"></category><category term="Statistics"></category><category term="Data"></category></entry><entry><title>Sampling: Rejection and Importance</title><link href="/sampling-rejection-and-importance.html" rel="alternate"></link><published>2021-04-25T00:00:00+01:00</published><updated>2021-04-26T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-25:/sampling-rejection-and-importance.html</id><summary type="html">&lt;p&gt;We left the introduction to monte carlo simulations with its limitation of slow convergence.&lt;/p&gt;
&lt;p&gt;In this post we will cover Rejection and Importance sampling.&lt;/p&gt;
&lt;p&gt;For a density function &lt;span class="math"&gt;\(\pi(x)\)&lt;/span&gt;, how can we sample from it?&lt;/p&gt;
&lt;h2&gt;Rejection Sampling&lt;/h2&gt;
&lt;p&gt;The idea is to sample from a distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; that contains &lt;span class="math"&gt;\(\pi …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;We left the introduction to monte carlo simulations with its limitation of slow convergence.&lt;/p&gt;
&lt;p&gt;In this post we will cover Rejection and Importance sampling.&lt;/p&gt;
&lt;p&gt;For a density function &lt;span class="math"&gt;\(\pi(x)\)&lt;/span&gt;, how can we sample from it?&lt;/p&gt;
&lt;h2&gt;Rejection Sampling&lt;/h2&gt;
&lt;p&gt;The idea is to sample from a distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; that contains &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt;, that is 
&lt;span class="math"&gt;\(\pi \leq M \cdot q\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt; and a constant &lt;span class="math"&gt;\(M\)&lt;/span&gt;.
The algorithm is a two step process:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rejection Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;Sample &lt;span class="math"&gt;\(X \sim q\)&lt;/span&gt; and sample &lt;span class="math"&gt;\(U \sim U[0, 1]\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(\mathbb P(U &amp;lt; \frac{\pi(X)}{Mq(X)})\)&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;accept &lt;span class="math"&gt;\(X\)&lt;/span&gt; as a sample from &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;otherwise reject &lt;span class="math"&gt;\(X\)&lt;/span&gt; and repeat the sampling step.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;To show this works we prove:
For any &lt;span class="math"&gt;\(a, b \in \mathbb R\)&lt;/span&gt;, &lt;span class="math"&gt;\(a \leq b\)&lt;/span&gt;.
&lt;/p&gt;
&lt;div class="math"&gt;$$
    \mathbb P(X \in [a, b] \mid X \text{ accepted}) = \int_a^b \pi(x) dx
$$&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Proof&lt;/em&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{aligned}
\mathbb P(X \in [a, b] \cap \text{ accepted}) &amp;amp;= \int_a^b \mathbb P(X \text{ accepted} \mid X = x)q(x) dx \\
&amp;amp;= \int_a^b \frac{\pi(X)}{Mq(X)}q(x) dx \\
&amp;amp;= \frac{1}{M} \int_a^b \pi(x) dx  \\
\Rightarrow \mathbb P( X \text{ accepted}) &amp;amp;= \frac{1}{M} 
\end{aligned}
$$&lt;/div&gt;
&lt;p&gt;
Using Bayes' theorem
&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{aligned}
    \mathbb P(X \in [a, b] \mid X \text{ accepted}) &amp;amp;= \frac{\mathbb P(X \in [a, b] \cap \text{ accepted})}{\mathbb P(X \text{ accepted})} \\
    &amp;amp;= \frac{\frac{1}{M} \int_a^b \pi(x) dx}{\frac{1}{M}} \\
    &amp;amp;= \int_a^b \pi(x) dx  
\end{aligned}
$$&lt;/div&gt;
&lt;p&gt;An important consequence of this is the probability until an acceptance &lt;span class="math"&gt;\(\mathbb P(X \text{ accepted}) = \frac{1}{M}\)&lt;/span&gt; is distributed
geometrically &lt;span class="math"&gt;\(Y \sim \text{Geometric}(\frac{1}{M})\)&lt;/span&gt;. The mean time until an acceptance is then &lt;span class="math"&gt;\(\mathbb E[Y] = M\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Importance sampling&lt;/h2&gt;
&lt;p&gt;We want to evaluate integrals in the form: &lt;span class="math"&gt;\(\int \varphi(x)\pi(x) dx\)&lt;/span&gt; where
&lt;span class="math"&gt;\(\pi\)&lt;/span&gt; is a probability distribution and &lt;span class="math"&gt;\(\varphi(x)\)&lt;/span&gt; is a function. Sometimes
&lt;span class="math"&gt;\(\pi\)&lt;/span&gt; is tricky to evaluate, maybe the integral is intractable. Importance
sampling introduces a proposal distribution &lt;span class="math"&gt;\(q\)&lt;/span&gt; such that&lt;/p&gt;
&lt;div class="math"&gt;$$ \{x : \pi(x) &amp;gt; 0\} \subseteq \{x : q(x) &amp;gt; 0\} $$&lt;/div&gt;
&lt;p&gt;or alternatively, there exists a constant &lt;span class="math"&gt;\(M\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\pi(x) \leq M \cdot
q(x)\)&lt;/span&gt; for all &lt;span class="math"&gt;\(x\)&lt;/span&gt; which allows us to express our integral as:&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\mathbb E_{\pi}[\varphi(X)] &amp;amp;= \int \varphi(x)\pi(x) dx \\
&amp;amp;= \int \varphi(x)\frac{\pi(x)}{q(x)}q(x) dx \\
&amp;amp;= \int \varphi(x)w(x)q(x) dx \\
&amp;amp;= \mathbb E_{q}[\varphi(X)w(X)]. \end{aligned}$$&lt;/div&gt;
&lt;p&gt;Using the equivalence above, letting &lt;span class="math"&gt;\(X_i \overset{i.i.d}\sim q\)&lt;/span&gt; and appealing
to the weak law of large numbers we see &lt;/p&gt;
&lt;div class="math"&gt;$$
    \frac{1}{n} \sum_{i=1}^n \varphi(X_i)w(X_i) \overset{\text{p}}\rightarrow \mathbb E_{\pi}[\varphi(X)]
$$&lt;/div&gt;
&lt;p&gt;The algorithm is as follows:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Importance Sampling&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Choose &lt;span class="math"&gt;\(q\)&lt;/span&gt; such that &lt;span class="math"&gt;\(\{x : \pi(x) &amp;gt; 0\} \subseteq \{x : q(x) &amp;gt; 0\}\)&lt;/span&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For &lt;span class="math"&gt;\(i = 1, 2, \cdots, n\)&lt;/span&gt;:&lt;ul&gt;
&lt;li&gt;Draw &lt;span class="math"&gt;\(X_i \sim q\)&lt;/span&gt; &lt;/li&gt;
&lt;li&gt;Calculate importance weights &lt;span class="math"&gt;\(w(X_i) = \frac{\pi(X_i)}{q(X_i)}\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Calculate &lt;span class="math"&gt;\(\bar{\varphi}_n = \frac{1}{n}\sum_{i=1}^n \varphi(X_i)w(X_i)\)&lt;/span&gt;, 
the unbiased estimator of &lt;span class="math"&gt;\(\mathbb E_\pi[\varphi(X)]\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Statistics"></category><category term="Statistics"></category></entry><entry><title>Monte Carlo</title><link href="/monte-carlo.html" rel="alternate"></link><published>2021-04-24T00:00:00+01:00</published><updated>2021-04-24T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-04-24:/monte-carlo.html</id><summary type="html">&lt;p&gt;Monte Carlo methods are a class of sampling algorithms to obtain numerical approximations.
To do this we rely on the weak law of large numbers:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;The weak law of large numbers&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A sequence of random variables &lt;span class="math"&gt;\(X_1, X_2, \cdots, X_n\)&lt;/span&gt; &lt;em&gt;converges in probability&lt;/em&gt; to a random
variable …&lt;/p&gt;&lt;/dd&gt;&lt;/dl&gt;</summary><content type="html">&lt;p&gt;Monte Carlo methods are a class of sampling algorithms to obtain numerical approximations.
To do this we rely on the weak law of large numbers:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;The weak law of large numbers&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A sequence of random variables &lt;span class="math"&gt;\(X_1, X_2, \cdots, X_n\)&lt;/span&gt; &lt;em&gt;converges in probability&lt;/em&gt; to a random
variable &lt;span class="math"&gt;\(X\)&lt;/span&gt; if for all &lt;span class="math"&gt;\(\delta &amp;gt; 0\)&lt;/span&gt;
&lt;div class="math"&gt;$$
    \lim_{n\rightarrow \infty} \mathbb P(|X_n - X | \geq \delta) = 0.
$$&lt;/div&gt;
&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;This is also written as &lt;span class="math"&gt;\(X_n \overset{\text{p}}\rightarrow X\)&lt;/span&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;A consequence of this taking using the empirical mean &lt;span class="math"&gt;\(\overline{X}_n = \frac{1}{n} \sum_{i=1}^n X_i\)&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;If the sequence &lt;span class="math"&gt;\(X_1, X_2, \cdots\)&lt;/span&gt; are independent and identically distributed (i.i.d) with &lt;span class="math"&gt;\(\mathbb E(X_1) = \mu\)&lt;/span&gt; and
finite variance &lt;span class="math"&gt;\(\sigma^2 &amp;lt; \infty\)&lt;/span&gt;,  we have &lt;span class="math"&gt;\(\overline{X}_n \overset{\text{p}}\rightarrow \mu\)&lt;/span&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;For an illustrated example we'll use an abstract example of estimating the probability that &lt;span class="math"&gt;\(X \in A\)&lt;/span&gt; for a set &lt;span class="math"&gt;\(A \subset \mathbb R\)&lt;/span&gt;. We also assume &lt;span class="math"&gt;\(X\)&lt;/span&gt; has probability density function &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Defining the estimator of a sample landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt; as &lt;span class="math"&gt;\(\hat{p} := \boldsymbol{1}_{X_n \in A}\)&lt;/span&gt; we notice that &lt;span class="math"&gt;\(\mathbb P(X \in A) = \mathbb E[\boldsymbol{1}_{X_n \in A}]\)&lt;/span&gt; thus we approximate &lt;span class="math"&gt;\(\mathbb P(X \in A)\)&lt;/span&gt; with the empirical mean &lt;span class="math"&gt;\(\frac{1}{n} \sum_{i=1}^n \boldsymbol{1}_{X_i \in A}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where
&lt;/p&gt;
&lt;div class="math"&gt;$$\boldsymbol{1}_{X_i \in A} = \left\{
\begin{array}{ll}
1 &amp;amp;  X_i \in A \\
0 &amp;amp; \text{otherwise}
\end{array} 
\right.$$&lt;/div&gt;
&lt;p&gt;The estimator &lt;span class="math"&gt;\(\hat{p}\)&lt;/span&gt; describes the proportion of samples landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt;. If we define &lt;span class="math"&gt;\(Z_n\)&lt;/span&gt; as the &lt;em&gt;number&lt;/em&gt; of samples landing in &lt;span class="math"&gt;\(A\)&lt;/span&gt; the we have the relationship &lt;span class="math"&gt;\(\hat{p} = \dfrac{Z_n}{n}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It follows that the number of samples that land in &lt;span class="math"&gt;\(A\)&lt;/span&gt; follows a Binomial distribution &lt;span class="math"&gt;\(Z_n \sim \text{Bin}(n, p)\)&lt;/span&gt;. This arises from considering the sum of &lt;span class="math"&gt;\(n\)&lt;/span&gt; independent Bernoulli trials.&lt;/p&gt;
&lt;!--
#### The limitations of Monte Carlo simulations

As we know the distribution of $\hat{p}$ we can calculate the variance of the estimator:
$$
    \text{Var}(\hat{p}) = \frac{1}{n^2}\text{Var}(Z_n) = \frac{np(1 - p)}{n^2} = \frac{p(1 - p)}{n}.
$$
The empirical mean $\mathbb E[\hat{p}] = \frac{1}{n}\mathbb E[Z_n] = p$ thus using the weak law of large numbers, $\hat{p} \overset{\text{p}}\rightarrow p$.

How do we quantify how close $\hat{p}$ is to $p$? First we introduce the Central Limit theorem:

: For $X_1, X_2, \cdots, X_n$, $n$ i.i.d samples with mean $\mu$ and finite variance $\sigma^2$ with $\overline{X}_n$ defining the empirical mean,
$$Z = lim_{n \rightarrow \infty} \sqrt{n}\left( \frac{\overline{X}_n - \mu}{\sigma}\right) \sim \mathcal N(0, 1)$$

The consequence of the theorem tells us 
for large $n$ $\overline{Z}_n \sim \mu + \frac{\sigma}{\sqrt{n}}Z$
Which for our parameters of interest:
$$p + \frac{\sqrt{p(1-p)}}{\sqrt{n}}Z$$

$p$ the quantity of interest and $\frac{\sqrt{p(1-p)}}{\sqrt{n}}Z$ the error term. As $Z \in (0, 1)$ we take the error term to be $\frac{\sqrt{p(1-p)}}{\sqrt{n}}$

Finally, we see the error term shrinks by a factor of $\sqrt{n}$. 
--&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Statistics"></category><category term="Statistics"></category></entry><entry><title>Web, faster</title><link href="/web-faster.html" rel="alternate"></link><published>2021-03-23T00:00:00+00:00</published><updated>2021-03-28T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2021-03-23:/web-faster.html</id><summary type="html">&lt;p&gt;On inspecting &lt;a href="sunset"&gt;sunset&lt;/a&gt; I noticed I had to wait as each image loaded, top to bottom.
There must be something I can do about it.&lt;/p&gt;
&lt;h2&gt;The Test&lt;/h2&gt;
&lt;p&gt;All tests conducted used &lt;a href="https://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt; with the default settings.&lt;/p&gt;
&lt;p&gt;For the &lt;a href="sunset"&gt;page&lt;/a&gt;, the bottlenecks were the multiple uncompressed, uncached images. &lt;/p&gt;
&lt;p&gt;&lt;img alt="before score" src="images/before-summary.jpg"&gt;
&lt;img alt="before optimized" src="images/before-optimized.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Image Compression&lt;/h2&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On inspecting &lt;a href="sunset"&gt;sunset&lt;/a&gt; I noticed I had to wait as each image loaded, top to bottom.
There must be something I can do about it.&lt;/p&gt;
&lt;h2&gt;The Test&lt;/h2&gt;
&lt;p&gt;All tests conducted used &lt;a href="https://www.webpagetest.org/"&gt;WebPageTest&lt;/a&gt; with the default settings.&lt;/p&gt;
&lt;p&gt;For the &lt;a href="sunset"&gt;page&lt;/a&gt;, the bottlenecks were the multiple uncompressed, uncached images. &lt;/p&gt;
&lt;p&gt;&lt;img alt="before score" src="images/before-summary.jpg"&gt;
&lt;img alt="before optimized" src="images/before-optimized.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Image Compression&lt;/h2&gt;
&lt;p&gt;The first &lt;code&gt;0/100&lt;/code&gt; score was the lack of image compression. &lt;/p&gt;
&lt;p&gt;Following Googles guideline to &lt;a href="https://developers.google.com/speed/docs/insights/OptimizeImages"&gt;optimizing images&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduce quality to 85 if it was higher. With quality larger than 85, the image
  becomes larger quickly, while the visual improvement is little.&lt;/li&gt;
&lt;li&gt;Reduce Chroma sampling to 4:2:0, because human visual system is less
  sensitive to colors as compared to luminance.&lt;/li&gt;
&lt;li&gt;Use progressive format for images over 10k bytes. Progressive JPEG usually
  has higher compression ratio than baseline JPEG for large image, and has the
  benefits of progressively rendering.&lt;/li&gt;
&lt;li&gt;Use grayscale color space if the image is black and white.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;can be represented using &lt;code&gt;convert&lt;/code&gt; from &lt;a href="https://imagemagick.org/index.php"&gt;ImageMagick&lt;/a&gt;,
first to change png to ipeg then apply progressive compression.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for image in *.png ;  do convert "$image" "${image%.*}.jpg" ; done&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for image in *.jpg; do convert "$image"  -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace sRGB "$image"; done&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As well as JPEG being a preferred format for photographs they are able to be
compressed such that the full image is instantly loaded.&lt;/p&gt;
&lt;h2&gt;Progressive JPEGs&lt;/h2&gt;
&lt;p&gt;The second &lt;code&gt;0/100&lt;/code&gt; score was the lack of progressive JPEG usage. Standard JPEGs
load from &lt;em&gt;top to bottom&lt;/em&gt;, the image loads line by line. Progressive
JPEGs on the other hand loads the entire image and renders pixel by pixel.
Contrasting with regular JPEGs we can say progressive JPEGs load from back to front.&lt;/p&gt;
&lt;h2&gt;After&lt;/h2&gt;
&lt;p&gt;&lt;img alt="after score" src="images/after-summary.jpg"&gt;
&lt;img alt="after optimized" src="images/after-optimized.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Success! A 2x speed up in loading time, from 32 to 16 seconds and a 2x reduction in page size.&lt;/p&gt;
&lt;h2&gt;Caching?&lt;/h2&gt;
&lt;p&gt;The remaining poor rating, caching, is managed on the server side. Github pages stores cached
content for only 10 minutes. Ideally for static content such as CSS, JS and images month long
caching is recommended. &lt;/p&gt;
&lt;h3&gt;Further&lt;/h3&gt;
&lt;p&gt;This post was inspired by Dan Luu's &lt;a href="https://danluu.com/octopress-speedup/"&gt;50x speed up&lt;/a&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>2020: A Year in Review</title><link href="/2020.html" rel="alternate"></link><published>2020-11-29T00:00:00+00:00</published><updated>2020-12-26T11:09:52+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-11-29:/2020.html</id><summary type="html">&lt;p&gt;The year of connection, I've decided on the theme for next year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First off, how did the year of creating go?&lt;/p&gt;
&lt;p&gt;In exploring this years theme I managed to create a personal CRM, starting with
a &lt;a href="https://sive.rs/dbt"&gt;personal database&lt;/a&gt;, expanded functionality with Django
and a web interface.&lt;br&gt;
I highly recommend …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The year of connection, I've decided on the theme for next year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First off, how did the year of creating go?&lt;/p&gt;
&lt;p&gt;In exploring this years theme I managed to create a personal CRM, starting with
a &lt;a href="https://sive.rs/dbt"&gt;personal database&lt;/a&gt;, expanded functionality with Django
and a web interface.&lt;br&gt;
I highly recommend looking at &lt;a href="https://www.monicahq.com/"&gt;Monica&lt;/a&gt; for a complete,
maintained project.&lt;/p&gt;
&lt;p&gt;I've also tinkered with Common Lisp during the summer, published only 10 posts
since choosing the theme, there is still time! My list of unpublished &lt;em&gt;has&lt;/em&gt;
increased and the frequency of note taking increased too.&lt;/p&gt;
&lt;p&gt;This has helped as I moved to learning Clojure and ClojureScript for 
&lt;em&gt;real world projects&lt;/em&gt;, learning React via ClojureScript's
&lt;em&gt;Reagent&lt;/em&gt; and &lt;em&gt;Re-frame&lt;/em&gt; libraries. &lt;/p&gt;
&lt;p&gt;During the summer I managed to read more than a &lt;a href="bookshelf"&gt;handful of books&lt;/a&gt;.
Late spring saw me invest more time into reading, learning, discovering
interesting things on the internet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I hoped to have written 100 tweets in 3 months.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That didn't last long.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I committed to writing more.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;I set my yearly theme to creating. Whilst I barely managed to publish a blog
post one every month it wasn't a goal to stick to a regime. Now, of course,
writing every morning, I don't need to be as conscious of what I type, the
content is for my eyes only. In the pile of offhand morning pages I have no
doubt there will be something I feel compelled to put up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I emailed an internet stranger for the first time&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This was an important turning point in the year, realizing the 
&lt;a href="mailto:nehemiahcampbell@hotmail.co.uk"&gt;feel free to email&lt;/a&gt;
wasn't just a modern curtsy, we &lt;em&gt;do&lt;/em&gt; want to hear from our audience and experts
are willing to reply to your queries. Being online is far more rewarding
when you interact with people on the other end of the article.&lt;/p&gt;
&lt;p&gt;Less lurking, more posting next year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What else?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First internship. It was great working with &lt;a href="https://eng2eng.net/"&gt;E2E&lt;/a&gt;;
working on adding features to their online engineering network. The founders
are incredible leaders and I have no doubt they will have a successful career
ahead of them.&lt;/p&gt;
&lt;p&gt;&lt;a href="sunset"&gt;Travel&lt;/a&gt;. I was lucky enough to survive the first exodus of exchange
students across Hong Kong. I spent the end of 2019 and beginning of 2020 in
Malaysia, Singapore and Vietnam. The remaining time in Hong Kong was quiet,
a drop in tourists and familiar faces hadn't returned over the holiday.&lt;br&gt;
My intentional visit home mid March turned into an unexpected end to my time 
in Hong Kong. Even though I miss the excitement of travelling, I made the most
of my time.&lt;/p&gt;
&lt;p&gt;In my personal life I finally had the courage to ask someone out. In the five
months I have been with her I have learnt how to be more forgiving, not to
assume the worst possible outcome and realizing that life is not forever so
enjoy the present. Earlier this year I concluded that regrets are something
I do not have, only lessons to be learnt from.&lt;/p&gt;
&lt;p&gt;2020 wasn't &lt;em&gt;that&lt;/em&gt; bad, could've been worse.&lt;/p&gt;
&lt;p&gt;Hello 2021. More on that later.&lt;/p&gt;</content><category term="Review"></category></entry><entry><title>XOR</title><link href="/xor.html" rel="alternate"></link><published>2020-08-08T00:00:00+01:00</published><updated>2020-12-26T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-08:/xor.html</id><summary type="html">&lt;h1&gt;XOR problem&lt;/h1&gt;
&lt;p&gt;In learning a new field I don't think an introduction using the most basic
example doesn't help. Using the XOR problem to understand deep learning often
obscures the grander picture. That being said, I'm not sure who this
explanation is for. At the moment, myself. Why? To see …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;XOR problem&lt;/h1&gt;
&lt;p&gt;In learning a new field I don't think an introduction using the most basic
example doesn't help. Using the XOR problem to understand deep learning often
obscures the grander picture. That being said, I'm not sure who this
explanation is for. At the moment, myself. Why? To see how well I can explain
the fundamental concepts of deep learning using a toy example. &lt;/p&gt;
&lt;p&gt;A quick history lesson. &lt;/p&gt;
&lt;p&gt;Perceptrons are functions that perform a linear operation followed by a non
linear function mapping. In general, taking inputs &lt;span class="math"&gt;\(x_1, x_2, ..., x_n\)&lt;/span&gt; to an
output &lt;span class="math"&gt;\(f(\sum_i^n {w_i x_i})\)&lt;/span&gt;. Letting &lt;span class="math"&gt;\(f(z)\)&lt;/span&gt; be a step function with value &lt;code&gt;1
if z &amp;gt; 0 else 0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The problem here is that we are only able to find functions that are linearly
separable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multilayer and differentiable activation functions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What we want to do is add non linearity to our input. By doing so we can
transform our feature space for a linear model to learn.&lt;/p&gt;
&lt;h3&gt;The architecture&lt;/h3&gt;
&lt;p&gt;The network consists of two inputs &lt;span class="math"&gt;\(x_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(x_2\)&lt;/span&gt;, a hidden layer &lt;span class="math"&gt;\(\textbf{h}=
[h_1, h_2]\)&lt;/span&gt; and output &lt;span class="math"&gt;\(y\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Task&lt;/h3&gt;
&lt;p&gt;Find the parameters (weights) &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; that minimize the error (loss) between estimated function &lt;span class="math"&gt;\(f\)&lt;/span&gt; and our estimate &lt;span class="math"&gt;\(f^*\)&lt;/span&gt;. We want our &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; values to produce an estimate as close to &lt;span class="math"&gt;\(f^*\)&lt;/span&gt; as possible, or for the loss function &lt;span class="math"&gt;\(\mathcal L\)&lt;/span&gt; to be as close to zero.&lt;/p&gt;
&lt;p&gt;The mean squared error 
&lt;/p&gt;
&lt;div class="math"&gt;$$\mathcal L(\theta) = \frac{1}{2} \sum_{x} (f^*(\textbf{x}) - f( \textbf{x} ; \theta))^2$$&lt;/div&gt;
&lt;p&gt;has a nice derivative 
&lt;/p&gt;
&lt;div class="math"&gt;$$\nabla{\mathcal L_{\theta}} = \sum_{x} (f^*(\textbf{x}) - f( \textbf{x} ; \theta)) \nabla f( \textbf{x} ; \theta).$$&lt;/div&gt;
&lt;p&gt;(i.e. the product of the summed difference and the change in our estimated function &lt;span class="math"&gt;\(f(\textbf{x}; \theta)\)&lt;/span&gt; with respect to a change in &lt;span class="math"&gt;\(\theta\)&lt;/span&gt;)&lt;/p&gt;
&lt;h3&gt;Optimization, Gradient Descent&lt;/h3&gt;
&lt;p&gt;In thinking of our loss function as a terrain, we want the coordinates that reaches the lowest valley.&lt;/p&gt;
&lt;p&gt;We start at coordinates &lt;span class="math"&gt;\(\theta_0\)&lt;/span&gt; and ask, how do we find the deepest valley? Intuitively, a natural step would to go in the direction with the steepest incline by a small &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; sized step, &lt;span class="math"&gt;\(-\alpha \nabla_{\theta}{\mathcal L}\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Taking the step, we arrive at a new coordinate &lt;span class="math"&gt;\(\theta_1\)&lt;/span&gt;. Repeating this process choose the direction with the steepest decline until we reach our destination&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\theta_{n+1} = \theta_{n} - \alpha \nabla_{\theta}{\mathcal L}\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Backpropagation&lt;/h3&gt;
&lt;p&gt;Going back to the XOR problem we have&lt;/p&gt;
&lt;div class="math"&gt;$$\textbf{x} \rightarrow f(\textbf{W}^T\textbf{x}) = \textbf{h}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\textbf{h} \rightarrow g(\textbf{w}^T \textbf{h}) \rightarrow \textbf{w}^T f(\textbf{W}^T\textbf{x} ) = y.$$&lt;/div&gt;
&lt;p&gt;The parameter &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; is made up of different weights &lt;span class="math"&gt;\(\textbf W\)&lt;/span&gt; and &lt;span class="math"&gt;\(\textbf w\)&lt;/span&gt; that the network will need to learn.&lt;/p&gt;
&lt;p&gt;Thus &lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\nabla_{x} \mathcal L &amp;amp;= \frac{\partial \mathcal L}{\partial y} \\
&amp;amp;= \frac{\partial y}{\partial (\textbf w^T \textbf h)} \\
&amp;amp;= \frac{\partial (\textbf w^T \textbf h)}{\partial h} \\
&amp;amp;= \frac{\partial h}{\partial (\textbf W ^T \textbf x)} \\
&amp;amp;= \frac{\partial (\textbf W^T \textbf x)}{\partial x}
\end{aligned}$$&lt;/div&gt;
&lt;div class="math"&gt;$$(y - y^*) \textbf w  f'(.) \textbf W$$&lt;/div&gt;
&lt;p&gt;where y is our predicted value, &lt;span class="math"&gt;\(y^*\)&lt;/span&gt; is the true value.&lt;/p&gt;
&lt;p&gt;So &lt;/p&gt;
&lt;div class="math"&gt;$$\nabla_{w} \mathcal L = \frac{\partial \mathcal L}{\partial y}
\frac{\partial y}{\partial (\textbf w^T \textbf h)}
\frac{\partial (\textbf w^T \textbf h)}{\partial \textbf w} = (y - y^*)  \textbf h $$&lt;/div&gt;
&lt;p&gt;and &lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
\nabla_{W} \mathcal L &amp;amp;= \frac{\partial \mathcal L}{\partial y} \frac{\partial y}{\partial (\textbf w^T \textbf h)}
\frac{\partial (\textbf w^T \textbf h)}{\partial h}
\frac{\partial h}{\partial (\textbf W ^T \textbf x)}
\frac{\partial (\textbf W^T \textbf x)}{\partial W} \\
&amp;amp;= (y - y^*) \textbf w f'(\textbf W ^T \textbf x)\textbf x
\end{aligned}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial \mathcal L}{\partial y} = (y - y^*)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial (\textbf w^T \textbf h)}{\partial h} = \textbf w$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial h}{\partial (\textbf W ^T \textbf x)} = f'(\textbf W ^T \textbf x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{\partial (\textbf W^T \textbf x)}{\partial x}= \textbf W$$&lt;/div&gt;
&lt;h3&gt;Activation Function&lt;/h3&gt;
&lt;p&gt;The most common non-linear function used in modern neural networks is the ReLU &lt;/p&gt;
&lt;div class="math"&gt;$$f(z) = \max(0, z)$$&lt;/div&gt;
&lt;p&gt;or variations of it. &lt;/p&gt;
&lt;p&gt;Its derivative &lt;/p&gt;
&lt;div class="math"&gt;$$f'(z) = \max(0, 1)$$&lt;/div&gt;
&lt;p&gt;is easy to compute even though it is non differentiable at 0.&lt;/p&gt;
&lt;p&gt;The sigmoid function &lt;/p&gt;
&lt;div class="math"&gt;$$g(z) = \frac{1}{1 + \exp(-z)}$$&lt;/div&gt;
&lt;p&gt; is used in binary classification problems with derivative &lt;/p&gt;
&lt;div class="math"&gt;$$g'(z) = g(z)(1 - g(z))$$&lt;/div&gt;
&lt;h2&gt;Numpy Implementation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; A  B | XOR(A,B)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-----------------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; |     &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;-----------------&lt;/span&gt;
 &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; non-linear function &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dx_sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;sigmoid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maximum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dx_relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loss_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# 100 iterations &lt;/span&gt;
&lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;

&lt;span class="n"&gt;input_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;output_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="c1"&gt;# learning rate&lt;/span&gt;

&lt;span class="n"&gt;hidden_dim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_dim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_dim&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uniform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hidden_dim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_dim&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;activation_fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relu&lt;/span&gt;
&lt;span class="n"&gt;dx_activation_fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dx_relu&lt;/span&gt;


&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# forward pass&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2) x (2, 2) -&amp;gt; (4, 2)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;fc1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;activation_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;# (4, 2) x (2, 1) ==&amp;gt; (4, 1)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loss_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Loss: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.6f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  Step: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;iterations&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;## backward pass &lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;#(4x1)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;delta_hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dx_activation_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="c1"&gt;## gradient descent&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;grad_w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;grad_w&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;grad_W&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delta_hidden&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;grad_W&lt;/span&gt;



&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000012&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000003&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000001&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000001&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt;  &lt;span class="n"&gt;Step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prediction&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;predicted &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;.5f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; =&amp;gt; true &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;0.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;1.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;1.00000&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;predicted&lt;/span&gt; &lt;span class="mf"&gt;0.00084&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.85018314&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mf"&gt;0.80808135&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;0.85056309&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.80776054&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mf"&gt;1.1756913&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.23749876&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;plot&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mpl_toolkits.mplot3d&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Axes3D&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;xorNet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fc1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;

&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;splot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;surface plot of the xor outputs of&lt;/span&gt;
&lt;span class="sd"&gt;    the self.net for a mesh grid inputs of a and b:&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;meshgrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xorNet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nticks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inferno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;&lt;span class="c1"&gt;#edgecolor=&amp;#39;none&amp;#39;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;azim&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_yticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zticks&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_zlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XOR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;ax3d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;projection&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;splot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax3d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="xor-relu-soln" src="images/xor-relu-soln.jpg"&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Machine Learning"></category><category term="Machine Learning"></category></entry><entry><title>Password Store</title><link href="/password-store.html" rel="alternate"></link><published>2020-08-07T00:00:00+01:00</published><updated>2020-09-02T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-07:/password-store.html</id><summary type="html">&lt;p&gt;After taking more than a few hours to reset my Pass for iOS repository on my
phone, I thought it would be good to write a short guide to setting one up.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href="https://github.com/yishilin14/asc-key-to-qr-code-gif"&gt;official Pass for iOS
Wiki&lt;/a&gt; to see alternative
methods. Here I only explain one sequence of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After taking more than a few hours to reset my Pass for iOS repository on my
phone, I thought it would be good to write a short guide to setting one up.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href="https://github.com/yishilin14/asc-key-to-qr-code-gif"&gt;official Pass for iOS
Wiki&lt;/a&gt; to see alternative
methods. Here I only explain one sequence of setting up a the repository.&lt;/p&gt;
&lt;p&gt;Assuming your password store is already set up with a local git repository,
create a remote and hidden repository on github. &lt;/p&gt;
&lt;p&gt;Generate a new ssh key pair for cloning into the remote repository:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;puttygen -t rsa -b 2048 -O private-openssh -o pass_for_ios.key&lt;/code&gt; and &lt;code&gt;puttygen
pass_for_ios.key -C "Pass for iOS" -O public-openssh -o pass_for_ios.pub&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Importing ASCII-armored keys&lt;/h2&gt;
&lt;p&gt;Clone into this repo to use the asc2qr.sh script
&lt;code&gt;https://github.com/4bitfocus/asc-key-to-qr-code&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;(I tried using &lt;code&gt;https://github.com/yishilin14/asc-key-to-qr-code-gif&lt;/code&gt;
recommended by the guide but it didn't work)&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;asc2qr.sh pass_for_ios.key&lt;/code&gt; to generate Q1.png qr image which encodes your
ssh key.  Use it as your authentication method.&lt;/p&gt;
&lt;p&gt;Similarly for your PGP keys, both public and private, use the script to
generate QR images to import your PGP keys to the app.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;git repository url:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh://git@github.com/&lt;username&gt;/&lt;repo-name&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;branch name:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;username&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Authentication method&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SSH Key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Remember to exclude the &lt;code&gt;.git&lt;/code&gt; from the repo name&lt;/p&gt;
&lt;p&gt;That should be all :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;resetting ssh passphrase&lt;/strong&gt;
&lt;code&gt;ssh-keygen -f ~/.ssh/pass_for_ios.key -p&lt;/code&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>An OpenAI Challenge</title><link href="/xor-lstm.html" rel="alternate"></link><published>2020-08-04T00:00:00+01:00</published><updated>2020-08-04T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-08-04:/xor-lstm.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Problem Statement:&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Train an LSTM to solve the XOR problem: that is, given a sequence of bits,
determine its parity. The LSTM should consume the sequence, one bit at a time,
and then output the correct answer at the sequence’s end. &lt;/p&gt;
&lt;p&gt;Test the two approaches below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a dataset …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Problem Statement:&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Train an LSTM to solve the XOR problem: that is, given a sequence of bits,
determine its parity. The LSTM should consume the sequence, one bit at a time,
and then output the correct answer at the sequence’s end. &lt;/p&gt;
&lt;p&gt;Test the two approaches below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a dataset of random 100,000 binary strings of length 50. Train the
  LSTM; what performance do you get?&lt;/li&gt;
&lt;li&gt;Generate a dataset of random 100,000 binary strings, where the length of each
  string is independently and randomly chosen between 1 and 50. Train the LSTM.
  Does it succeed? What explains the difference?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LSTM networks have been used with success on sequential data. &lt;/p&gt;
&lt;p&gt;A great introduction to recurrent neural networks, specifically LSTM (long
short-term memory) networks can be found reading through Chris Olah's
explanation on &lt;a href="https://colah.github.io/posts/2015-08-Understanding-LSTMs/"&gt;understanding
LSTMs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the problem statement it specifies "The LSTM should consume the sequence,
one but at a time &amp;hellip;"&lt;/p&gt;
&lt;p&gt;As we are considering sequential data it seems that an LSTM would be a good
architectural choice in training a neural network to learn the parity of
a sequence of bits. &lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;strong&gt;Parity.&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The parity of a sequence checks the number of 1-bits. In our case we will
consider odd-parity, the function returning 1 if the number of bits in
a sequence is odd, 0 if even.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Parity function.&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The function takes in a sequence of bits and returns the parity bit of the
sequence. Returning 1 if the sequence contains an odd amount of 1-bits,
0 otherwise.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The parity function can be written as &lt;/p&gt;
&lt;div class="math"&gt;$$f(\textbf{x}) = x_1 \oplus x_2 \oplus \ldots \oplus x_n$$&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(\oplus\)&lt;/span&gt; is the XOR function defined by the table below&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;A &lt;span class="math"&gt;\(\oplus\)&lt;/span&gt; B&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;functools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="mi"&gt;55&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# parity check, function = xor, acc = 0 sequece, 0s and 1s&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bitstring     |  parity &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;seq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  |    &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;bitstring&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;parity&lt;/span&gt; 
&lt;span class="o"&gt;-------------------------&lt;/span&gt;
&lt;span class="mi"&gt;001011110010&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trace_xor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    shows the intermediate steps of &lt;/span&gt;
&lt;span class="sd"&gt;    xor function on &lt;/span&gt;
&lt;span class="sd"&gt;    a sequence&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; XOR &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;


&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foldl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trace_xor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;XOR&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The middle column corresponds to our bit string we want to check. Notice the
left column is the previous result from XOR(a, b). As a consequence, the final
result only depends on XOR of the previously returned result. In our example the
last bit of our sequence being 1 and the previously returned XOR result, 0. &lt;/p&gt;
&lt;h2&gt;Experiment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generating parity data &lt;/li&gt;
&lt;li&gt;Training and evaluating LSTM&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.nn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;nn&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.utils.data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;data&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;torch.utils.data&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;
&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cuda&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Data&lt;/span&gt;
&lt;span class="n"&gt;TRAINING_SIZE&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;BIT_LEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
&lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Model Parameters&lt;/span&gt;
&lt;span class="n"&gt;INPUT_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;HIDDEN_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;NUM_LAYERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Training Parameters&lt;/span&gt;
&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;EPOCHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;LEARNING_RATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt; &lt;span class="c1"&gt;# DEFAULT ADAM 0.001&lt;/span&gt;

&lt;span class="n"&gt;THRESHOLD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; GENERATE XOR DATA &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bit_len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bit_len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# we generate random integers and pad the bits with zeros&lt;/span&gt;
            &lt;span class="c1"&gt;# to mimic variable bit string lengths &lt;/span&gt;
            &lt;span class="c1"&gt;# padding with zeros as they do not provide information&lt;/span&gt;
            &lt;span class="c1"&gt;# TODO: vectorize instead of loop?&lt;/span&gt;
            &lt;span class="n"&gt;pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;

        &lt;span class="n"&gt;bitsum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cumsum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# if bitsum[i] odd: -&amp;gt; True&lt;/span&gt;
        &lt;span class="c1"&gt;# else: False&lt;/span&gt;
        &lt;span class="n"&gt;parity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitsum&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Module&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Linear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sigmoid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lengths&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;h0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hidden_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Forward propagate LSTM&lt;/span&gt;
        &lt;span class="n"&gt;out_lstm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
        &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_lstm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INPUT_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HIDDEN_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NUM_LAYERS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;criterion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BCELoss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;optimizer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;optim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Adam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LEARNING_RATE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# train&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;train&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;train_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRAINING_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                    &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;total_step&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_loader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Training...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;epoch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOCHS&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_loader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Forward pass&lt;/span&gt;
            &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Backward and optimize&lt;/span&gt;
            &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zero_grad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatTensor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Epoch [&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;], Step [&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;], Loss: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;, Accuracy: &lt;/span&gt;&lt;span class="si"&gt;{:.3f}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; 
                       &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epoch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EPOCHS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;THRESHOLD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EARLY STOPPING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;total_step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;valid_accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;validation accuracy: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_accuracy&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valid_accuracy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;THRESHOLD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EARLY STOPPING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;valid_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VALIDATION_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BIT_LEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VARIABLE_LEN&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                        &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;
                        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;valid_loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;no_grad&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;Training&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7235&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.375&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6935&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.460&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;750&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6767&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.618&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.368&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1250&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4462&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.873&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Step&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Loss&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0427&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.000&lt;/span&gt;
&lt;span class="o"&gt;------------------------------------------------------------&lt;/span&gt;
&lt;span class="n"&gt;EARLY&lt;/span&gt; &lt;span class="n"&gt;STOPPING&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Model Summary&lt;/h3&gt;
&lt;p&gt;In viewing neural network architectures as function composition we see
recurrent neural networks can be viewed as a reduce operation on an input
sequence.&lt;/p&gt;
&lt;p&gt;&lt;img alt="rnn" src="images/RNN-encoding.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Considering one bit at a time and remembering the previous partial result in
a recurrent or multi-step architecture reduces the problem of learning k-bit
parity to the simple one of learning just 2-bit parity.&lt;/p&gt;
&lt;h3&gt;The Architecture&lt;/h3&gt;
&lt;p&gt;Below is a diagram showing the architecture of the LSTM.&lt;/p&gt;
&lt;p&gt;&lt;img alt="xor lstm" src="images/xor_lstm.jpg"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;

&lt;span class="n"&gt;XORLSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lstm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;LSTM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;Linear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bias&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;Sigmoid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;XOR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sampleX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Cumulative parity of sample bit&lt;/strong&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sampleX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sampleY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Machine Learning"></category><category term="Statistics"></category><category term="AI"></category><category term="Machine Learning"></category></entry><entry><title>SVD</title><link href="/svd.html" rel="alternate"></link><published>2020-07-25T00:00:00+01:00</published><updated>2021-04-24T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-07-25:/svd.html</id><summary type="html">&lt;p&gt;Take an &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt;  matrix &lt;span class="math"&gt;\(X\)&lt;/span&gt;. The factorized form using singular value
decomposition is &lt;span class="math"&gt;\(U\Sigma V^T\)&lt;/span&gt; where &lt;span class="math"&gt;\(U\)&lt;/span&gt; is a &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt; matrix, &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; and
&lt;span class="math"&gt;\(V^T\)&lt;/span&gt; are &lt;span class="math"&gt;\(m \times m\)&lt;/span&gt; matrices.&lt;/p&gt;
&lt;h4&gt;Properties of the matrices, &lt;span class="math"&gt;\(U\)&lt;/span&gt;, &lt;span class="math"&gt;\(V\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Both &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V\)&lt;/span&gt; are orthogonal …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Take an &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt;  matrix &lt;span class="math"&gt;\(X\)&lt;/span&gt;. The factorized form using singular value
decomposition is &lt;span class="math"&gt;\(U\Sigma V^T\)&lt;/span&gt; where &lt;span class="math"&gt;\(U\)&lt;/span&gt; is a &lt;span class="math"&gt;\(n \times m\)&lt;/span&gt; matrix, &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; and
&lt;span class="math"&gt;\(V^T\)&lt;/span&gt; are &lt;span class="math"&gt;\(m \times m\)&lt;/span&gt; matrices.&lt;/p&gt;
&lt;h4&gt;Properties of the matrices, &lt;span class="math"&gt;\(U\)&lt;/span&gt;, &lt;span class="math"&gt;\(V\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;Both &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V\)&lt;/span&gt; are orthogonal matrices, &lt;span class="math"&gt;\(U^T U = I\)&lt;/span&gt;,  &lt;span class="math"&gt;\(V^T V = V V^T = I\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Singular values:&lt;/h4&gt;
&lt;p&gt;The diagonal matrix &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt; has all entries off the main diagonal as zero. 
&lt;span class="math"&gt;\(\sigma_{11} \geq \sigma_{22} \geq \ldots \geq \sigma_{nn} \geq 0\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;low rank approximation:&lt;/h4&gt;
&lt;p&gt;The best approximation for &lt;span class="math"&gt;\(X \in p\)&lt;/span&gt; dimensions, &lt;span class="math"&gt;\(p &amp;lt; n\)&lt;/span&gt; is &lt;span class="math"&gt;\(U_p\Sigma_p V_p^T\)&lt;/span&gt;, the first &lt;span class="math"&gt;\(p\)&lt;/span&gt; columns of &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Principal Component Analysis&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X = U\Sigma V^T\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(U\Sigma = XV\)&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Other forms:&lt;/h4&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X^T X = (U\Sigma V^T)^T U\Sigma V^T = V\Sigma U^TU\Sigma V^T = V\Sigma^2 V^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((X^T X)^{-1} = V\Sigma^{-2} V^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(X(X^T X)^{-1}X^T = U\Sigma V^T V\Sigma^{-2}V^T V\Sigma U^T = UU^T\)&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Eigendecomposition&lt;/h3&gt;
&lt;p&gt;For symmetric &lt;span class="math"&gt;\(A = X^T\)&lt;/span&gt;, &lt;span class="math"&gt;\(X = V\Sigma^2 V^T\)&lt;/span&gt;, and
&lt;span class="math"&gt;\(B = XX^T = U\Sigma V^T(V\Sigma U^T) = U\Sigma^2U^T\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The eigenvalues of &lt;span class="math"&gt;\(A\)&lt;/span&gt; and &lt;span class="math"&gt;\(B\)&lt;/span&gt; are &lt;span class="math"&gt;\(\Sigma\Sigma^T\)&lt;/span&gt; and &lt;span class="math"&gt;\(\Sigma^T\Sigma\)&lt;/span&gt; respectively with eigenvectors &lt;span class="math"&gt;\(U\)&lt;/span&gt; and &lt;span class="math"&gt;\(V^T\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="nd"&gt;@v&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="nd"&gt;@u&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Machine Learning"></category><category term="Statistics"></category><category term="Machine Learning"></category></entry><entry><title>Fooled by Randomness</title><link href="/fooled-by-randomness.html" rel="alternate"></link><published>2020-06-29T17:36:36+01:00</published><updated>2020-06-29T17:36:36+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-29:/fooled-by-randomness.html</id><summary type="html">&lt;p&gt;&amp;hellip; that which came with the help of luck could be taken away by luck
&amp;hellip; things that come with little help from luck are more resistant to
randomness.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Skewness&lt;/em&gt; issue; it doesn't matter how frequently something succeeds if
failure is too costly.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;coup de foudre&lt;/em&gt;, a sudden intense infatuation.&lt;/p&gt;
&lt;p&gt;Nero's trading …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&amp;hellip; that which came with the help of luck could be taken away by luck
&amp;hellip; things that come with little help from luck are more resistant to
randomness.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Skewness&lt;/em&gt; issue; it doesn't matter how frequently something succeeds if
failure is too costly.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;coup de foudre&lt;/em&gt;, a sudden intense infatuation.&lt;/p&gt;
&lt;p&gt;Nero's trading style; extreme risk aversion, I love taking small losses, I just
need my winners to be large.&lt;/p&gt;
&lt;p&gt;Nero believes that risk-conscious hard work and discipline can lead someone to
achieve a comfortable life with high probability. Beyond that it is all
randomness; either by taking enormous risks, or by being extraordinarily lucky.
Mild success can be explainable by skills and labour. Wild success is
attributed to variance.&lt;/p&gt;
&lt;p&gt;Most people prefer to make $70k when others around them are making $60k than
making $80k when others are making $90k.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Serotonin and Randomness&lt;/em&gt;, &lt;em&gt;Your dentist is rich, very rich&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Alternative History.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;The quality of a decision cannot be judged based on its
outcome. (Judge decisions based on the costs of the alternative)&lt;/p&gt;
&lt;p&gt;$10 million earned through Russian roulette does not have the same value as if
it were earned through artful practice of dentistry.&lt;/p&gt;
&lt;p&gt;There is a distinction between the mind of a pure mathematician thriving on
abstraction and that of a scientist consumed by curiosity. A mathematician is
absorbed by what goes into his head while a scientist searches into what is
outside of himself. (?)&lt;/p&gt;
&lt;p&gt;Heroes are heroes because they are heroic in behaviour not because they won or
lost.&lt;/p&gt;
&lt;p&gt;I can no longer visualize a realized outcome without referenced to the
nonrealized ones.&lt;/p&gt;
&lt;p&gt;[History] affects the way I would wish to think by referencing past events, by
being able to better instead; the ideas of others and leverage them, correct
the mental defects that seem to block my ability to learn from others.&lt;/p&gt;
&lt;p&gt;Amnesic patients shows signs of learning without being stored in conscious
memory &amp;mdash; Claparede pin handshake experiment. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;(non)Conscious/declarative memory&lt;/em&gt;. Much of the risk avoidance that comes form experiences is part of the
second.&lt;/p&gt;
&lt;p&gt;A mistake is not something to be determined after the fact, but in the light of
the information until that point.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On the difference between noise and information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is not how likely an event is to happen that matters but
how much is made is when it happens. How frequent the profit is irrelevant; it
is the magnitude of the outcome that counts.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Popper&lt;/em&gt;, two types of theories: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;theories known to be wrong and rejected (falsified)&lt;/li&gt;
&lt;li&gt;theories that have not been falsified yet&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The matter of knowledge and discovery is not so much in dealing with what we
know as in dealing with what we do not know.&lt;/p&gt;
&lt;p&gt;In an &lt;em&gt;open society&lt;/em&gt; no permanent truth is held to exist; allowing for
counter-ideas to emerge.&lt;/p&gt;
&lt;p&gt;I will use inductive methods and statistics to make aggressive bets, but I will
not use them to manage my risks and exposure. (?)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CNBC At Lunchtime&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have experienced leaps of joy over results that I knew was mere noise, and
bouts of unhappiness over results that did not carry the slightest degree of
statistical significance.&lt;/p&gt;
&lt;p&gt;Most of know &lt;em&gt;how we should behave&lt;/em&gt;. It is the execution that is the problem.
(Cigarette smoker)&lt;/p&gt;
&lt;p&gt;My lesson from Soros is to start every meeting by convincing everyone that we
are a bunch of idiots who know nothing and are mistake-prone, but happen to be
endowed with the rare privilege of knowing it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Attribution bias&lt;/em&gt;: Attributing success to skill and failures to randomness.
80% think they are above the median in many things&lt;/p&gt;
&lt;p&gt;Start stressing personal elegance at your next misfortune, Exhibit &lt;em&gt;sapere
vivere&lt;/em&gt; (know how to live) in all circumstances.&lt;/p&gt;
&lt;p&gt;Dress at your best on your execution day. The dignified attitude will make both
defeat and victory feel equally heroic. Try not to blame others of your fate,
even if they deserve blame. Never exhibit any self-pity. Do not complain. The
only article Lady Fortuna has no control over is your behaviour. Good Luck&lt;/p&gt;</content><category term="Book Notes"></category></entry><entry><title>Economics in One Lesson</title><link href="/economics-in-one.html" rel="alternate"></link><published>2020-06-25T00:00:00+01:00</published><updated>2020-06-25T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-25:/economics-in-one.html</id><summary type="html">&lt;h2&gt;Notes on Economics in One Lesson by Henry Hazlitt&lt;/h2&gt;
&lt;h3&gt;The Lesson&lt;/h3&gt;
&lt;p&gt;Fallacies of economics, the self-interest of man ad the tendency to see only
the immediate effects of a given policy (overlooking secondary consequences).&lt;/p&gt;
&lt;p&gt;The whole of economics can be reduced to a single lesson, and that lesson can
be …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Notes on Economics in One Lesson by Henry Hazlitt&lt;/h2&gt;
&lt;h3&gt;The Lesson&lt;/h3&gt;
&lt;p&gt;Fallacies of economics, the self-interest of man ad the tendency to see only
the immediate effects of a given policy (overlooking secondary consequences).&lt;/p&gt;
&lt;p&gt;The whole of economics can be reduced to a single lesson, and that lesson can
be reduced to a single sentence. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The art of economics consists in looking not merely at the immediate but at
the longer effects of any act or policy; it consists in tracing the
consequences of that policy not merely for one group but for all groups.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, the opposite error is possible. We ought to not concentrate &lt;em&gt;only&lt;/em&gt;
on the long-run results.&lt;/p&gt;
&lt;h3&gt;The Broken Window&lt;/h3&gt;
&lt;p&gt;A boy smashes a bakers window. Community members claim there's positive sum in
this scenario, The payment of the glazer (to fix the window) will allow him to
spend with other merchants, the smashed window will go on providing money and
employment &amp;mdash; The boy was a public benefactor. The public fails to see the
$ 50 the baker loses in repairs. The $ 50 would have gone towards a suit.&lt;/p&gt;
&lt;p&gt;WYSIWYG (What you see is what you get).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Confusing need with demand.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The more war destroys, the more it impoverishes, the greater is the post-war
need. But need is not demand.  &lt;/p&gt;
&lt;p&gt;Effective economic demand requires not merely need but corresponding
purchasing power. The needs of China today are greater than the USA, its
purchasing power and &lt;em&gt;new business&lt;/em&gt; that it can stimulate, are smaller.&lt;/p&gt;
&lt;p&gt;There's an increase in production for &lt;em&gt;particular products&lt;/em&gt; i.e. diversion of
demand Post war demand in most countries will shrink in absolute amount as
compared to pre-war demand as a result of post-war supply shrinking.&lt;br&gt;
Technological discoveries and advances during the war, may increase individual
or national productivity.&lt;/p&gt;
&lt;p&gt;The destruction of war will, it is true, divert post-war demand from some
channels into others.&lt;/p&gt;
&lt;p&gt;A certain number of people may continue to be deceived indefinitely regarding
their real economic welfare by rising wages and prices caused by an excess of
printed money.  The belief that a genuine prosperity can be brought about by a
"replacement demand" is a fallacy.&lt;/p&gt;
&lt;h3&gt;Public Work Means Taxes&lt;/h3&gt;
&lt;p&gt;With such public works (infrastructure), necessary for their own sake, and
defended on that ground alone, I am not here concerned. I am here concerned
with public works considered as a means of "providing employment" or of adding
wealth to the community that it would not otherwise have had.&lt;/p&gt;
&lt;p&gt;The bridge built will provide X jobs per year,  however, for a bridge costing
$Y, the taxpayers will lose $Y, which could have been spent on things they
needed.&lt;/p&gt;
&lt;p&gt;At best, a &lt;em&gt;diversion&lt;/em&gt; of jobs happened as a result of the project, more
bridges, fewer auto mobile workers, farmers. (I don't agree here) Essentially,
one thing has been created instead of another.&lt;/p&gt;
&lt;p&gt;The psychological benefit of government works are that men are seen to work on
the houses, people live in them and proudly show their friends through the
rooms.&lt;/p&gt;
&lt;p&gt;The author continues to argue against government projects for the sake of
&lt;em&gt;creating jobs&lt;/em&gt;, (An argument for UBI?)&lt;/p&gt;
&lt;p&gt;Increased in tax on corporations (hurting the ability to offset losses against
gains) leads to slower expansion and enterprise.&lt;/p&gt;
&lt;p&gt;With personal income, risk-taking shrinks (investing in markets?)&lt;/p&gt;
&lt;p&gt;The larger the percentage of the national income taken by taxes the greater the
deterrent to private production and employment. &lt;/p&gt;
&lt;h3&gt;Credit Diverts Production&lt;/h3&gt;
&lt;p&gt;Assuming non-inflationary government credit&lt;/p&gt;
&lt;p&gt;Farmer A and B. Farmer A can acquire a loan from private bank, less risk for
the bank as farmer A is reputable. Government hands loan to B as &lt;em&gt;he is denied
from the bank (due to likelihood of unable to pay back loan&lt;/em&gt;. In addition to
losses from incomplete payments, increased interest rates hurt A or farm prices
as the supply decreases (due to government credit)&lt;/p&gt;
&lt;p&gt;Governments are encouraged to take on risks &lt;em&gt;too great for private industry&lt;/em&gt;
with taxpayers' money. Where private loans risk their own or face losing
business (hmm...)&lt;/p&gt;
&lt;p&gt;Another illustration of the fallacy of seeing a special short term interest,
forgetting the general interest in the long run.&lt;/p&gt;
&lt;p&gt;Government loans or subsidies to business; taxing successful private business
in order to support unsuccessful ones. &lt;/p&gt;
&lt;h3&gt;Curse of Machinery&lt;/h3&gt;
&lt;p&gt;Smith's &lt;em&gt;The Wealth of Nations&lt;/em&gt;, Chapter 1, without machinery, a workman could
hardly make one pin a day, &amp;hellip; with machinery he can make 4,8000 pins
a day. The fallacy is thinking the jobs lost due to machinery and
overproduction  &amp;hellip; may become chronic (&lt;em&gt;Recent economic changes&lt;/em&gt; - David
A. Wells).&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Elasticity&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;A fall in the price of overcoats causes a larger total amount of money to be
spent on overcoats than previously, then more people may be employed even in
making overcoats than before the new labour-saving machine was introduced.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;In the case of no surplus of overcoats, just a reduced price for them, the
extra $ z leftover can be spent on something else.&lt;/p&gt;
&lt;p&gt;The result of the machine is to increase &lt;em&gt;production&lt;/em&gt;, to raise the standard of
living and increase economic welfare.&lt;/p&gt;
&lt;p&gt;Technology helps increase &lt;em&gt;voluntary&lt;/em&gt; unemployment, people can afford to work
less hours. Children and over-aged aren't required to work.&lt;/p&gt;
&lt;p&gt;Machines increase money wages or, by reducing prices, increase the goods and
services that the same money can buy. Sometimes both.&lt;/p&gt;
&lt;h3&gt;Spread-The-Work Schemes&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Fallacy&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;there is a fixed amount of work to be done in the world, if we cannot add to
this work by thinking up more cumbersome ways, we can think of ways to
distribute it.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The case of cutting maximum hours, allowing additional people to be employed,
reduces the wages of the original employee. Furthermore, the purchase of more
leisure was probably not a &lt;em&gt;voluntary&lt;/em&gt; decision.&lt;/p&gt;
&lt;p&gt;In increasing hourly rate to compensate for a shorter working week, an increase
in production costs may happen. A policy of monetary inflation, to enable
prices to rise so the increased hourly wages can be paid disguises &lt;em&gt;real&lt;/em&gt; wage
rates.&lt;/p&gt;
&lt;p&gt;The greatest downfall is the above fallacy. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"There is no limit to the amount of work to be done as long as any human need
or wish that work could fill remain unsatisfied"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Disbanding Troops and Bureaucrats&lt;/h3&gt;
&lt;p&gt;Argument for encouraging troops to become self-supporting civilians i.e.
integrated into normal civilian workforce.&lt;/p&gt;
&lt;p&gt;They (soldiers, policemen, firemen, street cleaners, health officers i.e. key
workers) make it possible for private industry to function in an atmosphere of
law, order, freedom and peace. But their justification consists in the utility
of their services. It does not consist in the "purchasing power" they possess
by virtue of being on the public payroll. &lt;/p&gt;
&lt;h3&gt;The Fetish of Full Employment&lt;/h3&gt;
&lt;p&gt;The economic goal of any nation, as of any individual, is to get the greatest
results with the least effort.&lt;/p&gt;
&lt;p&gt;Maximize production, employment merely the means.&lt;/p&gt;
&lt;p&gt;We can easily have full employment without full production.&lt;/p&gt;
&lt;p&gt;The progress of civilization has meant the reduction of employment, not its
increase. (Abolished child labour)&lt;/p&gt;
&lt;h3&gt;The Drive For Exports&lt;/h3&gt;
&lt;p&gt;Exports and imports must equal each other in the long run.&lt;/p&gt;
&lt;p&gt;Deciding to increase our exports, also decide to increase imports &amp;hellip;
foreign exchange&lt;/p&gt;
&lt;p&gt;National government loans (upside to loans not being repaid) -&amp;gt; ???&lt;/p&gt;
&lt;p&gt;An export subsidy is a clear case of giving a foreigner something for nothing.
It is another case of trying to get rich by giving things away.&lt;/p&gt;
&lt;p&gt;Bad loans and export subsidies may have negative first-order effects, but
greater long-run outcomes. (?)&lt;/p&gt;
&lt;h3&gt;"Parity" Prices&lt;/h3&gt;
&lt;p&gt;Example, rise in farmer prices so he can afford industrial equipment. Prices
should rise relative to each other. &lt;/p&gt;
&lt;p&gt;The farmers get more for their crops thus purchase power increases, more
prosperous and buy more for industry products.&lt;/p&gt;
&lt;p&gt;However, the increased commodity prices bump up the prices of goods related.
Wheat and bread. The city bread buyer thus loses purchase power, no net
industry gain.&lt;/p&gt;
&lt;p&gt;The agricultural increase in business leads to city business decrease.&lt;/p&gt;
&lt;p&gt;The farmer reducing production for "parity" produces less, his income does not
increase in proportion to his prices.  &lt;/p&gt;
&lt;p&gt;So the alleged benefits of still another scheme evaporate as soon as we trace
not only its immediate effects on a special group but its long-run effects on
everyone.&lt;/p&gt;
&lt;h3&gt;Saving the X Industry&lt;/h3&gt;
&lt;p&gt;Saving industry x as a generalized parity argument/tariff.&lt;/p&gt;
&lt;p&gt;In order that new industries may grow fast enough it is necessary for some old
to be allowed to shrink or die for the sake of releasing capital and labour for
new industries (Horse and buggy trade)&lt;/p&gt;
&lt;h3&gt;"Stabilizing" Commodities&lt;/h3&gt;
&lt;p&gt;Government intervention -&amp;gt; keeps high-cost producers in the game, causing
inefficiency in the market. Without intervention, the inefficient producers are
driven out, the efficient ones can expand and produce at a lower cost. Thus
raising more capital for the economy. (?) (Advocating for monopolies?)&lt;/p&gt;
&lt;h3&gt;Government Price-Fixing&lt;/h3&gt;
&lt;p&gt;Argument for price fixing, keeping costs down so everyone can get a fair share
than only the people with purchasing power allowed.&lt;/p&gt;
&lt;h3&gt;Minimum Wage Laws&lt;/h3&gt;
&lt;p&gt;Minimum wage caps the amount of man power by not being able to employ workers
that are worth less than minimum wage. For a low wage you substitute for
unemployment. (hmm...)&lt;/p&gt;
&lt;p&gt;The benefit of minimum wage is for workers being paid below market value.&lt;/p&gt;
&lt;p&gt;Argument for scrapping minimum wage states that industry X should be priced out
if it can't pay above minimum wage. However, more jobs lost (whole industry)
more than it produces.&lt;/p&gt;
&lt;p&gt;The best way to raise wages is to raise labour productivity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increase in capital accumulation (new machines to aid workers)&lt;/li&gt;
&lt;li&gt;New technology&lt;/li&gt;
&lt;li&gt;Efficient management&lt;/li&gt;
&lt;li&gt;Efficient and industrious workers&lt;/li&gt;
&lt;li&gt;Better education and training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The more he produces the more he increases community wealth, the more his
services are worth to consumers and employers hence the more he'll get paid.&lt;/p&gt;
&lt;h3&gt;Lessons Restated&lt;/h3&gt;
&lt;p&gt;Economics is a science recognising &lt;em&gt;secondary&lt;/em&gt; consequences and seeing
&lt;em&gt;general&lt;/em&gt; consequences.  &lt;/p&gt;
&lt;p&gt;There's no change in public taste/morals that would not hurt someone.  &lt;/p&gt;
&lt;p&gt;Less policemen, lawyers and judges without criminals (there'll be increase in
another field (?))&lt;/p&gt;
&lt;p&gt;Tariffs, destruction of machinery, restriction schemes: the insane doctrine of
wealth through scarcity.&lt;/p&gt;
&lt;p&gt;May always be privately true for any particular group of producers in isolation
but a doctrine which is publicly false.&lt;/p&gt;
&lt;p&gt;To see the problem as a whole, and not in fragments: that is the goal of
economic science.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;New Terminology&lt;/strong&gt; :)&lt;/p&gt;
&lt;h3&gt;Dictionary&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;Sophism&lt;/dt&gt;
&lt;dd&gt;A plausible but fallacious argument.&lt;/dd&gt;
&lt;dt&gt;Purchasing power&lt;/dt&gt;
&lt;dd&gt;the amount of goods and services that can be purchased with a unit of currency&lt;/dd&gt;
&lt;dt&gt;Impetus&lt;/dt&gt;
&lt;dd&gt;the force with which any body is driven or impelled; Momentum&lt;/dd&gt;
&lt;/dl&gt;</content><category term="blog"></category></entry><entry><title>sunset</title><link href="/sunset.html" rel="alternate"></link><published>2020-06-15T15:36:29+01:00</published><updated>2020-06-15T15:36:29+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-15:/sunset.html</id><summary type="html">&lt;p&gt;I've been thinking about sunsets recently and the lack of them &lt;a href=""&gt;at home.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Why in the East, was I blessed to witness spectacular sunsets daily and now left with only memories of orange-hazed skies?&lt;/p&gt;
&lt;h3&gt;Scattering&lt;/h3&gt;
&lt;p&gt;When white light passes through our atmosphere, gases in our atmosphere absorb and scatter the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been thinking about sunsets recently and the lack of them &lt;a href=""&gt;at home.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Why in the East, was I blessed to witness spectacular sunsets daily and now left with only memories of orange-hazed skies?&lt;/p&gt;
&lt;h3&gt;Scattering&lt;/h3&gt;
&lt;p&gt;When white light passes through our atmosphere, gases in our atmosphere absorb and scatter the shorter wavelength (blue and violet). The scattered blue light thus illuminates the sky.&lt;/p&gt;
&lt;h3&gt;Orange sky at night&amp;hellip;&lt;/h3&gt;
&lt;p&gt;The light travelling from the sun near the horizon passes through more atmosphere to reach the observer. Blue light scatters multiple times, leaving longer wavelengths visible &amp;mdash; the yellow, orange and reds found at sunrise and sunset.&lt;/p&gt;
&lt;h3&gt;Clouds &amp;amp; Particles&lt;/h3&gt;
&lt;p&gt;Particles larger than oxygen and nitrogen molecules cause a reduction in saturation hence rural sunsets appear more vibrant.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This was an excuse to post my sunset pics.  &lt;em&gt;Enjoy&lt;/em&gt; &lt;strong&gt;:)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="New College 19th Floor view" src="/images/19th.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="motorbiking" src="/images/moto.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Langkawi" src="/images/langkawi.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paknai" src="/images/paknai.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paknai II" src="/images/paknaii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden" src="/images/garden.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden II" src="/images/gardenii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Garden III" src="/images/gardeniii.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="watershed I" src="/images/shed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="watershed II" src="/images/watershed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Last HK sunset" src="/images/last.jpg"&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>James Baldwin</title><link href="/baldwin.html" rel="alternate"></link><published>2020-06-06T00:00:00+01:00</published><updated>2020-06-06T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-06:/baldwin.html</id><summary type="html">&lt;p&gt;My highlights from his Paris Review interview&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; Do you have a reader in mind when you write?&lt;br&gt;
&lt;strong&gt;B:&lt;/strong&gt; No, you can't have that.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; So it's quite unlike preaching?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Entirely. The two roles are completely unattached. When you are standing
in the pulpit, you must sound as though …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My highlights from his Paris Review interview&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; Do you have a reader in mind when you write?&lt;br&gt;
&lt;strong&gt;B:&lt;/strong&gt; No, you can't have that.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; So it's quite unlike preaching?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Entirely. The two roles are completely unattached. When you are standing
in the pulpit, you must sound as though you know what you're talking about.
When you're writing, you're trying to find out something which you don't know.
The whole language of writing for me is finding out something you don't want to
know, what you don't want to find out. But something forces you to anyway.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; For me it's like a journey, and the only thing you know that if when the
book is over, you are prepared to continue &amp;mdash; you haven't cheated.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; What would be cheating?&lt;br&gt;
&lt;strong&gt;B:&lt;/strong&gt; Avoiding. Lying.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; An essay is not simpler, though it may seem so. An essay is essentially
an argument. The writer's point of view in an essay is always absolutely clear.
The writer is trying to make the readers see something, trying to convince them
of something. In a novel or a play you're trying to &lt;em&gt;show&lt;/em&gt; them something. The
risks, in any case, are exactly the same.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; What are your first drafts like?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; They are overwritten. Most of the rewrite, then, is cleaning. Don't
describe it, show it. That's what I try to teach all young writers &amp;mdash;take
it out! Don't describe a purple sunset, make me see that it is purple.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; As your experience about writing accrues, what would you say increases
with knowledge?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; You learn how little you know. It becomes much more difficult because
the hardest thing in the world is simplicity. And the most fearful thing, too.
It becomes more difficult because you have to strip yourself of all disguises,
some of which you didn't know you had. You want to write a sentence as clean as
a bone. That is the goal.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Europe is no longer a frame of reference, a standard-bearer, the classic
model for literature and for civilization. It's not the measuring stick. There
are other standards in the world. It's a fascinating time to be living. There's
a whole wide world which isn't now as it was when I was younger. When I was a
kid the world was white, for all intents and purposes, and now its struggling
to &lt;em&gt;remain&lt;/em&gt; white &amp;mdash;a very different thing.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Well, I refuse to. Perhaps the turning point in one's life is realizing
that to be treated like a victim is not necessarily become one.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; Are you suggesting they are less concerned, somehow, with social
injustice?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; No, no, you see, I don't want to make that kind of dichotomy. I'm not
asking that anybody get on picket lines or take positions. That is entirely a
private matter. What I'm saying has to do with the concept of the self, and the
nature of self-indulgence which seems to me to be terribly strangling, and so
limited it finally becomes sterile.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; You seem very troubled &amp;mdash;but not by death?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Yes, true, but not at all by death. I'm troubled over getting my work
done and over all the things I've not earned. It's useless to be troubled by
death, because then, of course, you can't live at all.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; What do you tell younger writers who come to you with the usual
desperate question: How do I become a writer?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Write. Find a way to keep alive and write. There is nothing else to say.
If you are going to be a writer there is nothing I can say to stop you; if
you're not going to be a writer nothing I can say that will help you. What you
really need at the beginning is somebody to let you know that the effort is
real.   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; Can you discern talent within someone?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; Talent is insignificant. I know a lot of talented ruins. Beyond talent
lie all the usual words: discipline, love, luck, but most of all, endurance.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;I:&lt;/strong&gt; How does it strike you that in many circles James Baldwin is known as a
prophetic writer?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B:&lt;/strong&gt; I don't try to be prophetic, as I don't sit down to write literature. It
is simply this: a writer has to take all the risks of putting down what he
sees. No one can tell him about that. No one can control that reality. It
reminds me of something Pablo Picasso was supposed to have said to Gertrude
Stein while he was painting her portrait. Gertrude said, "I don't look like
that." And Picasso replied, "You will." And he was right.  &lt;/p&gt;</content><category term="Book Notes"></category></entry><entry><title>Dear me</title><link href="/dear-me.html" rel="alternate"></link><published>2020-06-05T00:00:00+01:00</published><updated>2020-06-05T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-05:/dear-me.html</id><summary type="html">&lt;p&gt;Keep up the good school work. It's vital that you build a strong foundation for
the sciences, a desire to never stop learning. Mathematics &amp;mdash; It'll open
doors and give you options just like you originally planned. But never forget
about others; people are important, each interaction moulds us. &lt;/p&gt;
&lt;p&gt;Take risks …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Keep up the good school work. It's vital that you build a strong foundation for
the sciences, a desire to never stop learning. Mathematics &amp;mdash; It'll open
doors and give you options just like you originally planned. But never forget
about others; people are important, each interaction moulds us. &lt;/p&gt;
&lt;p&gt;Take risks. Ask for more. Feel rejection early on. You'll come to a point in
which you will fail. School is a microcosm, a finite game in an infinite one.
Yes, the lessons learned and grades obtained will decide the paths you can
take. However, it isn't the be-all and end-all. You know this already. &lt;/p&gt;
&lt;p&gt;I think about if you should take this on board, whether to explore more outside
school. Make things whilst you're young. Write. Draw. Create. Be aware of
failure but don't shy away from it. Calculated, not dismissive and wholly, risk
averse.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Writing to my younger self. If, somehow you we're able to read my advice, what
would become of me today? &lt;/p&gt;
&lt;p&gt;It reminds me of Ted Chiang's shorts, Story of Your Life and the Merchant and
the Alchemist's gate, both exploring the nature of time. How, in the first
story the narrator learns to perceive time not in a linear, sequential order
but as "a refracted ray of light must know all possible paths to travel along
the minimal path". &lt;/p&gt;
&lt;p&gt;And in the second,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Past and future are the same, and we cannot change either, only know them
more fully.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;... &lt;/p&gt;
&lt;h3&gt;Future me,&lt;/h3&gt;
&lt;p&gt;Pay attention to what has been said to younger us. I trust you. I trust in the
foundation our younger self has laid. I trust in the decisions we make,
whatever the outcome.&lt;/p&gt;
&lt;p&gt;What's the point of hindsight? &lt;/p&gt;
&lt;p&gt;I, writing this, currently believe there's only one thing I regret so far. If
one can learn from their supposed mistake, then I would like to think regret
doesn't fit. There's still time, only now you know what it feels to lose.  In
all seriousness. I hope whatever you're doing, wherever you are, that you have
stuck to our values.&lt;/p&gt;
&lt;p&gt;Your nails better be pristine :)&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Revolution of our Time</title><link href="/revolution-of-our-time.html" rel="alternate"></link><published>2020-06-03T00:00:00+01:00</published><updated>2020-06-03T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-06-03:/revolution-of-our-time.html</id><summary type="html">&lt;p&gt;"But half of the T-shirts I own are black &amp;hellip;" &lt;/p&gt;
&lt;p&gt;I didn't give much thought to the political situation before flying out.
Flights were booked and in my mind, Hong Kong was home for the next 10 months.
Protests simmering over summer weren't going away. One side, had to give. &lt;/p&gt;
&lt;p&gt;An …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"But half of the T-shirts I own are black &amp;hellip;" &lt;/p&gt;
&lt;p&gt;I didn't give much thought to the political situation before flying out.
Flights were booked and in my mind, Hong Kong was home for the next 10 months.
Protests simmering over summer weren't going away. One side, had to give. &lt;/p&gt;
&lt;p&gt;An aptly named Special Administration Region, Hong Kong had been surrendered by
China to the British on a 99-year lease. In 1997, the transition began with the
establishment of the "One country, two systems"  policy, lasting until 2047 in
which the handover would be complete. During this period, outlined in Chapter
1, Article 5 of the constitution:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The socialist system and policies shall not be practiced in the Hong Kong
Special Administrative Region, and the previous capitalist system and way of
life shall remain unchanged for 50 years.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The erosion of this common law happens while our governments and large
institutions ignore.&lt;/p&gt;
&lt;p&gt;I remember 3 years prior, my first time as a sightseer on the A11 bus from the
Chek Lap Kok Airport. As we passed across the Tsing Ma bridge, high-rise
buildings emerged in the distance, growing as we ventured further into the
heart of Hong Kong. I looked out of the window and up. Monolithic tower blocks
loomed over me like the opening scene of Akira. Shouldered together in clusters
they formed mansions, estates and homes. Squeezed between a supermarket and a
medicinal shop, steam waft from the bamboo baskets of a food vendor. In the
same frame, meter-wide circular trays sat outside a dried food shop, scattered
with shrimp. The smell, off putting for some, memorable to say the least.&lt;/p&gt;
&lt;p&gt;Spanning the majority of the Island, Hong Kong Tramways operates as strident as
the first journey in 1904. No wider than the shoulder width of 3 adults, the
tram system is frequented by locals and tourists. On a day without
responsibility, ride the full 26km circuit from Kennedy Town to Shau Kei Wan
and back. Observe the speed at which the world around moves, time is money and
so is space.&lt;/p&gt;
&lt;p&gt;Connecting Hong Kong to its most remote districts, the MTR rivals the
efficiency and cleanliness of Singapore's MRT and Tokyo's Metro. Buses run here
too. The service worth noting are the little green or red minibus rocket ships
&amp;mdash; the red ones especially. Without check-pointed stops, one must &lt;em&gt;shout&lt;/em&gt;
where to get off &amp;hellip; in Cantonese of course, or continue the ride on the
world's most cortisol-raising mode of public transport. &lt;/p&gt;
&lt;p&gt;Asking a local friend what to do with my free time, she replied: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Eat." &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From 3 a.m dim sum to afternoon tea at the Peninsula, it is hard to find an
hour without thinking about food. With 92% of GDP composed of services,
fulfilling your daydreams and stomach is never an issue; spending a leisurely
hour on a bowl of cart noodles, is, however. If warm service and patient staff
are &lt;em&gt;essential&lt;/em&gt; to your meal experience, there are plenty of expat-friendly
places that'd gladly offer you an international experience. Old Hong Kong has
no time or space to entertain.&lt;/p&gt;
&lt;p&gt;Owing to the hilly topology, there's no shortage of mountains and peaks in
which the world is seen with childlike awe. Any mountain, hill or peak you
choose (the 19th floor New College pantry anyone?) land, sea and concrete
civilization awaits you at the top. For the adventurous, Hong Kong is hard to
disappoint;  a variety of hiking trails are scattered across the terrain to
roam and explore. &lt;/p&gt;
&lt;p&gt;Sunsets, high and low are once again novel. The wet marshlands of Pak Nai
overlooks to the Shenzhen special economic zone; sun rays reflect off the
marshland plains creating a mirror world below the horizon. The focus shifts to
the mainland after dusk &amp;mdash; across the sea, Shenzhen illuminates the night
with a white halogen glow. The future is just across the water.&lt;/p&gt;
&lt;h4&gt;11/11&lt;/h4&gt;
&lt;p&gt;Mistrust towards the Hong Kong police force grew stronger as the police
increased their aggression on the protestors and the death of Alex Chow, a
HKUST student. On the night before the planned general strike, the police force
stormed a university hall and arrested a student. In response to the invasion,
the universities across Hong Kong barricaded their campuses; road blocks
followed. Peaceful protests continued throughout the week, office workers on
the streets in Central and malls echoing chants of support. Hong Kong's youth,
taking centre stage.&lt;/p&gt;
&lt;p&gt;West Gate entrance, the University of Hong Kong. As police progressed towards
the East gate exit, protestors strengthened their hold on the entrances to the
campus. The empty street decorated with bricks, each block propped upon two
others like legs. By midnight, from Flora Ho to HKU Exit C1, Pok Fu Lam heard
no sirens, all vehicles were re-routed around the campus.&lt;/p&gt;
&lt;p&gt;A car approaches, stops and leaves.&lt;/p&gt;
&lt;p&gt;"They've come to deliver supplies. Food, masks, helmets, water &amp;hellip;" &lt;/p&gt;
&lt;p&gt;There were students no older than 18 at the lookout posts, what do their
parents think? &lt;/p&gt;
&lt;p&gt;"The ones outside support them. When they were our age they fought the same
struggle we did. It's the revolution of our time." &lt;/p&gt;
&lt;h4&gt;Chapter 1, Article 1:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;The Hong Kong Special Administrative Region is an inalienable part of the
People's Republic of China.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For better or for worse, China will not back away from what is theirs. The
people of Hong Kong kindle the flame of hope. However small it is.&lt;/p&gt;
&lt;h4&gt;2047.&lt;/h4&gt;
&lt;p&gt;To some it can't arrive any faster.&lt;/p&gt;
&lt;p&gt;To anyone who can, see for yourself what it is before it is no more.&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Antifragile</title><link href="/antifragile.html" rel="alternate"></link><published>2020-05-26T00:00:00+01:00</published><updated>2020-05-26T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-05-26:/antifragile.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;"Things that gain from disorder"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some things benefit from shocks; they thrive and grow when exposed to
volatility randomness, &amp;hellip; and uncertainty. Yet, in spite of the ubiquity
of the phenomenon, there is no word for the exact opposite of fragile. Lets
call it antifragile.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sword of Damocles.&lt;/p&gt;
&lt;p&gt;Difficulty is what …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;"Things that gain from disorder"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some things benefit from shocks; they thrive and grow when exposed to
volatility randomness, &amp;hellip; and uncertainty. Yet, in spite of the ubiquity
of the phenomenon, there is no word for the exact opposite of fragile. Lets
call it antifragile.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sword of Damocles.&lt;/p&gt;
&lt;p&gt;Difficulty is what wakes up the genius.&lt;/p&gt;
&lt;p&gt;Cato, Roman statesman, looked at comfort as a road to waste.&lt;/p&gt;
&lt;p&gt;Overcompensation, just a form of redundancy. (?)&lt;/p&gt;
&lt;p&gt;Better to be slightly inaudible, less clear. &amp;hellip; One should have enough
self-control to make the audience work hard to listen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lucretius problem&lt;/strong&gt; the fool believes that the tallest mountain in the world
will be equal to the tallest one he has observed.&lt;/p&gt;
&lt;p&gt;&amp;hellip; you do not want to control your reputation, &amp;hellip; focus on altering
your exposure where you're impervious to reputational damage.&lt;/p&gt;
&lt;p&gt;Machines, use it and lose it. Organisms, use it or lose it.&lt;/p&gt;
&lt;p&gt;Mistaking the absence of evidence for evidence of absence.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Buridan's Donkey&lt;/strong&gt; A donkey equally famished and thirsty caught equally
between thirst and hunger will unavoidably die of either. He can be saved
thanks to a random nudge either way.&lt;/p&gt;
&lt;p&gt;You need a name for the colour blue when you build a narrative, but not in
action &amp;mdash; the thinker lacking for a word "blue" is handicapped; not the
doer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Iatrogenics&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agency problem/principal agent problem&lt;/strong&gt;: The agent has personal interests
that are divorced from those of the one using his service (big pharma).&lt;/p&gt;
&lt;p&gt;Make haste slowly, Lao Tsu.&lt;/p&gt;
&lt;p&gt;Procrastination is our natural defense, naturalistic filter, I only write if I
feel like it and only on a subject I feel like writing about.&lt;/p&gt;
&lt;p&gt;I use procrastination as a message from my inner self.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Naturalistic fallacy&lt;/strong&gt; What is natural is not necessarily morally right.&lt;/p&gt;
&lt;p&gt;Our track record in figuring out significant rate events in politics and
economics is not close to zero; it is &lt;em&gt;zero&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Not if but when, safeguarding from negative black swans, smaller nuclear
reactors with enough layers of protection &amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Four quadrant&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Stoicism &amp;mdash; transforms pain into information, mistakes into initiation,
and desire into undertaking.&lt;/p&gt;
&lt;p&gt;The domestication of emotions.&lt;/p&gt;
&lt;p&gt;Seneca, de denificiis (research and read) - bookkeeping.&lt;/p&gt;
&lt;p&gt;Antifragility in purest form, upside-downside asymmetry.&lt;/p&gt;
&lt;p&gt;Seneca's barbell - Prefer to put 90/10 boring cash (protected against
inflation) / risky, maximally risky security cannot lose more than 10%.&lt;/p&gt;
&lt;p&gt;A barbell can be any dual strategy composed of extremes; anything that removes
risk of ruin.&lt;/p&gt;
&lt;p&gt;Insure for black swans, not small probable ones.&lt;/p&gt;
&lt;p&gt;Sinecure cum writing is quite a soothing model.&lt;/p&gt;
&lt;p&gt;[I] find it preferable to work intensely for very short hours then do nothing
for the rest of the time until I recover completely &amp;hellip;&lt;/p&gt;
&lt;p&gt;Maximum weights, effortless long walks.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The option is the agent of antifragility.&lt;/p&gt;
&lt;p&gt;Freedom is the ultimate option.&lt;/p&gt;
&lt;p&gt;Volatility of life helps us to provide information to us about others, but also
about ourselves.&lt;/p&gt;
&lt;p&gt;Party invitation - option.&lt;/p&gt;
&lt;p&gt;Asymmetric in payoff.&lt;/p&gt;
&lt;p&gt;The decision maker focuses on the payoff, the consequences of the actions, the
Aristotelian focuses on right and wrong, raw logic.&lt;/p&gt;
&lt;p&gt;Baconian linear model: academia -&amp;gt; applied science &amp;amp; technology -&amp;gt; application.&lt;/p&gt;
&lt;p&gt;Lecturing birds on how to fly.&lt;/p&gt;
&lt;p&gt;(Suggests the opposite holds for most things, hackers, empirical tinkering.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Epiphenomena&lt;/strong&gt;: Mental affects in the brain doesn't cause physical effects -
theory to application.&lt;/p&gt;
&lt;p&gt;People look for books that support their mental program, not people read books
then develop their ideas&amp;hellip;(?)&lt;/p&gt;
&lt;p&gt;(Argues education does not lead to wealth)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Green lumber fallacy&lt;/strong&gt;:  Mistaking source of necessary knowledge for another,
less tractable, less narratable.&lt;/p&gt;
&lt;p&gt;Difference between narrative and practice &amp;mdash; important things that cannot
be easily narrated, lies in optionality.&lt;/p&gt;
&lt;p&gt;Optionality is Promethean, narratives is Epimethean &amp;mdash; optionality vs
teleological table.&lt;/p&gt;
&lt;p&gt;Tinkering does not rely on narrative being true (Deep learning just &lt;em&gt;works&lt;/em&gt; ?) &lt;/p&gt;
&lt;p&gt;The internet set up as military communication network - DARPA&lt;/p&gt;
&lt;p&gt;Vicars and clergymen leaving recorded traces for prosperity than scientists,
(formally trained, wealthier?) - Bill Bryson &lt;em&gt;Home&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Joseph Needham, Chinese science, top-down dictation, lack of European
tinkering.&lt;/p&gt;
&lt;p&gt;You bet on the jockey not the horse &amp;mdash; innovations drift, one needs
flaneur-like abilities to innovate.&lt;/p&gt;
&lt;p&gt;The payoff can be so large that you can not afford not to be in everything.&lt;/p&gt;
&lt;p&gt;The pin does not have a single maker but 25 persons involved.&lt;/p&gt;
&lt;p&gt;Cannot centralize innovation.&lt;/p&gt;
&lt;p&gt;Rigid plans lead to option-blindness.&lt;/p&gt;
&lt;p&gt;Antifragile: good news tends to be absent from past data (positive asymmetry).&lt;/p&gt;
&lt;p&gt;Romans were anti-theoretical pragmatic bunch, Arabs loved everything scientific
and philosophical.&lt;/p&gt;
&lt;p&gt;Lions in captivity live longer; technically richer and guaranteed job security
for life, if these criteria you are focusing on&amp;hellip;&lt;/p&gt;
&lt;p&gt;Be bored with a specific book not the act of reading.&lt;/p&gt;
&lt;p&gt;&amp;hellip; reading hours between thirty to sixty a week.&lt;/p&gt;
&lt;p&gt;When one could write essays with a rich, literary, but precise vocabulary and
maintain coherence, what one writes becomes secondary and the examiners get a
hint about ones style.&lt;/p&gt;
&lt;p&gt;Nonnerdy applied maths:find a problem, figure out maths that solves that
problem than studying in a vacuum.&lt;/p&gt;
&lt;p&gt;Severe mistake in life is to mistake the unintelligible for the unintelligent.&lt;/p&gt;
&lt;p&gt;Fat tony, never lets the other person frame the question, an answer is planted
in every  question; never respond with a straight answer that makes no sense to
you.&lt;/p&gt;
&lt;p&gt;What is not intelligible to me is not necessarily unintelligent.&lt;/p&gt;
&lt;p&gt;The birth of tragedy, Apollonian vs Dionysian, yang without yin.&lt;/p&gt;
&lt;p&gt;Traditions provide an aggregation of filtered collective knowledge.&lt;/p&gt;
&lt;p&gt;Focus on the payoff instead of the structure of the world.&lt;/p&gt;
&lt;p&gt;Listing decisions you made in the past week, you decided based on fragility not
probability.&lt;/p&gt;
&lt;p&gt;Instead of, we need better computation to predict black swans, modify your
exposure and learn to get out of trouble, traditional heuristics and religion
teaches us well.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Size hurts you at times of stress.&lt;/p&gt;
&lt;p&gt;Adding uncertainty to projects causes them to take longer to complete.&lt;/p&gt;
&lt;p&gt;How to lose a grandmother. (average temperature of 20 degrees)&lt;/p&gt;
&lt;p&gt;More non linear, less important is the average, stability around average.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Statues are carved by subtraction.&lt;/p&gt;
&lt;p&gt;Michelangelo was asked about the secret of his genius, &amp;hellip; particularly
how he carved the statue of David. &amp;hellip; It's simple. I just remove
everything that is not David.&lt;/p&gt;
&lt;p&gt;You have to pick carefully, I am as proud of the things we haven't done as the
things I have done. Innovation is saying no to 1,000 things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bergson's Razor&lt;/strong&gt;: A philosopher should be known for one single idea, not
more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lindy Effect&lt;/strong&gt;: Things that have stood the test of time.&lt;/p&gt;
&lt;p&gt;&amp;hellip; make them read the classics. The future is in the past.&lt;/p&gt;
&lt;p&gt;Another mental bias in overhyping technology comes from the fact we notice
change, not statics.&lt;/p&gt;
&lt;p&gt;&amp;hellip; you lost 10,000  vs your portfolio was 785,000 and is now 775,000.&lt;/p&gt;
&lt;p&gt;New things will lose their novelty, &lt;em&gt;treadmill effect&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I also enjoy writing facing trees, and, if possible, wild untamed gardens with
ferns.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How Buildings Learn&lt;/em&gt;, Stewart Brand&lt;/p&gt;
&lt;p&gt;There was so much traffic in London because people wanted to be there, being
there exceeds the cost.&lt;/p&gt;
&lt;p&gt;Time can act as a cleanser of noise by confining into dustbins all these
overhyped works.&lt;/p&gt;
&lt;p&gt;&amp;hellip; student (who was studying economics)&amp;hellip; what to read? "As little
as feasible from the last twenty years, except history books that are not about
the last fifty years,"&lt;/p&gt;
&lt;p&gt;The original role of the prophet, to warn not to predict. And predict
calamities if people didn't listen.&lt;/p&gt;
&lt;p&gt;If something has been around for a very, very long time then irrational or not,
you can expect it to stick around much longer,&lt;/p&gt;
&lt;p&gt;Extension of &lt;em&gt;via negativa&lt;/em&gt; and Fat Tony's &lt;em&gt;don't be a sucker&lt;/em&gt; rule,
non-natural needs to prove its benefits, not the natural&lt;/p&gt;
&lt;p&gt;The swelling Mother Nature gave me, not directly caused by the trauma but my
body's response to the injury.&lt;/p&gt;
&lt;p&gt;Of the drugs available today, I can hardly find a &lt;em&gt;via positiva&lt;/em&gt; one that makes
a healthy person unconditionally "better".&lt;/p&gt;
&lt;p&gt;&amp;hellip; lobbying for reclassifications of conditions, and fine-tuning sales
tricks to get doctors to overprescribe.&lt;/p&gt;
&lt;p&gt;If the patient is near healthy, then Mother Nature should be the doctor.&lt;/p&gt;
&lt;p&gt;&amp;hellip; if the person is very ill, there are no iatrogenics to worry about.&lt;/p&gt;
&lt;p&gt;If there is something in nature you don't understand, odds are it makes sense
in a deeper way that is beyond your understanding.&lt;/p&gt;
&lt;p&gt;What Mother Nature does is rigorous until proven otherwise; what humans and
science do is flawed until proven otherwise.&lt;/p&gt;
&lt;p&gt;If true wealth consists in worriless sleeping, clear conscience, reciprocal
gratitude, &amp;hellip;, good bowel movements, no meeting rooms and periodic
surprises, then it is largely subtractive (elimination of iatrogenics).&lt;/p&gt;
&lt;p&gt;I believe in heuristics of religion and blindly accommodate its rules.&lt;/p&gt;
&lt;p&gt;Cretans, &amp;hellip; they lived longer because of the types of food they consumed.
It could be true, but the second-order effect (the variations in intake) could
be dominant,&lt;/p&gt;
&lt;p&gt;Walking effortlessly, &amp;hellip; as I speculate, is necessary for humans, perhaps
as necessary as sleep.&lt;/p&gt;
&lt;p&gt;We live to improve on information, or improve on it.&lt;/p&gt;
&lt;p&gt;Nietzsche had the Latin pun, &lt;em&gt;aut liberi, aut libri&lt;/em&gt;, either children or books.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;For heroism is the exact inverse of the agency problem: someone bears the
disadvantage for the sake of others.&lt;/p&gt;
&lt;p&gt;A half-person is not someone who does not have an opinion, just someone who
does not take risks for it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;megalopsychon&lt;/em&gt;, a sense of grandeur that was superseded by the Christian value
of "humility". &amp;hellip; If you take risks and face your fate with dignity,
there is nothing you can do that makes you small; if you don't take risks,
there is nothing you can do that makes you grand, nothing. And when you take
risks, insults by half-men are similar to barks by nonhuman animals: you can't
feel insulted by a dog.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hammurabi's code&lt;/strong&gt;: If a builder builds a house and the house collapses and
causes the death of the owner, the builder shall be put to death.&lt;/p&gt;
&lt;p&gt;People voting for war need to have at least one descendant (child or
grandchild) exposed to combat.&lt;/p&gt;
&lt;p&gt;Never ask the doctor what you should do. Ask him what &lt;em&gt;he&lt;/em&gt; would do if he were
in your place.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;How poetry can kill you&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;[Humanity started] at the rank of an idle freeman, unpreoccupied with work. It
never meant &lt;em&gt;not&lt;/em&gt; working; it just meant not deriving your personal and
emotional identity from your work, and viewing work as something optional, more
like a hobby. In a way your profession does not identify you so much as other
attributes.&lt;/p&gt;
&lt;p&gt;&amp;hellip; if for the Greeks, only he who is free with his time is free with his
opinion, for our horizontal friend and advisor, only he who has courage is free
with his opinion. &lt;/p&gt;
&lt;p&gt;The best way of checking if you are alive is by checking if you live
variations. Remember that food would not have a taste if it weren't for hunger.&lt;/p&gt;</content><category term="Book Notes"></category></entry><entry><title>Python Idioms</title><link href="/python-idioms.html" rel="alternate"></link><published>2020-03-22T00:00:00+00:00</published><updated>2020-03-22T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-03-22:/python-idioms.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;A collection of python idioms and design patterns&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;What idioms should I use to make my code easier to read?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Build strings as a list and use &lt;code&gt;''.join&lt;/code&gt; at the end.p&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Join is a string method called on the separator, not the list. Calling it from
the empty string …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;A collection of python idioms and design patterns&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;What idioms should I use to make my code easier to read?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Build strings as a list and use &lt;code&gt;''.join&lt;/code&gt; at the end.p&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Join is a string method called on the separator, not the list. Calling it from
the empty string concatenates the pieces with no separator, which is a Python
quirk and rather surprising at first. This is important: &lt;strong&gt;string building with
+ is quadratic time instead of linear!&lt;/strong&gt; If you learn one idiom, learn this
  one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wrong:&lt;/strong&gt; &lt;code&gt;for s in strings: result += s&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Right:&lt;/strong&gt; &lt;code&gt;result = ''.join(strings)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use &lt;code&gt;in&lt;/code&gt; wherever possible.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use &lt;code&gt;if not x&lt;/code&gt; instead of &lt;code&gt;if x == 0&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To reverse-sort a list, use: &lt;code&gt;list.sort()&lt;/code&gt; or &lt;code&gt;list.reverse()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Catch errors rather than avoiding them to avoid cluttering your code with
special cases.  This idiom is called EAFP ('easier to ask forgiveness than
permission'), as opposed to LBYL ('look before you leap').
This often makes the code more readable. For example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worse:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#check whether int conversion will raise an error&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="c1"&gt;#too many digits for int conversion&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Better:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ne"&gt;OverflowError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#int conversion failed&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;What techniques should I use to make my code run faster?&lt;/h3&gt;
&lt;p&gt;Profile before optimizing for speed: optimize for readability first&lt;/p&gt;
&lt;p&gt;Build strings as a list and use &lt;code&gt;''.join()&lt;/code&gt; at the end. &lt;strong&gt;(Super important)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use &lt;code&gt;map&lt;/code&gt; and/or &lt;code&gt;filter&lt;/code&gt; to apply functions to lists.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt; applies a function to each item in a list (technically, sequence) and
returns a list of the results.&lt;br&gt;
&lt;code&gt;filter&lt;/code&gt; applies a function to each item in a sequence, and returns a list
containing only those items for which the function evaluated True (using the
&lt;strong&gt;nonzero&lt;/strong&gt; built-in method).&lt;br&gt;
These functions can make code much shorter. 
They also make it much faster, since the loop takes place entirely in the C API
and never has to bind loop variables to Python objects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worse:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Better:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;strong&gt;Use function factories to create utility functions.&lt;/strong&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;multiply_by_field&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fieldname&lt;/span&gt;, &lt;span class="nv"&gt;multiplier&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
    &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Returns function that multiplies field &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;fieldname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; by multiplier.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;multiplier&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;getattr&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;, &lt;span class="nv"&gt;fieldname&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;multiplier&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;multiplier&lt;/span&gt;

&lt;span class="nv"&gt;triple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;multiply_by_field&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Count&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;quadruple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;multiply_by_field&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Count&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;halve_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;multiply_by_field&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Sum&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;python file names &lt;code&gt;calc_squares.py&lt;/code&gt; over &lt;code&gt;calc-squares.py&lt;/code&gt; as second cannot be
imported though single name module names are best.&lt;/p&gt;
&lt;h3&gt;packagin packages&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
  &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;        &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="n"&gt;functions&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;           &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;subdir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
     &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;     &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;package&lt;/span&gt;
&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;package.other&lt;/span&gt;
&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;package.subdir&lt;/span&gt;
&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subdir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;note:&lt;/em&gt; hierarchies of packages more than two deep are annoying to develop on&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; &lt;/span&gt;
&lt;span class="sd"&gt;Docstrings&lt;/span&gt;
&lt;span class="sd"&gt;---------&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;Good&amp;quot; docstring coding is used to provide additional information about functionality &lt;/span&gt;
&lt;span class="sd"&gt;beyond what can be discovered automatically by introspection&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;testing, testing, testing...&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;An Introduction to Testing Concepts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unit tests are tests for fairly small and specific units of functionality.
Functional tests test entire functional paths through your code. 
Regression tests make sure that (within the resolution of your records) your program's output has not changed.&lt;/p&gt;
&lt;p&gt;All three types of tests are necessary in different ways.&lt;/p&gt;
&lt;p&gt;Regression tests tell you when unexpected changes in behavior occur, and can
reassure you that your basic data processing is still working.  For scientists,
this is particularly important if you are trying to link past research results
to new research results: if you can no longer replicate your original results
with your updated code, then you must regard your code with suspicion, unless
the changes are intentional.&lt;/p&gt;
&lt;p&gt;Both unit and functional tests tend to be expectation based.  you use the tests
to lay out what behavior you expect from your code, and write your tests so
that they assert that those expectations are met.&lt;/p&gt;
&lt;p&gt;Unit tests tend to be much shorter and require less setup and teardown, while
functional tests can be quite long.  functional tests tell you when your code
is broken, while unit tests tell you where your code is broken.  because of the
finer granularity of unit tests, a broken unit test can identify a particular
piece of code as the source of an error, while functional tests merely tell you
that a feature is broken.&lt;/p&gt;
&lt;h3&gt;Adding tests to existing project&lt;/h3&gt;
&lt;p&gt;First, start by writing a test for each bug as they are discovered.
isolate the cause of the bug; write a test that demonstrates the bug; fix the
bug; verify that the test passes.&lt;/p&gt;
&lt;p&gt;Next, take out some time -- half a day or so -- and write fixtures and
functional tests for some small chunk of code; if you can, pick a piece of code
that you're planning to clean up or extend. Don't worry about being exhaustive,
just write tests that target the main point of the code that you're working on.&lt;/p&gt;
&lt;p&gt;Repeat this a few times. &lt;/p&gt;
&lt;p&gt;Use code coverage analysis to analyze what code your tests cover, and what code
isn't covered.  At this point you can take a targetted approach and spend some
time writing tests aimed directly at uncovered areas of code.  There should now
be tests that cover 30-50% of your code, at least (it's very easy to attain
this level of code coverage!).&lt;/p&gt;
&lt;p&gt;Once you've reached this point, you can either decide to focus on increasing
your code coverage, or you can simply continue incrementally constraining your
code by writing tests for bugs and new features.  Assuming you have a fairly
normal code churn, you should get to the point of 70-80% coverage within a few
months to a few years (depending on the size of the project!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache decorator&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;simple_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new_fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FOUND IN CACHE; RETURNING&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# otherwise, call function &amp;amp; record value&lt;/span&gt;
        &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_fn&lt;/span&gt;
&lt;span class="nd"&gt;@simplecache&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This approach is effective because at each stage you get immediate feedback
from your efforts, and it's easier to justify to managers than a whole-team
effort to add testing. Plus, if you're unfamiliar with testing or with parts of
the code base, it gives you time to adjust and adapt your approach to the needs
of the particular project.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;see also: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_O23jIXsshs"&gt;10 tips for pythonic code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mikeckennedy/ten-tips-for-pythonic-code-jetbrains-webcast/blob/master/"&gt;ten-tips-for-pythonic-coten-tips-for-pythonic-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category></entry><entry><title>grok the term</title><link href="/grok-the-term.html" rel="alternate"></link><published>2020-01-29T00:00:00+00:00</published><updated>2020-12-26T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-29:/grok-the-term.html</id><summary type="html">&lt;p&gt;A few minutes into a conversation about &lt;a href=""&gt;why I use Linux&lt;/a&gt;, I am hit with the question. &lt;em&gt;So what is&lt;/em&gt; a terminal?&lt;/p&gt;
&lt;p&gt;looking at a segment of &lt;code&gt;pstree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ├─st───zsh───tmux: client
 └─st───zsh───pstree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see htop running on this terminal.&lt;/p&gt;
&lt;p&gt;Now if we look at the process …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few minutes into a conversation about &lt;a href=""&gt;why I use Linux&lt;/a&gt;, I am hit with the question. &lt;em&gt;So what is&lt;/em&gt; a terminal?&lt;/p&gt;
&lt;p&gt;looking at a segment of &lt;code&gt;pstree&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ├─st───zsh───tmux: client
 └─st───zsh───pstree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see htop running on this terminal.&lt;/p&gt;
&lt;p&gt;Now if we look at the process tree below&amp;hellip;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; ─firefox─┬─Privileged Cont───20*&lt;span class="o"&gt;[{&lt;/span&gt;Privileged Cont&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─Web Content───26*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─2*&lt;span class="o"&gt;[&lt;/span&gt;Web Content───23*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]]&lt;/span&gt;
          ├─2*&lt;span class="o"&gt;[&lt;/span&gt;Web Content───24*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]]&lt;/span&gt;
          ├─Web Content───15*&lt;span class="o"&gt;[{&lt;/span&gt;Web Content&lt;span class="o"&gt;}]&lt;/span&gt;
          ├─WebExtensions───22*&lt;span class="o"&gt;[{&lt;/span&gt;WebExtensions&lt;span class="o"&gt;}]&lt;/span&gt;
          └─79*&lt;span class="o"&gt;[{&lt;/span&gt;firefox&lt;span class="o"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Woah&lt;/em&gt;, a lot more processes.&lt;/p&gt;
&lt;p&gt;Firefox uses a &lt;em&gt;graphical user interface (GUI)&lt;/em&gt; which runs more programs for user accessibility. &lt;/p&gt;
&lt;p&gt;By interacting with a terminal, I reduce the need to expend resources at the expense of learning a new skill.&lt;/p&gt;
&lt;p&gt;Consider another example. Using Notepad++ and Vim. Or Vim and gVim (vim running with a GUI).
Scaling up, we get to a desktop with its clickable menus and convenient taskbar. &lt;/p&gt;
&lt;p&gt;For a laptop that is 10 years old, extra processes takes it's toll.&lt;br&gt;
I also only use a handful of applications: text-editor, file manager, music player, pdf viewer. Everything else is online. &lt;/p&gt;
&lt;p&gt;No desktop, minimal GUI, only the applications I need.&lt;/p&gt;
&lt;p&gt;I think Bruce Lee sums it up well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Absorb what is useful, discard what is useless and add what is specifically your own.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="blog"></category></entry><entry><title>The Year of Creating</title><link href="/the-year-of-creating.html" rel="alternate"></link><published>2020-01-29T00:00:00+00:00</published><updated>2020-01-29T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-29:/the-year-of-creating.html</id><summary type="html">&lt;h3&gt;It's not too late for new years resolutions!&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Lunar_calendar"&gt;New Years&lt;/a&gt; have arrived
and I'm still without a goal to chase. An accomplishment to achieve by the end
of the year.&lt;/p&gt;
&lt;p&gt;From the CGP Grey video I have decided to make it the year of creating.&lt;/p&gt;
&lt;p&gt;Resolutions are hard rules …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;It's not too late for new years resolutions!&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Lunar_calendar"&gt;New Years&lt;/a&gt; have arrived
and I'm still without a goal to chase. An accomplishment to achieve by the end
of the year.&lt;/p&gt;
&lt;p&gt;From the CGP Grey video I have decided to make it the year of creating.&lt;/p&gt;
&lt;p&gt;Resolutions are hard rules to follow.  Humans aren't too good at sticking to
hard rules.  Instead, yearly themes are substituted as a way of defining our
yearly goals.&lt;/p&gt;
&lt;p&gt;The beauty of themes is that they aren't strictly defined. This plays well with
ever changing goals and circumstances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So why creating?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For months, I have been meaning to improve my ability to communicate well
through writing. So far, not much has been produced in terms of publishable
content. I hope to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Increase the amount of written files I produce.&lt;/strong&gt; Whether that is on daily
  entries on how I feel, technical topics accessible to anyone literate or an
  interesting insight that I would like to review and document in my own words.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Refine and edit new and existing pieces.&lt;/strong&gt; Removing unnecessary words. Not
  being afraid of reading material from my past self.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will be an interesting to see where the year of creativity will take me. &lt;/p&gt;
&lt;p&gt;What goals will I have achieved and how will I define creating in 12 months.  &lt;/p&gt;
&lt;p&gt;To a year of creating!&lt;/p&gt;</content><category term="Review"></category></entry><entry><title>Designs That Don't Suck</title><link href="/designs-that-dont-suck.html" rel="alternate"></link><published>2020-01-28T00:00:00+00:00</published><updated>2020-01-28T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-28:/designs-that-dont-suck.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.curiositry.com/designs-that-don-t-suck/"&gt;some useful advice&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ample leading&lt;/h2&gt;
&lt;p&gt;Set our leading (line-height) to 120-145% of your base font size. Give your words room to breathe.&lt;/p&gt;
&lt;h2&gt;Alignment&lt;/h2&gt;
&lt;p&gt;Everything should look in place. Ideally, use a grid and typographic scale. Align body text left.&lt;/p&gt;
&lt;h2&gt;Line-length&lt;/h2&gt;
&lt;p&gt;Aim for 40-90 characters per line  &lt;/p&gt;
&lt;h2&gt;Readable text size&lt;/h2&gt;
&lt;p&gt;For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.curiositry.com/designs-that-don-t-suck/"&gt;some useful advice&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Ample leading&lt;/h2&gt;
&lt;p&gt;Set our leading (line-height) to 120-145% of your base font size. Give your words room to breathe.&lt;/p&gt;
&lt;h2&gt;Alignment&lt;/h2&gt;
&lt;p&gt;Everything should look in place. Ideally, use a grid and typographic scale. Align body text left.&lt;/p&gt;
&lt;h2&gt;Line-length&lt;/h2&gt;
&lt;p&gt;Aim for 40-90 characters per line  &lt;/p&gt;
&lt;h2&gt;Readable text size&lt;/h2&gt;
&lt;p&gt;For print, 10-14 pt. On screen, 16-24 pt for body text.&lt;/p&gt;
&lt;h2&gt;Quality Typefaces&lt;/h2&gt;
&lt;p&gt;Regular, bold and italic variants are essential.&lt;/p&gt;
&lt;h2&gt;White Space&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;</content><category term="blog"></category><category term="design"></category></entry><entry><title>An English Wood</title><link href="/an-english-wood.html" rel="alternate"></link><published>2020-01-27T10:25:00+00:00</published><updated>2020-01-27T10:25:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2020-01-27:/an-english-wood.html</id><summary type="html">&lt;h5&gt;by Robert Greaves&lt;/h5&gt;
&lt;p&gt;This valley wood is pledged&lt;br&gt;
To the set shape of things,&lt;br&gt;
And reasonably hedged:&lt;br&gt;
Here are no harpies fledged,&lt;br&gt;
No rocs may clap their wings,&lt;br&gt;
Nor gryphons wave their stings.&lt;br&gt;
Here, poised in quietude,&lt;br&gt;
Calm elementals brood&lt;br&gt;
On the set shape of things:&lt;br&gt;
They fend away alarms …&lt;/p&gt;</summary><content type="html">&lt;h5&gt;by Robert Greaves&lt;/h5&gt;
&lt;p&gt;This valley wood is pledged&lt;br&gt;
To the set shape of things,&lt;br&gt;
And reasonably hedged:&lt;br&gt;
Here are no harpies fledged,&lt;br&gt;
No rocs may clap their wings,&lt;br&gt;
Nor gryphons wave their stings.&lt;br&gt;
Here, poised in quietude,&lt;br&gt;
Calm elementals brood&lt;br&gt;
On the set shape of things:&lt;br&gt;
They fend away alarms&lt;br&gt;
From this green wood.&lt;br&gt;
Here nothing is that harms –&lt;br&gt;
No bulls with lungs of brass,&lt;br&gt;
No toothed or spiny grass,&lt;br&gt;
No tree whose clutching arms&lt;br&gt;
Drink blood when travellers pass,&lt;br&gt;
No mount of glass;&lt;br&gt;
No bardic tongues unfold&lt;br&gt;
Satires or charms.&lt;br&gt;
Only, the lawns are soft,&lt;br&gt;
The tree-stems, grave and old;&lt;br&gt;
Slow branches sway aloft,&lt;br&gt;
The evening air comes cold,&lt;br&gt;
The sunset scatters gold.&lt;br&gt;
Small grasses toss and bend,&lt;br&gt;
Small pathways idly tend&lt;br&gt;
Towards no fearful end.  &lt;/p&gt;</content><category term="blog"></category><category term="Poem"></category></entry><entry><title>Learning to Learn</title><link href="/learning-to-learn.html" rel="alternate"></link><published>2019-07-20T00:00:00+01:00</published><updated>2022-01-01T00:00:00+00:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2019-07-20:/learning-to-learn.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Notes from the Coursera Course: Learning How to Learn&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;1. What is Learning&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FOCUSED&lt;/strong&gt; and &lt;strong&gt;DIFFUSE&lt;/strong&gt; mode.&lt;/p&gt;
&lt;p&gt;When learning, its best to make use of both modes, switching between focused and diffuse mode thinking.&lt;/p&gt;
&lt;p&gt;When learning, there are times in which you are focused and times in which you allow …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Notes from the Coursera Course: Learning How to Learn&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;1. What is Learning&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FOCUSED&lt;/strong&gt; and &lt;strong&gt;DIFFUSE&lt;/strong&gt; mode.&lt;/p&gt;
&lt;p&gt;When learning, its best to make use of both modes, switching between focused and diffuse mode thinking.&lt;/p&gt;
&lt;p&gt;When learning, there are times in which you are focused and times in which you allow your mind to wander.  &lt;/p&gt;
&lt;p&gt;This unfocused, or diffused, mode is just as valuable as the focused mode in allowing your brain to LEARN something. &lt;/p&gt;
&lt;p&gt;Take breaks, meditate, think about other things, and give yourself plenty of time in both modes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WORKING (short term)&lt;/strong&gt; and &lt;strong&gt;LONG TERM&lt;/strong&gt; memory&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SLEEP&lt;/strong&gt; - vital.&lt;/p&gt;
&lt;h2&gt;2. Chunking&lt;/h2&gt;
&lt;p&gt;The act of grouping concepts into compact packages of information.&lt;/p&gt;
&lt;p&gt;Don't always trust your initial intuition. Einstellung problem (a German word for Mindset). &lt;/p&gt;
&lt;p&gt;An idea or a neural pattern you developed might prevent a new better idea from being found.  &lt;/p&gt;
&lt;p&gt;Your initial intuition on what you need to be doing is misleading. &lt;/p&gt;
&lt;p&gt;You've to unlearn old ideas and approaches as you are learning new ones.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Master the main idea - survey and priming 
    — this involves scanning a book or the syllabus of a course, for example, to get a general idea of the bigger picture. &lt;/li&gt;
&lt;li&gt;Observe an example. Then, do it yourself. &lt;/li&gt;
&lt;li&gt;Finally, do it again and again in different contexts.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Techniques&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Recall&lt;/strong&gt; - a couple of minutes to summarise/recall material you're trying to learn&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bite sized Testing&lt;/strong&gt; - test yourself as you encounter new material, Recall is a testing technique&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interleaving&lt;/strong&gt; - know when to apply a particular concept is as important as knowing how.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Spaced_repetition"&gt;Spaced Repetition&lt;/a&gt;&lt;/strong&gt; - vary the frequency of revisiting material based on how well you can recall (&lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not important to pass the test without mistakes. Mistakes and correcting them are important to solidify learning&lt;/p&gt;
&lt;p&gt;Metaphors and analogies - Feynman technique&lt;/p&gt;
&lt;p&gt;Brief notes that summarise key concepts are more effective that highlighting&lt;/p&gt;
&lt;p&gt;Illusion of competence: don't repeat easy topics&lt;/p&gt;
&lt;h2&gt;3. Procrastination and Memory&lt;/h2&gt;
&lt;h4&gt;Procrastination&lt;/h4&gt;
&lt;p&gt;Weekly/Daily list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write your daily list the evening before. Not writing them down will take up valuable slots of memory.&lt;/li&gt;
&lt;li&gt;Set aside 30–60 minutes every day for each task.&lt;/li&gt;
&lt;li&gt;Plan your finishing time, just as important as planning your working time.&lt;/li&gt;
&lt;li&gt;Eat the frog - Work in the most important and most disliked task first, even if it’s only one pomodoro.&lt;/li&gt;
&lt;li&gt;Take notes about what works and what doesn't.&lt;/li&gt;
&lt;li&gt;Have a backup plan for when you will still procrastinate.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Memory&lt;/h4&gt;
&lt;p&gt;Creativity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A better short term/working memory makes it harder to be creative. it is more likely to experience Einstellung as it will pick up new concepts very quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A smaller working memory means you can generalise your learning into new, creative combinations. You can get more inputs from the brain due to the memories being less tightly locked in. Your brain is used to being creative with the small amounts of memory it can work on at any period of time. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. Renaissance Learning and Unlocking Potential&lt;/h2&gt;
&lt;p&gt;You learn complex concepts by trying to make sense out of the information you perceive. Not by having someone else telling it to you.&lt;/p&gt;
&lt;p&gt;Metaphors and analogies are very helpful, not only to memorize, but to also understand different concepts. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Deliberate practice&lt;/strong&gt; is what helps the average brain lift into the realm of those naturally gifted. Practising certain mental patterns deepens your mind.&lt;/p&gt;
&lt;p&gt;The key to success is &lt;strong&gt;perseverance, taking responsibility for their learning and changing their thoughts.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hard start - Jump to easy&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start on the hardest problem first and move to easy one once you get stuck/lose momentum&lt;/li&gt;
&lt;li&gt;Let diffuse mode work on the harder problem&lt;/li&gt;
&lt;/ul&gt;</content><category term="blog"></category></entry><entry><title>Grow the Tree</title><link href="/grow-the-tree.html" rel="alternate"></link><published>2019-07-05T00:00:00+01:00</published><updated>2020-05-15T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2019-07-05:/grow-the-tree.html</id><summary type="html">&lt;p&gt;My decision to take up writing has led me to sporadically output what pops into
my head when I'm near my Pentel 205, Pilot G5 and A6 notepad or sat in front of
the keyboard of my laptop.&lt;/p&gt;
&lt;p&gt;It's caused me to forget many important-at-the-time insights that may return
one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My decision to take up writing has led me to sporadically output what pops into
my head when I'm near my Pentel 205, Pilot G5 and A6 notepad or sat in front of
the keyboard of my laptop.&lt;/p&gt;
&lt;p&gt;It's caused me to forget many important-at-the-time insights that may return
one day. I've grown a habit of starting many 'threads' and leaving them to
hang. &lt;/p&gt;
&lt;p&gt;I say this as I just interrupted another reflection on stray cats.&lt;/p&gt;
&lt;p&gt;It's not too dissimilar to how brains naturally process thoughts. Non-linear.
Weaving from topic to topic, falling short to fully resolve an idea before
moving onto the next. At this current stage of romantic novelty, I am far from
creating a strict routine in which I can consistently churn out lines of text. &lt;/p&gt;
&lt;p&gt;That was my original point of this script. Beginning to write is often the
hardest step. Writer's block is real. However, when the moment arrives and the
flood gates are let loose, let loose. Don't try to contain the stream of
consciousness, apply pen to paper, fingertips to the keyboard. &lt;/p&gt;
&lt;p&gt;I say this while still avoiding the topic title. &lt;/p&gt;
&lt;p&gt;Grow the tree, whip up a first draft. Sure there'll be reams of content you'll
want to cut out, paragraphs that will need to be edited but that comes after
with pruning your tree. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img alt="tree, poem" src="images/grow-the-tree.jpg"&gt;&lt;/p&gt;</content><category term="blog"></category></entry><entry><title>Testing the Waters</title><link href="/testing-the-waters.html" rel="alternate"></link><published>2019-06-19T00:00:00+01:00</published><updated>2020-08-26T00:00:00+01:00</updated><author><name>Nehemiah Tang-Campbell</name></author><id>tag:None,2019-06-19:/testing-the-waters.html</id><summary type="html">&lt;h2&gt;Exploration in markdown&lt;/h2&gt;
&lt;p&gt;This article is a test post. I'm currently trying to configure writing blog
posts in markdown to be rendered to html. &lt;/p&gt;
&lt;p&gt;The blog will be an &lt;strong&gt;exploration&lt;/strong&gt; of the many novel or re-occurring thoughts
I have.&lt;/p&gt;
&lt;p&gt;At first, many of the posts will be reflection on interesting …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Exploration in markdown&lt;/h2&gt;
&lt;p&gt;This article is a test post. I'm currently trying to configure writing blog
posts in markdown to be rendered to html. &lt;/p&gt;
&lt;p&gt;The blog will be an &lt;strong&gt;exploration&lt;/strong&gt; of the many novel or re-occurring thoughts
I have.&lt;/p&gt;
&lt;p&gt;At first, many of the posts will be reflection on interesting insights from
other blogs or books.  There will be heavy influences from the various blogs I
frequently browse. Some notable mentions:    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sivers.org/" title="Derek Sivers"&gt;Derek Sivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.z3bra.org/"&gt;z3bra.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://paulgraham.com/" title="Paul Graham"&gt;Paul Graham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://meltingasphalt.com/" title="Kevin Simler"&gt;Melting Asphalt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I plan on creating a section on book notes (one step at a time!).&lt;/p&gt;
&lt;p&gt;The Fibonacci sequence is defined
&lt;/p&gt;
&lt;div class="math"&gt;$$F_0 = 1, F_1 = 1$$&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="math"&gt;$$F_n = F_{n-1} + F_{n-1}$$&lt;/div&gt;
&lt;p&gt;for &lt;span class="math"&gt;\(n &amp;gt; 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="ow"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="ow"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt;
&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h2&gt;Text Elements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="#"&gt;a element&lt;/a&gt; and &lt;a href="http://example.com"&gt;external a element&lt;/a&gt; examples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;abbr&gt;abbr element&lt;/abbr&gt; and an &lt;abbr title="Abbreviation"&gt;abbr&lt;/abbr&gt; element with title examples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;acronym title="A Cowboy Ran One New York Marathon"&gt;ACRONYM&lt;/acronym&gt; element example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;b element&lt;/strong&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;cite&gt;cite element&lt;/cite&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;code element&lt;/code&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;data value="3967381398"&gt;data element&lt;/data&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;del&gt;del element&lt;/del&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;dfn&gt;dfn element&lt;/dfn&gt; and &lt;dfn title="Title text"&gt;dfn element with title&lt;/dfn&gt; examples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;em element&lt;/em&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;i element&lt;/em&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;ins&gt;ins element&lt;/ins&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;kbd&gt;kbd element&lt;/kbd&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;mark&gt;mark element&lt;/mark&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;q&gt;q element&lt;/q&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;q&gt;q element &lt;q&gt;inside&lt;/q&gt; a q element&lt;/q&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;s&gt;s element&lt;/s&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;samp&gt;samp element&lt;/samp&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;small&gt;small element&lt;/small&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;span&gt;span element&lt;/span&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;strong element&lt;/strong&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;sub&gt;sub element&lt;/sub&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;sup&gt;sup element&lt;/sup&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;time datetime="2005-05-15 19:00"&gt;time element&lt;/time&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;u&gt;u element&lt;/u&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;var&gt;var element&lt;/var&gt; example&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;List Types&lt;/h2&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;ol&gt;
&lt;li&gt;List Item 2.1&lt;/li&gt;
&lt;li&gt;List Item 2.2&lt;ol&gt;
&lt;li&gt;List Item 2.2.1&lt;/li&gt;
&lt;li&gt;List Item 2.2 2&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;List Item 2.3&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List Item 1&lt;/li&gt;
&lt;li&gt;List Item 2&lt;ul&gt;
&lt;li&gt;List Item 2.1&lt;/li&gt;
&lt;li&gt;List Item 2.2&lt;ul&gt;
&lt;li&gt;List Item 2.2.1&lt;/li&gt;
&lt;li&gt;List Item 2.2 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;List Item 2.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;List Item 3&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Tables&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Table Header 1&lt;/th&gt;
&lt;th&gt;Table Header 2&lt;/th&gt;
&lt;th&gt;Table Header 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Division 1&lt;/td&gt;
&lt;td&gt;Division 2&lt;/td&gt;
&lt;td&gt;Division 3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Finally a quote about ends:   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you reach the end of your rope, tie a knot in it and hang on. 
&amp;mdash; Franklin D. Roosevelt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Test"></category></entry></feed>